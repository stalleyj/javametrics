; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\j9\methods\MethodLookupProvider.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
_BSS	SEGMENT
?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A DD 01H DUP (?) ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
_BSS	ENDS
CONST	SEGMENT
$SG99766 DB	'methodlookup', 00H
	ORG $+3
$SG99796 DB	'Method Lookup', 00H
	ORG $+2
$SG99814 DB	'methoddictionary', 00H
	ORG $+3
$SG99815 DB	'Method lookup data which maps hex value to method data', 00H
	ORG $+1
$SG99834 DB	'processing received message', 00H
$SG99862 DB	'methoddictionary', 00H
	ORG $+3
$SG100290 DB	'receiveMessage got lock', 00H
$SG100694 DB	'receiveMessage releasing lock', 00H
	ORG $+2
$SG100696 DB	'receiveMessage lock released', 00H
	ORG $+3
$SG100700 DB	'headless', 00H
	ORG $+3
$SG100705 DB	'in getAllMethodIDs', 00H
	ORG $+1
$SG100713 DB	'GetLoadedClasses failed. JVMTI Error %d', 00H
$SG100735 DB	'getJ9method failed', 00H
	ORG $+1
$SG100744 DB	'in getMethodData', 00H
	ORG $+3
$SG101013 DB	'#MethodDictionarySource', 0aH, 00H
	ORG $+3
$SG101015 DB	'header added', 00H
	ORG $+3
$SG101018 DB	'Sending persistent header', 00H
	ORG $+2
$SG101024 DB	'Health Center (methoddictionary)', 00H
	ORG $+3
$SG101031 DB	'getMethodData got lock', 00H
	ORG $+1
$SG101035 DB	'%d methods to lookup', 00H
	ORG $+3
$SG101038 DB	'capping methods to lookup at 3000', 00H
	ORG $+2
$SG101119 DB	'0x', 00H
	ORG $+1
$SG101151 DB	0aH, 00H
	ORG $+2
$SG101152 DB	'.', 00H
	ORG $+2
$SG101153 DB	'=', 00H
	ORG $+2
$SG101157 DB	'getMethodData releasing lock', 00H
	ORG $+3
$SG101159 DB	'getMethodData lock released', 00H
$SG101168 DB	'MethodLookup returning size %d', 00H
	ORG $+1
$SG101176 DB	'complete', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??4Lock@port@common@ibmras@@QAEAAV0123@ABV0123@@Z ; ibmras::common::port::Lock::operator=
; Function compile flags: /Odtp
;	COMDAT ??4Lock@port@common@ibmras@@QAEAAV0123@ABV0123@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4Lock@port@common@ibmras@@QAEAAV0123@ABV0123@@Z PROC	; ibmras::common::port::Lock::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4Lock@port@common@ibmras@@QAEAAV0123@ABV0123@@Z ENDP	; ibmras::common::port::Lock::operator=
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_7Logger@common@ibmras@@6B@			; ibmras::common::Logger::`vftable'
PUBLIC	??0Logger@common@ibmras@@QAE@ABV012@@Z		; ibmras::common::Logger::Logger
PUBLIC	??_R4Logger@common@ibmras@@6B@			; ibmras::common::Logger::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLogger@common@ibmras@@@8		; ibmras::common::Logger `RTTI Type Descriptor'
PUBLIC	??_R3Logger@common@ibmras@@8			; ibmras::common::Logger::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Logger@common@ibmras@@8			; ibmras::common::Logger::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Logger@common@ibmras@@8		; ibmras::common::Logger::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ELogger@common@ibmras@@UAEPAXI@Z		; ibmras::common::Logger::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@Logger@common@ibmras@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Logger@common@ibmras@@8 DD FLAT:??_R0?AVLogger@common@ibmras@@@8 ; ibmras::common::Logger::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Logger@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R2Logger@common@ibmras@@8
rdata$r	SEGMENT
??_R2Logger@common@ibmras@@8 DD FLAT:??_R1A@?0A@EA@Logger@common@ibmras@@8 ; ibmras::common::Logger::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Logger@common@ibmras@@8
rdata$r	SEGMENT
??_R3Logger@common@ibmras@@8 DD 00H			; ibmras::common::Logger::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Logger@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLogger@common@ibmras@@@8
_DATA	SEGMENT
??_R0?AVLogger@common@ibmras@@@8 DD FLAT:??_7type_info@@6B@ ; ibmras::common::Logger `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLogger@common@ibmras@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Logger@common@ibmras@@6B@
rdata$r	SEGMENT
??_R4Logger@common@ibmras@@6B@ DD 00H			; ibmras::common::Logger::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLogger@common@ibmras@@@8
	DD	FLAT:??_R3Logger@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_7Logger@common@ibmras@@6B@
CONST	SEGMENT
??_7Logger@common@ibmras@@6B@ DD FLAT:??_R4Logger@common@ibmras@@6B@ ; ibmras::common::Logger::`vftable'
	DD	FLAT:??_ELogger@common@ibmras@@UAEPAXI@Z
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0Logger@common@ibmras@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0Logger@common@ibmras@@QAE@ABV012@@Z PROC		; ibmras::common::Logger::Logger, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Logger@common@ibmras@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [edx+40], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0Logger@common@ibmras@@QAE@ABV012@@Z ENDP		; ibmras::common::Logger::Logger
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??4Logger@common@ibmras@@QAEAAV012@ABV012@@Z	; ibmras::common::Logger::operator=
; Function compile flags: /Odtp
;	COMDAT ??4Logger@common@ibmras@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4Logger@common@ibmras@@QAEAAV012@ABV012@@Z PROC	; ibmras::common::Logger::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4Logger@common@ibmras@@QAEAAV012@ABV012@@Z ENDP	; ibmras::common::Logger::operator=
_TEXT	ENDS
PUBLIC	??_GLogger@common@ibmras@@UAEPAXI@Z		; ibmras::common::Logger::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1Logger@common@ibmras@@UAE@XZ:PROC		; ibmras::common::Logger::~Logger
; Function compile flags: /Odtp
;	COMDAT ??_GLogger@common@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLogger@common@ibmras@@UAEPAXI@Z PROC		; ibmras::common::Logger::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Logger@common@ibmras@@UAE@XZ		; ibmras::common::Logger::~Logger
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLogger@common@ibmras@@UAEPAXI@Z ENDP		; ibmras::common::Logger::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp
;	COMDAT ??_ELogger@common@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_ELogger@common@ibmras@@UAEPAXI@Z PROC		; ibmras::common::Logger::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1Logger@common@ibmras@@UAE@XZ	; ibmras::common::Logger::~Logger
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	44					; 0000002cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Logger@common@ibmras@@UAE@XZ		; ibmras::common::Logger::~Logger
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	esp, ebp
	pop	ebp
	ret	4
??_ELogger@common@ibmras@@UAEPAXI@Z ENDP		; ibmras::common::Logger::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	??1LogManager@common@ibmras@@QAE@XZ		; ibmras::common::LogManager::~LogManager
; Function compile flags: /Odtp
;	COMDAT ??1LogManager@common@ibmras@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LogManager@common@ibmras@@QAE@XZ PROC		; ibmras::common::LogManager::~LogManager, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1LogManager@common@ibmras@@QAE@XZ ENDP		; ibmras::common::LogManager::~LogManager
_TEXT	ENDS
PUBLIC	??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	??0LogManager@common@ibmras@@QAE@ABV012@@Z	; ibmras::common::LogManager::LogManager
; Function compile flags: /Odtp
;	COMDAT ??0LogManager@common@ibmras@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0LogManager@common@ibmras@@QAE@ABV012@@Z PROC		; ibmras::common::LogManager::LogManager, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0LogManager@common@ibmras@@QAE@ABV012@@Z ENDP		; ibmras::common::LogManager::LogManager
_TEXT	ENDS
PUBLIC	??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::operator=
PUBLIC	??4LogManager@common@ibmras@@QAEAAV012@ABV012@@Z ; ibmras::common::LogManager::operator=
; Function compile flags: /Odtp
;	COMDAT ??4LogManager@common@ibmras@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4LogManager@common@ibmras@@QAEAAV012@ABV012@@Z PROC	; ibmras::common::LogManager::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::operator=
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4LogManager@common@ibmras@@QAEAAV012@ABV012@@Z ENDP	; ibmras::common::LogManager::operator=
_TEXT	ENDS
PUBLIC	??1?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ ; std::set<void *,std::less<void *>,std::allocator<void *> >::~set<void *,std::less<void *>,std::allocator<void *> >
PUBLIC	??1Plugin@monitoring@ibmras@@UAE@XZ		; ibmras::monitoring::Plugin::~Plugin
PUBLIC	??1Receiver@connector@monitoring@ibmras@@UAE@XZ	; ibmras::monitoring::connector::Receiver::~Receiver
PUBLIC	?getReceiver@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAXXZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getReceiver
PUBLIC	?registerPullSource@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAUpullsource@@I@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::registerPullSource
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??0?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ ; std::set<void *,std::less<void *>,std::allocator<void *> >::set<void *,std::less<void *>,std::allocator<void *> >
PUBLIC	??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`vftable'
PUBLIC	??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`vftable'
PUBLIC	??0Receiver@connector@monitoring@ibmras@@IAE@XZ	; ibmras::monitoring::connector::Receiver::Receiver
PUBLIC	??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::MethodLookupProvider
PUBLIC	??_R4MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@@8 ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider `RTTI Type Descriptor'
PUBLIC	??_R3MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8 ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8 ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8 ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Receiver@connector@monitoring@ibmras@@8 ; ibmras::monitoring::connector::Receiver::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReceiver@connector@monitoring@ibmras@@@8 ; ibmras::monitoring::connector::Receiver `RTTI Type Descriptor'
PUBLIC	??_R3Receiver@connector@monitoring@ibmras@@8	; ibmras::monitoring::connector::Receiver::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Receiver@connector@monitoring@ibmras@@8	; ibmras::monitoring::connector::Receiver::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@Plugin@monitoring@ibmras@@8	; ibmras::monitoring::Plugin::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVPlugin@monitoring@ibmras@@@8		; ibmras::monitoring::Plugin `RTTI Type Descriptor'
PUBLIC	??_R3Plugin@monitoring@ibmras@@8		; ibmras::monitoring::Plugin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Plugin@monitoring@ibmras@@8		; ibmras::monitoring::Plugin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Plugin@monitoring@ibmras@@8	; ibmras::monitoring::Plugin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::receiveMessage
PUBLIC	??_R4MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Complete Object Locator'
PUBLIC	??_EMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@W3AEPAXI@Z ; [thunk]:ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`vector deleting destructor'
EXTRN	??1Lock@port@common@ibmras@@QAE@XZ:PROC		; ibmras::common::port::Lock::~Lock
EXTRN	??0Lock@port@common@ibmras@@QAE@XZ:PROC		; ibmras::common::port::Lock::Lock
EXTRN	??0Plugin@monitoring@ibmras@@QAE@XZ:PROC	; ibmras::monitoring::Plugin::Plugin
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_EMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEPAXI@Z:PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`vector deleting destructor'
;	COMDAT ??_R4MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\j9\methods\methodlookupprovider.cpp
rdata$r	SEGMENT
??_R4MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@ DD 00H ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@@8
	DD	FLAT:??_R3MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Plugin@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Plugin@monitoring@ibmras@@8 DD FLAT:??_R0?AVPlugin@monitoring@ibmras@@@8 ; ibmras::monitoring::Plugin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Plugin@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R2Plugin@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R2Plugin@monitoring@ibmras@@8 DD FLAT:??_R1A@?0A@EA@Plugin@monitoring@ibmras@@8 ; ibmras::monitoring::Plugin::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Plugin@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R3Plugin@monitoring@ibmras@@8 DD 00H			; ibmras::monitoring::Plugin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Plugin@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPlugin@monitoring@ibmras@@@8
_DATA	SEGMENT
??_R0?AVPlugin@monitoring@ibmras@@@8 DD FLAT:??_7type_info@@6B@ ; ibmras::monitoring::Plugin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPlugin@monitoring@ibmras@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@Plugin@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R13?0A@EA@Plugin@monitoring@ibmras@@8 DD FLAT:??_R0?AVPlugin@monitoring@ibmras@@@8 ; ibmras::monitoring::Plugin::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Plugin@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R2Receiver@connector@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R2Receiver@connector@monitoring@ibmras@@8 DD FLAT:??_R1A@?0A@EA@Receiver@connector@monitoring@ibmras@@8 ; ibmras::monitoring::connector::Receiver::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Receiver@connector@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R3Receiver@connector@monitoring@ibmras@@8 DD 00H	; ibmras::monitoring::connector::Receiver::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Receiver@connector@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReceiver@connector@monitoring@ibmras@@@8
_DATA	SEGMENT
??_R0?AVReceiver@connector@monitoring@ibmras@@@8 DD FLAT:??_7type_info@@6B@ ; ibmras::monitoring::connector::Receiver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReceiver@connector@monitoring@ibmras@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Receiver@connector@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Receiver@connector@monitoring@ibmras@@8 DD FLAT:??_R0?AVReceiver@connector@monitoring@ibmras@@@8 ; ibmras::monitoring::connector::Receiver::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Receiver@connector@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8 DD FLAT:??_R0?AVMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@@8 ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R2MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R2MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8 DD FLAT:??_R1A@?0A@EA@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8 ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Receiver@connector@monitoring@ibmras@@8
	DD	FLAT:??_R13?0A@EA@Plugin@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R3MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8
rdata$r	SEGMENT
??_R3MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8 DD 00H ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@@8
_DATA	SEGMENT
??_R0?AVMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@@8 DD FLAT:??_7type_info@@6B@ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMethodLookupProvider@methods@j9@plugins@monitoring@i'
	DB	'bmras@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@
rdata$r	SEGMENT
??_R4MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@ DD 00H ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@@8
	DD	FLAT:??_R3MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@
CONST	SEGMENT
??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@ DD FLAT:??_R4MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`vftable'
	DD	FLAT:??_EMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@W3AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@
CONST	SEGMENT
??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@ DD FLAT:??_R4MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`vftable'
	DD	FLAT:?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z
	DD	FLAT:??_EMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z$3
__ehfuncinfo$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_functions$ = 8						; size = 72
??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::MethodLookupProvider
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Receiver@connector@monitoring@ibmras@@IAE@XZ ; ibmras::monitoring::connector::Receiver::Receiver
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0Plugin@monitoring@ibmras@@QAE@XZ	; ibmras::monitoring::Plugin::Plugin
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??0?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ ; std::set<void *,std::less<void *>,std::allocator<void *> >::set<void *,std::less<void *>,std::allocator<void *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??0Lock@port@common@ibmras@@QAE@XZ	; ibmras::common::port::Lock::Lock
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+168], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+169], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+172], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+176], 0
; Line 40
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 76					; 0000004cH
	mov	ecx, 18					; 00000012H
	lea	esi, DWORD PTR _functions$[ebp]
	rep movsd
; Line 41
	push	OFFSET $SG99796
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], OFFSET ?registerPullSource@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAUpullsource@@I@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::registerPullSource
; Line 44
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], 5
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], OFFSET ?getReceiver@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAXXZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getReceiver
; Line 46
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	72					; 00000048H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Receiver@connector@monitoring@ibmras@@UAE@XZ ; ibmras::monitoring::connector::Receiver::~Receiver
__unwindfunclet$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1Plugin@monitoring@ibmras@@UAE@XZ	; ibmras::monitoring::Plugin::~Plugin
__unwindfunclet$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ
__unwindfunclet$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	jmp	??1Lock@port@common@ibmras@@QAE@XZ	; ibmras::common::port::Lock::~Lock
__ehhandler$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::MethodLookupProvider
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_7Plugin@monitoring@ibmras@@6B@		; ibmras::monitoring::Plugin::`vftable'
PUBLIC	??_R4Plugin@monitoring@ibmras@@6B@		; ibmras::monitoring::Plugin::`RTTI Complete Object Locator'
EXTRN	??_EPlugin@monitoring@ibmras@@UAEPAXI@Z:PROC	; ibmras::monitoring::Plugin::`vector deleting destructor'
;	COMDAT ??_R4Plugin@monitoring@ibmras@@6B@
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugin.h
rdata$r	SEGMENT
??_R4Plugin@monitoring@ibmras@@6B@ DD 00H		; ibmras::monitoring::Plugin::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPlugin@monitoring@ibmras@@@8
	DD	FLAT:??_R3Plugin@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_7Plugin@monitoring@ibmras@@6B@
CONST	SEGMENT
??_7Plugin@monitoring@ibmras@@6B@ DD FLAT:??_R4Plugin@monitoring@ibmras@@6B@ ; ibmras::monitoring::Plugin::`vftable'
	DD	FLAT:??_EPlugin@monitoring@ibmras@@UAEPAXI@Z
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??1Plugin@monitoring@ibmras@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Plugin@monitoring@ibmras@@UAE@XZ PROC		; ibmras::monitoring::Plugin::~Plugin, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Plugin@monitoring@ibmras@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1Plugin@monitoring@ibmras@@UAE@XZ ENDP		; ibmras::monitoring::Plugin::~Plugin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_GPlugin@monitoring@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPlugin@monitoring@ibmras@@UAEPAXI@Z PROC		; ibmras::monitoring::Plugin::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Plugin@monitoring@ibmras@@UAE@XZ	; ibmras::monitoring::Plugin::~Plugin
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPlugin@monitoring@ibmras@@UAEPAXI@Z ENDP		; ibmras::monitoring::Plugin::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Receiver@connector@monitoring@ibmras@@6B@	; ibmras::monitoring::connector::Receiver::`vftable'
PUBLIC	??_R4Receiver@connector@monitoring@ibmras@@6B@	; ibmras::monitoring::connector::Receiver::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
EXTRN	??_EReceiver@connector@monitoring@ibmras@@UAEPAXI@Z:PROC ; ibmras::monitoring::connector::Receiver::`vector deleting destructor'
;	COMDAT ??_R4Receiver@connector@monitoring@ibmras@@6B@
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\connector\receiver.h
rdata$r	SEGMENT
??_R4Receiver@connector@monitoring@ibmras@@6B@ DD 00H	; ibmras::monitoring::connector::Receiver::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReceiver@connector@monitoring@ibmras@@@8
	DD	FLAT:??_R3Receiver@connector@monitoring@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_7Receiver@connector@monitoring@ibmras@@6B@
CONST	SEGMENT
??_7Receiver@connector@monitoring@ibmras@@6B@ DD FLAT:??_R4Receiver@connector@monitoring@ibmras@@6B@ ; ibmras::monitoring::connector::Receiver::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:??_EReceiver@connector@monitoring@ibmras@@UAEPAXI@Z
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??1Receiver@connector@monitoring@ibmras@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Receiver@connector@monitoring@ibmras@@UAE@XZ PROC	; ibmras::monitoring::connector::Receiver::~Receiver, COMDAT
; _this$ = ecx
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Receiver@connector@monitoring@ibmras@@6B@
; Line 28
	mov	esp, ebp
	pop	ebp
	ret	0
??1Receiver@connector@monitoring@ibmras@@UAE@XZ ENDP	; ibmras::monitoring::connector::Receiver::~Receiver
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0Receiver@connector@monitoring@ibmras@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Receiver@connector@monitoring@ibmras@@IAE@XZ PROC	; ibmras::monitoring::connector::Receiver::Receiver, COMDAT
; _this$ = ecx
; Line 31
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Receiver@connector@monitoring@ibmras@@6B@
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Receiver@connector@monitoring@ibmras@@IAE@XZ ENDP	; ibmras::monitoring::connector::Receiver::Receiver
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_GReceiver@connector@monitoring@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GReceiver@connector@monitoring@ibmras@@UAEPAXI@Z PROC ; ibmras::monitoring::connector::Receiver::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Receiver@connector@monitoring@ibmras@@UAE@XZ ; ibmras::monitoring::connector::Receiver::~Receiver
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReceiver@connector@monitoring@ibmras@@UAEPAXI@Z ENDP ; ibmras::monitoring::connector::Receiver::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::~MethodLookupProvider
; Function compile flags: /Odtp
;	COMDAT ??_GMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEPAXI@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::~MethodLookupProvider
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEPAXI@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
; Function compile flags: /Odtp
;	COMDAT ??1?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ PROC ; std::set<void *,std::less<void *>,std::allocator<void *> >::~set<void *,std::less<void *>,std::allocator<void *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ ENDP ; std::set<void *,std::less<void *>,std::allocator<void *> >::~set<void *,std::less<void *>,std::allocator<void *> >
_TEXT	ENDS
xdata$x	SEGMENT
__unwindtable$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ$2
__ehfuncinfo$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::~MethodLookupProvider
; _this$ = ecx
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\j9\methods\methodlookupprovider.cpp
; Line 48
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BReceiver@connector@45@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@6BPlugin@45@@
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 49
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??1Lock@port@common@ibmras@@QAE@XZ	; ibmras::common::port::Lock::~Lock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??1?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1Plugin@monitoring@ibmras@@UAE@XZ	; ibmras::monitoring::Plugin::~Plugin
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Receiver@connector@monitoring@ibmras@@UAE@XZ ; ibmras::monitoring::connector::Receiver::~Receiver
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Receiver@connector@monitoring@ibmras@@UAE@XZ ; ibmras::monitoring::connector::Receiver::~Receiver
__unwindfunclet$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1Plugin@monitoring@ibmras@@UAE@XZ	; ibmras::monitoring::Plugin::~Plugin
__unwindfunclet$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ
__ehhandler$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAE@XZ ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::~MethodLookupProvider
PUBLIC	?complete@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAXPAUmonitordata@@@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::complete
PUBLIC	?getData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAUmonitordata@@XZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getData
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_memset:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T109273 = -12						; size = 4
$T109272 = -8						; size = 4
_src$ = -4						; size = 4
_provID$ = 8						; size = 4
?registerPullSource@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAUpullsource@@I@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::registerPullSource
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 52
	mov	eax, DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
	mov	ecx, DWORD PTR _provID$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 54
	mov	DWORD PTR $T109272[ebp], 32		; 00000020H
	mov	edx, DWORD PTR $T109272[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T109273[ebp], eax
	cmp	DWORD PTR $T109273[ebp], 0
	je	SHORT $LN3@registerPu
	mov	eax, DWORD PTR $T109272[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR $T109273[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR $T109273[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN4@registerPu
$LN3@registerPu:
	mov	DWORD PTR tv68[ebp], 0
$LN4@registerPu:
	mov	eax, DWORD PTR tv68[ebp]
	mov	DWORD PTR _src$[ebp], eax
; Line 55
	mov	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [ecx+8], OFFSET $SG99814
; Line 57
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+12], OFFSET $SG99815
; Line 58
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], 0
; Line 59
	mov	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [ecx+4], 1048576		; 00100000H
; Line 61
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+24], OFFSET ?getData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAUmonitordata@@XZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getData
; Line 62
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax+28], OFFSET ?complete@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAXPAUmonitordata@@@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::complete
; Line 63
	mov	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [ecx+20], 5
; Line 64
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 66
	mov	eax, DWORD PTR _src$[ebp]
; Line 67
	mov	esp, ebp
	pop	ebp
	ret	0
?registerPullSource@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAUpullsource@@I@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::registerPullSource
_TEXT	ENDS
PUBLIC	?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getInstance
xdata$x	SEGMENT
__unwindtable$?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z$0
__ehfuncinfo$?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv73 = -24						; size = 4
$T109279 = -20						; size = 4
$T109278 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_functions$ = 8						; size = 72
?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getInstance
; Line 70
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 71
	cmp	DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A, 0 ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
	jne	SHORT $LN1@getInstanc
; Line 72
	push	180					; 000000b4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T109279[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T109279[ebp], 0
	je	SHORT $LN4@getInstanc
	sub	esp, 72					; 00000048H
	mov	ecx, 18					; 00000012H
	lea	esi, DWORD PTR _functions$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR $T109279[ebp]
	call	??0MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAE@UjvmFunctions@@@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::MethodLookupProvider
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN5@getInstanc
$LN4@getInstanc:
	mov	DWORD PTR tv73[ebp], 0
$LN5@getInstanc:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T109278[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T109278[ebp]
	mov	DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A, ecx ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
$LN1@getInstanc:
; Line 74
	mov	eax, DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
; Line 75
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z$0:
	mov	eax, DWORD PTR $T109279[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getInstance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAV123456@UjvmFunctions@@@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getInstance
; Function compile flags: /Odtp
_TEXT	SEGMENT
?getReceiver@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAXXZ PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getReceiver
; Line 77
	push	ebp
	mov	ebp, esp
; Line 78
	cmp	DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A, 0 ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
	jne	SHORT $LN1@getReceive
; Line 79
	xor	eax, eax
	jmp	SHORT $LN2@getReceive
$LN1@getReceive:
; Line 81
	mov	eax, DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
$LN2@getReceive:
; Line 82
	pop	ebp
	ret	0
?getReceiver@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAXXZ ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getReceiver
_TEXT	ENDS
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$insert@PAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@$$QAPAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::insert<void *>
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
EXTRN	?release@Lock@port@common@ibmras@@QAEHXZ:PROC	; ibmras::common::port::Lock::release
EXTRN	__imp__strtol:PROC
EXTRN	?isDestroyed@Lock@port@common@ibmras@@QAE_NXZ:PROC ; ibmras::common::port::Lock::isDestroyed
EXTRN	?acquire@Lock@port@common@ibmras@@QAEHXZ:PROC	; ibmras::common::port::Lock::acquire
EXTRN	?split@util@common@ibmras@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@D@Z:PROC ; ibmras::common::util::split
EXTRN	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ:PROC ; ibmras::common::Logger::debug
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z$3
__ehfuncinfo$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -148						; size = 4
$T109292 = -144						; size = 8
$T109291 = -136						; size = 4
$T109290 = -132						; size = 4
_it$100422 = -128					; size = 4
_pEnd$100291 = -124					; size = 4
_rest$99961 = -120					; size = 28
_parameters$100285 = -92				; size = 16
_command$99959 = -76					; size = 28
_message$99867 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_found$99957 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_size$ = 12						; size = 4
_data$ = 16						; size = 4
?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::receiveMessage
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN17@receiveMes
	push	OFFSET $SG99834
	push	5
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN17@receiveMes:
; Line 88
	push	OFFSET $SG99862
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN16@receiveMes
; Line 89
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN14@receiveMes
	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN15@receiveMes
$LN14@receiveMes:
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+168], 1
; Line 91
	jmp	$LN13@receiveMes
$LN15@receiveMes:
; Line 92
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	lea	ecx, DWORD PTR _message$99867[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 93
	push	0
	push	44					; 0000002cH
	lea	ecx, DWORD PTR _message$99867[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	DWORD PTR _found$99957[ebp], eax
; Line 94
	mov	ecx, DWORD PTR _found$99957[ebp]
	cmp	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN12@receiveMes
; Line 95
	mov	edx, DWORD PTR _found$99957[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _command$99959[ebp]
	push	eax
	lea	ecx, DWORD PTR _message$99867[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 96
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	ecx
	mov	edx, DWORD PTR _found$99957[ebp]
	add	edx, 1
	push	edx
	lea	eax, DWORD PTR _rest$99961[ebp]
	push	eax
	lea	ecx, DWORD PTR _message$99867[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 98
	push	44					; 0000002cH
	lea	ecx, DWORD PTR _rest$99961[ebp]
	push	ecx
	lea	edx, DWORD PTR _parameters$100285[ebp]
	push	edx
	call	?split@util@common@ibmras@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@D@Z ; ibmras::common::util::split
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 100
	lea	ecx, DWORD PTR _parameters$100285[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	test	eax, eax
	jbe	$LN11@receiveMes
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	?acquire@Lock@port@common@ibmras@@QAEHXZ ; ibmras::common::port::Lock::acquire
	test	eax, eax
	jne	$LN10@receiveMes
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	?isDestroyed@Lock@port@common@ibmras@@QAE_NXZ ; ibmras::common::port::Lock::isDestroyed
	movzx	eax, al
	test	eax, eax
	jne	$LN10@receiveMes
; Line 104
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [ecx+8], 5
	jl	SHORT $LN9@receiveMes
	push	OFFSET $SG100290
	push	5
	mov	edx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	edx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN9@receiveMes:
; Line 108
	lea	eax, DWORD PTR _it$100422[ebp]
	push	eax
	lea	ecx, DWORD PTR _parameters$100285[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	jmp	SHORT $LN8@receiveMes
$LN7@receiveMes:
; Line 109
	lea	ecx, DWORD PTR _it$100422[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN8@receiveMes:
	lea	ecx, DWORD PTR $T109290[ebp]
	push	ecx
	lea	ecx, DWORD PTR _parameters$100285[ebp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$100422[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@receiveMes
; Line 111
	push	16					; 00000010H
	lea	eax, DWORD PTR _pEnd$100291[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$100422[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	mov	ecx, eax
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	call	DWORD PTR __imp__strtol
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T109291[ebp], eax
	lea	ecx, DWORD PTR $T109291[ebp]
	push	ecx
	lea	edx, DWORD PTR $T109292[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??$insert@PAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@$$QAPAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::insert<void *>
; Line 112
	jmp	SHORT $LN7@receiveMes
$LN10@receiveMes:
; Line 113
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN5@receiveMes
	push	OFFSET $SG100694
	push	5
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN5@receiveMes:
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	?release@Lock@port@common@ibmras@@QAEHXZ ; ibmras::common::port::Lock::release
; Line 115
	mov	edx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [edx+8], 5
	jl	SHORT $LN4@receiveMes
	push	OFFSET $SG100696
	push	5
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	eax
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN4@receiveMes:
; Line 116
	jmp	SHORT $LN3@receiveMes
$LN11@receiveMes:
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+168], 1
$LN3@receiveMes:
; Line 119
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _parameters$100285[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rest$99961[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _command$99959[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN12@receiveMes:
; Line 120
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _message$99867[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN13@receiveMes:
	jmp	SHORT $LN18@receiveMes
$LN16@receiveMes:
; Line 121
	push	OFFSET $SG100700
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@receiveMes
; Line 122
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+176], 1
$LN18@receiveMes:
; Line 125
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z$0:
	lea	ecx, DWORD PTR _message$99867[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z$1:
	lea	ecx, DWORD PTR _command$99959[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z$2:
	lea	ecx, DWORD PTR _rest$99961[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z$3:
	lea	ecx, DWORD PTR _parameters$100285[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?receiveMessage@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPAX@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::receiveMessage
PUBLIC	?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
PUBLIC	?DeleteLocalRef@JNIEnv_@@QAEXPAV_jobject@@@Z	; JNIEnv_::DeleteLocalRef
PUBLIC	??$insert@AAPAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@AAPAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::insert<void * &>
PUBLIC	?GetClassMethods@_jvmtiEnv@@QAE?AW4jvmtiError@@PAV_jclass@@PAHPAPAPAU_jmethodID@@@Z ; _jvmtiEnv::GetClassMethods
PUBLIC	?GetLoadedClasses@_jvmtiEnv@@QAE?AW4jvmtiError@@PAHPAPAPAV_jclass@@@Z ; _jvmtiEnv::GetLoadedClasses
PUBLIC	?getAllMethodIDs@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXXZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getAllMethodIDs
EXTRN	?log@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ:PROC ; ibmras::common::Logger::log
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -48						; size = 4
$T109302 = -44						; size = 8
_j9method_ptr$100727 = -36				; size = 4
_j$100723 = -32						; size = 4
_midPtr$100722 = -28					; size = 4
_mids$100720 = -24					; size = 4
_methodcount$100719 = -20				; size = 4
_i$100715 = -16						; size = 4
_classes$ = -12						; size = 4
_err$ = -8						; size = 4
_count$ = -4						; size = 4
?getAllMethodIDs@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXXZ PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getAllMethodIDs
; _this$ = ecx
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN16@getAllMeth
	push	OFFSET $SG100705
	push	5
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN16@getAllMeth:
; Line 130
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+104], 0
	je	SHORT $LN14@getAllMeth
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+172], 0
	jne	SHORT $LN15@getAllMeth
$LN14@getAllMeth:
; Line 131
	jmp	$LN17@getAllMeth
$LN15@getAllMeth:
; Line 134
	mov	DWORD PTR _classes$[ebp], 0
; Line 135
	mov	DWORD PTR _count$[ebp], 0
; Line 136
	lea	ecx, DWORD PTR _classes$[ebp]
	push	ecx
	lea	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	call	?GetLoadedClasses@_jvmtiEnv@@QAE?AW4jvmtiError@@PAHPAPAPAV_jclass@@@Z ; _jvmtiEnv::GetLoadedClasses
	mov	DWORD PTR _err$[ebp], eax
; Line 137
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN13@getAllMeth
; Line 138
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [ecx+4], 1
	jl	SHORT $LN12@getAllMeth
	mov	edx, DWORD PTR _err$[ebp]
	push	edx
	push	OFFSET $SG100713
	push	1
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	eax
	call	?log@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::log
	add	esp, 16					; 00000010H
$LN12@getAllMeth:
; Line 139
	jmp	$LN11@getAllMeth
$LN13@getAllMeth:
; Line 141
	mov	DWORD PTR _i$100715[ebp], 0
	jmp	SHORT $LN10@getAllMeth
$LN9@getAllMeth:
	mov	ecx, DWORD PTR _i$100715[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$100715[ebp], ecx
$LN10@getAllMeth:
	mov	edx, DWORD PTR _i$100715[ebp]
	cmp	edx, DWORD PTR _count$[ebp]
	jge	$LN11@getAllMeth
; Line 142
	mov	DWORD PTR _methodcount$100719[ebp], 0
; Line 144
	mov	DWORD PTR _mids$100720[ebp], 0
; Line 146
	lea	eax, DWORD PTR _mids$100720[ebp]
	push	eax
	lea	ecx, DWORD PTR _methodcount$100719[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$100715[ebp]
	mov	eax, DWORD PTR _classes$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+140]
	call	?GetClassMethods@_jvmtiEnv@@QAE?AW4jvmtiError@@PAV_jclass@@PAHPAPAPAU_jmethodID@@@Z ; _jvmtiEnv::GetClassMethods
	mov	DWORD PTR _err$[ebp], eax
; Line 148
	cmp	DWORD PTR _err$[ebp], 0
	jne	$LN7@getAllMeth
; Line 149
	mov	eax, DWORD PTR _mids$100720[ebp]
	mov	DWORD PTR _midPtr$100722[ebp], eax
; Line 151
	mov	DWORD PTR _j$100723[ebp], 0
	jmp	SHORT $LN6@getAllMeth
$LN5@getAllMeth:
	mov	ecx, DWORD PTR _j$100723[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$100723[ebp], ecx
$LN6@getAllMeth:
	mov	edx, DWORD PTR _j$100723[ebp]
	cmp	edx, DWORD PTR _methodcount$100719[ebp]
	jge	SHORT $LN7@getAllMeth
; Line 157
	lea	eax, DWORD PTR _j9method_ptr$100727[ebp]
	push	eax
	mov	ecx, DWORD PTR _midPtr$100722[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
; Line 158
	cmp	DWORD PTR _err$[ebp], 0
	jne	SHORT $LN3@getAllMeth
; Line 159
	lea	ecx, DWORD PTR _j9method_ptr$100727[ebp]
	push	ecx
	lea	edx, DWORD PTR $T109302[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??$insert@AAPAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@AAPAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::insert<void * &>
; Line 160
	jmp	SHORT $LN2@getAllMeth
$LN3@getAllMeth:
; Line 161
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 3
	jl	SHORT $LN2@getAllMeth
	push	OFFSET $SG100735
	push	3
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN2@getAllMeth:
; Line 163
	mov	edx, DWORD PTR _midPtr$100722[ebp]
	add	edx, 4
	mov	DWORD PTR _midPtr$100722[ebp], edx
; Line 164
	jmp	SHORT $LN5@getAllMeth
$LN7@getAllMeth:
; Line 167
	mov	eax, DWORD PTR _i$100715[ebp]
	mov	ecx, DWORD PTR _classes$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	call	?DeleteLocalRef@JNIEnv_@@QAEXPAV_jobject@@@Z ; JNIEnv_::DeleteLocalRef
; Line 168
	lea	ecx, DWORD PTR _mids$100720[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
; Line 169
	jmp	$LN9@getAllMeth
$LN11@getAllMeth:
; Line 171
	lea	edx, DWORD PTR _classes$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
$LN17@getAllMeth:
; Line 172
	mov	esp, ebp
	pop	ebp
	ret	0
?getAllMethodIDs@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXXZ ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getAllMethodIDs
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?DeleteLocalRef@JNIEnv_@@QAEXPAV_jobject@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_localRef$ = 8						; size = 4
?DeleteLocalRef@JNIEnv_@@QAEXPAV_jobject@@@Z PROC	; JNIEnv_::DeleteLocalRef, COMDAT
; _this$ = ecx
; File c:\javabuilds\javademo\sdk\include\jni.h
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _localRef$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+92]
	call	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteLocalRef@JNIEnv_@@QAEXPAV_jobject@@@Z ENDP	; JNIEnv_::DeleteLocalRef
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetClassMethods@_jvmtiEnv@@QAE?AW4jvmtiError@@PAV_jclass@@PAHPAPAPAU_jmethodID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_klass$ = 8						; size = 4
_method_count_ptr$ = 12					; size = 4
_methods_ptr$ = 16					; size = 4
?GetClassMethods@_jvmtiEnv@@QAE?AW4jvmtiError@@PAV_jclass@@PAHPAPAPAU_jmethodID@@@Z PROC ; _jvmtiEnv::GetClassMethods, COMDAT
; _this$ = ecx
; File c:\javabuilds\javademo\sdk\include\jvmti.h
; Line 1181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _methods_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _method_count_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _klass$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+204]
	call	eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetClassMethods@_jvmtiEnv@@QAE?AW4jvmtiError@@PAV_jclass@@PAHPAPAPAU_jmethodID@@@Z ENDP ; _jvmtiEnv::GetClassMethods
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetLoadedClasses@_jvmtiEnv@@QAE?AW4jvmtiError@@PAHPAPAPAV_jclass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_class_count_ptr$ = 8					; size = 4
_classes_ptr$ = 12					; size = 4
?GetLoadedClasses@_jvmtiEnv@@QAE?AW4jvmtiError@@PAHPAPAPAV_jclass@@@Z PROC ; _jvmtiEnv::GetLoadedClasses, COMDAT
; _this$ = ecx
; Line 1206
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classes_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _class_count_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+308]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetLoadedClasses@_jvmtiEnv@@QAE?AW4jvmtiError@@PAHPAPAPAV_jclass@@@Z ENDP ; _jvmtiEnv::GetLoadedClasses
_TEXT	ENDS
PUBLIC	?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getMethodData
; Function compile flags: /Odtp
_TEXT	SEGMENT
?getData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAUmonitordata@@XZ PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getData
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\j9\methods\methodlookupprovider.cpp
; Line 174
	push	ebp
	mov	ebp, esp
; Line 175
	mov	ecx, DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
	call	?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getMethodData
; Line 176
	pop	ebp
	ret	0
?getData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAPAUmonitordata@@XZ ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getData
_TEXT	ENDS
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEIABQAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBEABQAXXZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator*
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator!=
PUBLIC	?end@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::end
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
PUBLIC	?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::begin
PUBLIC	?hc_alloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAEH@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_alloc
PUBLIC	?size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::size
PUBLIC	?AttachCurrentThreadAsDaemon@JavaVM_@@QAEHPAPAXPAX@Z ; JavaVM_::AttachCurrentThreadAsDaemon
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	?generateData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@IPBDH_N@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::generateData
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
EXTRN	?startsWith@util@common@ibmras@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:PROC ; ibmras::common::util::startsWith
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@PBX@Z:PROC
EXTRN	_memset:PROC
xdata$x	SEGMENT
__ehfuncinfo$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$5
	DD	02H
	DD	FLAT:__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$6
	DD	03H
	DD	FLAT:__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$7
	DD	03H
	DD	FLAT:__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$8
	DD	00H
	DD	FLAT:__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$9
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv318 = -612						; size = 4
tv430 = -608						; size = 4
tv279 = -604						; size = 4
tv84 = -600						; size = 4
_this$ = -596						; size = 4
$T109320 = -592						; size = 4
$T109317 = -585						; size = 1
$T109316 = -584						; size = 4
$T109315 = -580						; size = 4
$T109314 = -576						; size = 4
_ss2$101094 = -572					; size = 168
_cls$101121 = -400					; size = 4
_method$101114 = -396					; size = 28
_mthd$101123 = -368					; size = 4
_j$101089 = -364					; size = 4
_descriptors$101087 = -360				; size = 4
_it$101060 = -356					; size = 4
_stringBytesLength$101083 = -352			; size = 4
_error$101040 = -348					; size = 4
_i$101051 = -344					; size = 4
_numberOfMethods$101033 = -340				; size = 4
_errcode$101025 = -336					; size = 4
_threadArgs$101023 = -332				; size = 12
_mdheader$101019 = -320					; size = 28
_ss$ = -292						; size = 168
_ramMethods$ = -120					; size = 4
_stringBytes$ = -116					; size = 4
_ramMethodsPtr$ = -112					; size = 4
_datastring$ = -108					; size = 28
_descriptorBuffer$ = -80				; size = 4
_mdata$ = -76						; size = 4
$T101120 = -72						; size = 28
$T101116 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getMethodData
; _this$ = ecx
; Line 178
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 600				; 00000258H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 179
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN37@getMethodD
	push	OFFSET $SG100744
	push	5
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN37@getMethodD:
; Line 181
	mov	DWORD PTR _ramMethods$[ebp], 0
; Line 182
	mov	DWORD PTR _ramMethodsPtr$[ebp], 0
; Line 183
	mov	DWORD PTR _descriptorBuffer$[ebp], 0
; Line 184
	mov	DWORD PTR _stringBytes$[ebp], 0
; Line 185
	push	1
	push	3
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 187
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+168]
	test	eax, eax
	je	$LN36@getMethodD
; Line 188
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+168], 0
; Line 189
	lea	edx, DWORD PTR _ss$[ebp]
	test	edx, edx
	je	SHORT $LN40@getMethodD
	lea	eax, DWORD PTR _ss$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN41@getMethodD
$LN40@getMethodD:
	mov	DWORD PTR tv84[ebp], 0
$LN41@getMethodD:
	push	OFFSET $SG101013
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 191
	mov	edx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [edx+8], 5
	jl	SHORT $LN35@getMethodD
	push	OFFSET $SG101015
	push	5
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	eax
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN35@getMethodD:
; Line 192
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+169]
	test	edx, edx
	jne	$LN36@getMethodD
; Line 193
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN33@getMethodD
	push	OFFSET $SG101018
	push	5
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN33@getMethodD:
; Line 194
	lea	edx, DWORD PTR _mdheader$101019[ebp]
	push	edx
	lea	ecx, DWORD PTR _ss$[ebp]
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 195
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+169], 1
; Line 196
	push	1
	lea	ecx, DWORD PTR _mdheader$101019[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	lea	ecx, DWORD PTR _mdheader$101019[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?generateData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@IPBDH_N@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::generateData
	mov	DWORD PTR $T109314[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _mdheader$101019[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T109314[ebp]
	jmp	$LN38@getMethodD
$LN36@getMethodD:
; Line 200
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+172], 0
	jne	$LN32@getMethodD
; Line 203
	push	12					; 0000000cH
	push	0
	lea	edx, DWORD PTR _threadArgs$101023[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 204
	mov	DWORD PTR _threadArgs$101023[ebp], 65542 ; 00010006H
; Line 208
	mov	DWORD PTR _threadArgs$101023[ebp+4], OFFSET $SG101024
; Line 212
	mov	DWORD PTR _threadArgs$101023[ebp+8], 0
; Line 214
	lea	eax, DWORD PTR _threadArgs$101023[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+144]
	call	?AttachCurrentThreadAsDaemon@JavaVM_@@QAEHPAPAXPAX@Z ; JavaVM_::AttachCurrentThreadAsDaemon
	mov	DWORD PTR _errcode$101025[ebp], eax
; Line 215
	cmp	DWORD PTR _errcode$101025[ebp], 0
	je	SHORT $LN32@getMethodD
; Line 216
	mov	DWORD PTR $T109315[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T109315[ebp]
	jmp	$LN38@getMethodD
$LN32@getMethodD:
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	?acquire@Lock@port@common@ibmras@@QAEHXZ ; ibmras::common::port::Lock::acquire
	test	eax, eax
	jne	$cleanup$101044
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	?isDestroyed@Lock@port@common@ibmras@@QAE_NXZ ; ibmras::common::port::Lock::isDestroyed
	movzx	eax, al
	test	eax, eax
	jne	$cleanup$101044
; Line 222
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [ecx+8], 5
	jl	SHORT $LN29@getMethodD
	push	OFFSET $SG101031
	push	5
	mov	edx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	edx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN29@getMethodD:
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+176]
	test	ecx, ecx
	je	SHORT $LN28@getMethodD
; Line 225
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+176], 0
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAllMethodIDs@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXXZ ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getAllMethodIDs
$LN28@getMethodD:
; Line 229
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	?size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::size
	mov	DWORD PTR _numberOfMethods$101033[ebp], eax
; Line 231
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN27@getMethodD
	mov	ecx, DWORD PTR _numberOfMethods$101033[ebp]
	push	ecx
	push	OFFSET $SG101035
	push	5
	mov	edx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	edx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 16					; 00000010H
$LN27@getMethodD:
; Line 232
	cmp	DWORD PTR _numberOfMethods$101033[ebp], 3000 ; 00000bb8H
	jle	SHORT $LN26@getMethodD
; Line 233
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN25@getMethodD
	push	OFFSET $SG101038
	push	5
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN25@getMethodD:
; Line 234
	mov	DWORD PTR _numberOfMethods$101033[ebp], 3000 ; 00000bb8H
$LN26@getMethodD:
; Line 238
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+96], 0
	je	$cleanup$101044
	cmp	DWORD PTR _numberOfMethods$101033[ebp], 0
	jle	$cleanup$101044
; Line 242
	mov	eax, DWORD PTR _numberOfMethods$101033[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hc_alloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAEH@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_alloc
	mov	DWORD PTR _ramMethods$[ebp], eax
; Line 243
	cmp	DWORD PTR _ramMethods$[ebp], 0
	jne	SHORT $LN23@getMethodD
; Line 244
	jmp	$cleanup$101044
$LN23@getMethodD:
; Line 248
	mov	ecx, DWORD PTR _numberOfMethods$101033[ebp]
	imul	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hc_alloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAEH@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_alloc
	mov	DWORD PTR _descriptorBuffer$[ebp], eax
; Line 249
	cmp	DWORD PTR _descriptorBuffer$[ebp], 0
	jne	SHORT $LN21@getMethodD
; Line 250
	jmp	$cleanup$101044
$LN21@getMethodD:
; Line 254
	mov	edx, DWORD PTR _ramMethods$[ebp]
	mov	DWORD PTR _ramMethodsPtr$[ebp], edx
; Line 255
	mov	DWORD PTR _i$101051[ebp], 0
; Line 256
	lea	eax, DWORD PTR _it$101060[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::begin
	jmp	SHORT $LN19@getMethodD
$LN18@getMethodD:
; Line 257
	lea	ecx, DWORD PTR _it$101060[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
$LN19@getMethodD:
	lea	ecx, DWORD PTR $T109316[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	?end@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::end
	push	eax
	lea	ecx, DWORD PTR _it$101060[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN17@getMethodD
; Line 259
	mov	eax, DWORD PTR _i$101051[ebp]
	cmp	eax, DWORD PTR _numberOfMethods$101033[ebp]
	jl	SHORT $LN16@getMethodD
; Line 260
	jmp	SHORT $LN17@getMethodD
$LN16@getMethodD:
; Line 263
	lea	ecx, DWORD PTR _it$101060[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBEABQAXXZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator*
	mov	ecx, DWORD PTR _i$101051[ebp]
	mov	edx, DWORD PTR _ramMethodsPtr$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 264
	mov	ecx, DWORD PTR _i$101051[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$101051[ebp], ecx
; Line 265
	jmp	SHORT $LN18@getMethodD
$LN17@getMethodD:
; Line 305
	mov	DWORD PTR _stringBytesLength$101083[ebp], 200000 ; 00030d40H
; Line 307
	mov	edx, DWORD PTR _stringBytesLength$101083[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hc_alloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAEH@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_alloc
	mov	DWORD PTR _stringBytes$[ebp], eax
; Line 308
	cmp	DWORD PTR _stringBytes$[ebp], 0
	jne	SHORT $LN15@getMethodD
; Line 309
	jmp	$cleanup$101044
$LN15@getMethodD:
; Line 314
	lea	eax, DWORD PTR _stringBytesLength$101083[ebp]
	push	eax
	mov	ecx, DWORD PTR _stringBytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _descriptorBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _numberOfMethods$101033[ebp]
	push	eax
	mov	ecx, DWORD PTR _ramMethods$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+140]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 24					; 00000018H
	mov	DWORD PTR _error$101040[ebp], eax
; Line 315
	cmp	DWORD PTR _error$101040[ebp], 0
	jne	$cleanup$101044
; Line 317
	mov	eax, DWORD PTR _descriptorBuffer$[ebp]
	mov	DWORD PTR _descriptors$101087[ebp], eax
; Line 319
	mov	DWORD PTR _j$101089[ebp], 0
	jmp	SHORT $LN12@getMethodD
$LN11@getMethodD:
	mov	ecx, DWORD PTR _j$101089[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$101089[ebp], ecx
$LN12@getMethodD:
	mov	edx, DWORD PTR _j$101089[ebp]
	cmp	edx, DWORD PTR _numberOfMethods$101033[ebp]
	jge	$cleanup$101044
; Line 320
	mov	eax, DWORD PTR _j$101089[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _descriptors$101087[ebp]
	cmp	DWORD PTR [ecx+eax+8], 0
	jne	$LN9@getMethodD
; Line 322
	push	1
	push	3
	lea	ecx, DWORD PTR _ss2$101094[ebp]
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 323
	mov	edx, DWORD PTR _j$101089[ebp]
	mov	eax, DWORD PTR _ramMethodsPtr$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	lea	ecx, DWORD PTR _ss2$101094[ebp+16]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@PBX@Z
; Line 324
	lea	edx, DWORD PTR _method$101114[ebp]
	push	edx
	lea	ecx, DWORD PTR _ss2$101094[ebp]
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 325
	push	OFFSET $SG101119
	lea	ecx, DWORD PTR $T101116[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	eax, DWORD PTR $T101116[ebp]
	push	eax
	lea	ecx, DWORD PTR _method$101114[ebp]
	push	ecx
	call	?startsWith@util@common@ibmras@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; ibmras::common::util::startsWith
	add	esp, 8
	mov	BYTE PTR $T109317[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T101116[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	edx, BYTE PTR $T109317[ebp]
	test	edx, edx
	je	SHORT $LN8@getMethodD
; Line 326
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	2
	lea	ecx, DWORD PTR $T101120[ebp]
	push	ecx
	lea	ecx, DWORD PTR _method$101114[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	DWORD PTR tv279[ebp], eax
	mov	edx, DWORD PTR tv279[ebp]
	mov	DWORD PTR tv430[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv430[ebp]
	push	eax
	lea	ecx, DWORD PTR _method$101114[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T101120[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@getMethodD:
; Line 333
	mov	ecx, DWORD PTR _j$101089[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _descriptors$101087[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _cls$101121[ebp], eax
; Line 334
	mov	ecx, DWORD PTR _j$101089[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _descriptors$101087[ebp]
	mov	eax, DWORD PTR [edx+ecx+4]
	mov	DWORD PTR _mthd$101123[ebp], eax
; Line 337
	cmp	DWORD PTR _cls$101121[ebp], 0
	je	$LN7@getMethodD
	cmp	DWORD PTR _mthd$101123[ebp], 0
	je	$LN7@getMethodD
; Line 338
	lea	ecx, DWORD PTR _ss$[ebp]
	test	ecx, ecx
	je	SHORT $LN42@getMethodD
	lea	edx, DWORD PTR _ss$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR tv318[ebp], edx
	jmp	SHORT $LN43@getMethodD
$LN42@getMethodD:
	mov	DWORD PTR tv318[ebp], 0
$LN43@getMethodD:
	push	OFFSET $SG101151
	mov	eax, DWORD PTR _mthd$101123[ebp]
	push	eax
	push	OFFSET $SG101152
	mov	ecx, DWORD PTR _cls$101121[ebp]
	push	ecx
	push	OFFSET $SG101153
	lea	edx, DWORD PTR _method$101114[ebp]
	push	edx
	mov	eax, DWORD PTR tv318[ebp]
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN7@getMethodD:
; Line 346
	mov	ecx, DWORD PTR _j$101089[ebp]
	mov	edx, DWORD PTR _ramMethodsPtr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEIABQAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
; Line 347
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _method$101114[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ss2$101094[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	jmp	SHORT $LN6@getMethodD
$LN9@getMethodD:
; Line 348
	mov	ecx, DWORD PTR _j$101089[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _descriptors$101087[ebp]
	cmp	DWORD PTR [edx+ecx+8], 23		; 00000017H
	jne	SHORT $LN6@getMethodD
; Line 350
	mov	eax, DWORD PTR _j$101089[ebp]
	mov	ecx, DWORD PTR _ramMethodsPtr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEIABQAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
$LN6@getMethodD:
; Line 352
	jmp	$LN11@getMethodD
$cleanup$101044:
; Line 360
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN4@getMethodD
	push	OFFSET $SG101157
	push	5
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN4@getMethodD:
; Line 361
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	?release@Lock@port@common@ibmras@@QAEHXZ ; ibmras::common::port::Lock::release
; Line 363
	mov	edx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [edx+8], 5
	jl	SHORT $LN3@getMethodD
	push	OFFSET $SG101159
	push	5
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	eax
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN3@getMethodD:
; Line 365
	lea	ecx, DWORD PTR _stringBytes$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
; Line 366
	lea	edx, DWORD PTR _ramMethods$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
; Line 367
	lea	eax, DWORD PTR _descriptorBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
; Line 369
	mov	DWORD PTR _mdata$[ebp], 0
; Line 370
	lea	ecx, DWORD PTR _datastring$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ss$[ebp]
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 371
	lea	ecx, DWORD PTR _datastring$[ebp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	test	eax, eax
	jbe	SHORT $LN2@getMethodD
; Line 372
	push	0
	lea	ecx, DWORD PTR _datastring$[ebp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	push	eax
	lea	ecx, DWORD PTR _datastring$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?generateData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@IPBDH_N@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::generateData
	mov	DWORD PTR _mdata$[ebp], eax
; Line 373
	mov	edx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [edx+8], 5
	jl	SHORT $LN2@getMethodD
	mov	eax, DWORD PTR _mdata$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG101168
	push	5
	mov	edx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	edx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 16					; 00000010H
$LN2@getMethodD:
; Line 375
	mov	eax, DWORD PTR _mdata$[ebp]
	mov	DWORD PTR $T109320[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _datastring$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T109320[ebp]
$LN38@getMethodD:
; Line 376
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$3:
	lea	ecx, DWORD PTR _ss$[ebp]
	jmp	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$4:
	lea	ecx, DWORD PTR _mdheader$101019[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$5:
	lea	ecx, DWORD PTR _ss2$101094[ebp]
	jmp	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$6:
	lea	ecx, DWORD PTR _method$101114[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$7:
	lea	ecx, DWORD PTR $T101116[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$8:
	lea	ecx, DWORD PTR $T101120[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ$9:
	lea	ecx, DWORD PTR _datastring$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-604]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getMethodData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@XZ ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::getMethodData
; Function compile flags: /Odtp
;	COMDAT ?AttachCurrentThreadAsDaemon@JavaVM_@@QAEHPAPAXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p_env$ = 8						; size = 4
_args$ = 12						; size = 4
?AttachCurrentThreadAsDaemon@JavaVM_@@QAEHPAPAXPAX@Z PROC ; JavaVM_::AttachCurrentThreadAsDaemon, COMDAT
; _this$ = ecx
; File c:\javabuilds\javademo\sdk\include\jni.h
; Line 720
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p_env$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	8
?AttachCurrentThreadAsDaemon@JavaVM_@@QAEHPAPAXPAX@Z ENDP ; JavaVM_::AttachCurrentThreadAsDaemon
_TEXT	ENDS
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
; Function compile flags: /Odtp
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
PUBLIC	?DetachCurrentThread@JavaVM_@@QAEHXZ		; JavaVM_::DetachCurrentThread
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T109337 = -4						; size = 4
_mdata$ = 8						; size = 4
?complete@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAXPAUmonitordata@@@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::complete
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\j9\methods\methodlookupprovider.cpp
; Line 378
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 379
	mov	eax, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	cmp	DWORD PTR [eax+8], 5
	jl	SHORT $LN5@complete
	push	OFFSET $SG101176
	push	5
	mov	ecx, DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN5@complete:
; Line 380
	cmp	DWORD PTR _mdata$[ebp], 0
	je	SHORT $LN4@complete
; Line 381
	mov	edx, DWORD PTR _mdata$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN3@complete
; Line 382
	mov	eax, DWORD PTR _mdata$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
	call	?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
$LN3@complete:
; Line 384
	mov	ecx, DWORD PTR _mdata$[ebp]
	mov	DWORD PTR $T109337[ebp], ecx
	mov	edx, DWORD PTR $T109337[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 385
	jmp	SHORT $LN6@complete
$LN4@complete:
; Line 386
	mov	eax, DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
	cmp	DWORD PTR [eax+172], 0
	je	SHORT $LN6@complete
; Line 387
	mov	ecx, DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
	mov	ecx, DWORD PTR [ecx+144]
	call	?DetachCurrentThread@JavaVM_@@QAEHXZ	; JavaVM_::DetachCurrentThread
; Line 388
	mov	edx, DWORD PTR ?instance@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@0PAV123456@A ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::instance
	mov	DWORD PTR [edx+172], 0
$LN6@complete:
; Line 391
	mov	esp, ebp
	pop	ebp
	ret	0
?complete@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@SAXPAUmonitordata@@@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::complete
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?DetachCurrentThread@JavaVM_@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DetachCurrentThread@JavaVM_@@QAEHXZ PROC		; JavaVM_::DetachCurrentThread, COMDAT
; _this$ = ecx
; File c:\javabuilds\javademo\sdk\include\jni.h
; Line 718
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?DetachCurrentThread@JavaVM_@@QAEHXZ ENDP		; JavaVM_::DetachCurrentThread
_TEXT	ENDS
EXTRN	?createAsciiString@util@common@ibmras@@YAPADPBD@Z:PROC ; ibmras::common::util::createAsciiString
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T109341 = -8						; size = 4
_data$ = -4						; size = 4
_sourceID$ = 8						; size = 4
_dataToSend$ = 12					; size = 4
_size$ = 16						; size = 4
_persistentData$ = 20					; size = 1
?generateData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@IPBDH_N@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::generateData
; _this$ = ecx
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\j9\methods\methodlookupprovider.cpp
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 395
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T109341[ebp], eax
	mov	eax, DWORD PTR $T109341[ebp]
	mov	DWORD PTR _data$[ebp], eax
; Line 396
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	mov	DWORD PTR [ecx], eax
; Line 397
	cmp	DWORD PTR _dataToSend$[ebp], 0
	je	SHORT $LN4@generateDa
	cmp	DWORD PTR _size$[ebp], 0
	jle	SHORT $LN4@generateDa
; Line 398
	mov	ecx, DWORD PTR _dataToSend$[ebp]
	push	ecx
	call	?createAsciiString@util@common@ibmras@@YAPADPBD@Z ; ibmras::common::util::createAsciiString
	add	esp, 4
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 399
	jmp	SHORT $LN3@generateDa
$LN4@generateDa:
; Line 400
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN3@generateDa:
; Line 402
	mov	ecx, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN2@generateDa
; Line 403
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 404
	jmp	SHORT $LN1@generateDa
$LN2@generateDa:
; Line 405
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@generateDa:
; Line 407
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR _sourceID$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 408
	mov	ecx, DWORD PTR _data$[ebp]
	mov	dl, BYTE PTR _persistentData$[ebp]
	mov	BYTE PTR [ecx+16], dl
; Line 409
	mov	eax, DWORD PTR _data$[ebp]
; Line 410
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?generateData@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAUmonitordata@@IPBDH_N@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::generateData
_TEXT	ENDS
EXTRN	?allocate@memory@common@ibmras@@YAPAEI@Z:PROC	; ibmras::common::memory::allocate
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?hc_alloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAEH@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_alloc
; _this$ = ecx
; Line 416
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 417
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	?allocate@memory@common@ibmras@@YAPAEI@Z ; ibmras::common::memory::allocate
	add	esp, 4
; Line 418
	mov	esp, ebp
	pop	ebp
	ret	4
?hc_alloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEPAEH@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_alloc
_TEXT	ENDS
EXTRN	?deallocate@memory@common@ibmras@@YAXPAPAE@Z:PROC ; ibmras::common::memory::deallocate
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z PROC ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
; _this$ = ecx
; Line 420
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 421
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	?deallocate@memory@common@ibmras@@YAXPAPAE@Z ; ibmras::common::memory::deallocate
	add	esp, 4
; Line 422
	mov	esp, ebp
	pop	ebp
	ret	4
?hc_dealloc@MethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@AAEXPAPAE@Z ENDP ; ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::hc_dealloc
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109345 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 24					; 00000018H
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T109345[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 544
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 545
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	ecx
	push	0
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 546
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109355 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 578
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T109355[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 579
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 580
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 581
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109365 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T109365[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 593
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 594
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 595
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 708
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 709
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 710
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 752
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 753
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 754
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 762
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 763
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 764
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 767
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 768
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 769
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT
; _this$ = ecx
; Line 1505
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1506
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 1507
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 1512
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Odtp
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ch$ = 8						; size = 1
__Off$ = 12						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx
; Line 1647
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1648
	push	1
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Odtp
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T109400 = -8						; size = 4
$T109398 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT
; _this$ = ecx
; Line 1847
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T109400[ebp], 0
; Line 1848
	lea	eax, DWORD PTR $T109398[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T109400[ebp]
	or	ecx, 1
	mov	DWORD PTR $T109400[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1849
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@ABV?$allocator@PAX@1@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
PUBLIC	??0?$allocator@PAX@std@@QAE@XZ			; std::allocator<void *>::allocator<void *>
; Function compile flags: /Odtp
;	COMDAT ??0?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T109405 = -2						; size = 1
$T109404 = -1						; size = 1
??0?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ PROC ; std::set<void *,std::less<void *>,std::allocator<void *> >::set<void *,std::less<void *>,std::allocator<void *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\set
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T109404[ebp]
	call	??0?$allocator@PAX@std@@QAE@XZ		; std::allocator<void *>::allocator<void *>
	push	eax
	lea	eax, DWORD PTR $T109405[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@ABV?$allocator@PAX@1@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$set@PAXU?$less@PAX@std@@V?$allocator@PAX@2@@std@@QAE@XZ ENDP ; std::set<void *,std::less<void *>,std::allocator<void *> >::set<void *,std::less<void *>,std::allocator<void *> >
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
PUBLIC	?_Tidy@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >, COMDAT
; _this$ = ecx
; Line 790
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 791
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tidy
; Line 792
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
__ehhandler$??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
PUBLIC	?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
; Function compile flags: /Odtp
;	COMDAT ?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::begin, COMDAT
; _this$ = ecx
; Line 806
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 808
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::end, COMDAT
; _this$ = ecx
; Line 816
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 817
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 818
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::size, COMDAT
; _this$ = ecx
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 869
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 870
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::size
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
PUBLIC	??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,unsigned int>
PUBLIC	?equal_range@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::equal_range
; Function compile flags: /Odtp
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEIABQAX@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109424 = -16						; size = 4
__Where$ = -12						; size = 8
__Num$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEIABQAX@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase, COMDAT
; _this$ = ecx
; Line 1394
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1395
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equal_range@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::equal_range
; Line 1396
	mov	DWORD PTR __Num$[ebp], 0
; Line 1397
	lea	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	call	??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,unsigned int>
	add	esp, 12					; 0000000cH
; Line 1398
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T109424[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
; Line 1399
	mov	eax, DWORD PTR __Num$[ebp]
; Line 1400
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEIABQAX@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > > >
PUBLIC	?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
PUBLIC	?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
PUBLIC	?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy
PUBLIC	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
PUBLIC	??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__catchsym$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$3
__unwindtable$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv157 = -44						; size = 4
tv156 = -40						; size = 4
tv69 = -36						; size = 4
_this$ = -32						; size = 4
$T109429 = -28						; size = 4
$T109428 = -24						; size = 4
$T109427 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >, COMDAT
; _this$ = ecx
; Line 535
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T109427[ebp], esp
	push	eax
	call	??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 536
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@vector@2
; Line 537
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 539
	lea	edx, DWORD PTR $T109428[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
	mov	DWORD PTR tv69[ebp], eax
	lea	eax, DWORD PTR $T109429[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR tv156[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > > >
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR [ecx+4], edx
	jmp	SHORT $LN5@vector@2
__catch$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$0:
; Line 541
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy
; Line 542
	push	0
	push	0
	call	__CxxThrowException@8
; Line 543
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN3@vector@2
	ret	0
$LN5@vector@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector@2:
; Line 544
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
__ehhandler$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
__ehhandler$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::deallocate
PUBLIC	??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>
PUBLIC	?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::capacity
PUBLIC	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
PUBLIC	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
PUBLIC	?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::clear
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Ptr$103057 = -8					; size = 4
__Ptr$103047 = -4					; size = 4
__Right$ = 8						; size = 4
??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::operator=, COMDAT
; _this$ = ecx
; Line 709
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 710
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN9@operator
; Line 712
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 714
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	test	eax, eax
	jne	SHORT $LN8@operator
; Line 715
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::clear
	jmp	$LN9@operator
$LN8@operator:
; Line 716
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	cmp	esi, eax
	ja	SHORT $LN6@operator
; Line 719
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$103047[ebp], eax
; Line 720
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$103047[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Line 721
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	jmp	$LN9@operator
$LN6@operator:
; Line 723
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::capacity
	cmp	esi, eax
	ja	SHORT $LN4@operator
; Line 725
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	mov	edx, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Ptr$103057[ebp], edx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Ptr$103057[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 12					; 0000000cH
; Line 727
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$103057[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 729
	jmp	SHORT $LN9@operator
$LN4@operator:
; Line 731
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@operator
; Line 733
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Line 735
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::deallocate
$LN2@operator:
; Line 737
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@operator
; Line 739
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN9@operator:
; Line 742
	mov	eax, DWORD PTR _this$[ebp]
; Line 743
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::operator=
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Function compile flags: /Odtp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
; Function compile flags: /Odtp
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBEABQAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBEABQAXXZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 230
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
; Line 247
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBEABQAXXZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 265
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::operator++
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
; Line 267
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator!=, COMDAT
; _this$ = ecx
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 335
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 336
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
_DATA	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	060H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	050H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	060H
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109485 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 658
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T109485[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN1@basic_stri
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T109485[ebp]
	or	edx, 1
	mov	DWORD PTR $T109485[ebp], edx
$LN1@basic_stri:
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	edx, DWORD PTR __Mode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Line 659
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T109485[ebp]
	and	eax, 1
	je	$LN5@basic_stri
	and	DWORD PTR $T109485[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	jmp	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
$LN5@basic_stri:
	ret	0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-96]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-96], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	call	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	jmp	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
; Function compile flags: /Odtp
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T109509 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T109509[ebp], 0
; Line 714
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T109509[ebp]
	or	ecx, 1
	mov	DWORD PTR $T109509[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 715
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 77
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv199 = -36						; size = 4
tv195 = -32						; size = 4
_this$ = -28						; size = 4
$T109522 = -24						; size = 4
__Newsize$103133 = -20					; size = 4
__Oldptr$103140 = -16					; size = 4
__Oldsize$103132 = -12					; size = 4
__Inc$103134 = -8					; size = 4
__Newptr$103139 = -4					; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 8
	je	SHORT $LN18@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN18@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+60]
	jae	SHORT $LN18@overflow
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN18@overflow:
; Line 125
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T109522[ebp], eax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T109522[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@overflow
; Line 126
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
	jmp	$LN19@overflow
; Line 127
	jmp	$LN19@overflow
$LN17@overflow:
; Line 128
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN15@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jae	SHORT $LN15@overflow
; Line 130
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	mov	BYTE PTR [eax], bl
; Line 131
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN19@overflow
	jmp	$LN19@overflow
$LN15@overflow:
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 2
	je	SHORT $LN13@overflow
; Line 134
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN19@overflow
; Line 135
	jmp	$LN19@overflow
$LN13@overflow:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN21@overflow
	mov	DWORD PTR tv195[ebp], 0
	jmp	SHORT $LN22@overflow
$LN21@overflow:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	DWORD PTR tv195[ebp], esi
$LN22@overflow:
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR __Oldsize$103132[ebp], eax
; Line 139
	mov	ecx, DWORD PTR __Oldsize$103132[ebp]
	mov	DWORD PTR __Newsize$103133[ebp], ecx
; Line 141
	mov	edx, DWORD PTR __Newsize$103133[ebp]
	shr	edx, 1
	cmp	edx, 32					; 00000020H
	jae	SHORT $LN23@overflow
	mov	DWORD PTR tv199[ebp], 32		; 00000020H
	jmp	SHORT $LN24@overflow
$LN23@overflow:
	mov	eax, DWORD PTR __Newsize$103133[ebp]
	shr	eax, 1
	mov	DWORD PTR tv199[ebp], eax
$LN24@overflow:
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR __Inc$103134[ebp], ecx
$LN11@overflow:
; Line 143
	cmp	DWORD PTR __Inc$103134[ebp], 0
	jbe	SHORT $LN10@overflow
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, DWORD PTR __Inc$103134[ebp]
	cmp	edx, DWORD PTR __Newsize$103133[ebp]
	jae	SHORT $LN10@overflow
; Line 144
	mov	eax, DWORD PTR __Inc$103134[ebp]
	shr	eax, 1
	mov	DWORD PTR __Inc$103134[ebp], eax
	jmp	SHORT $LN11@overflow
$LN10@overflow:
; Line 145
	cmp	DWORD PTR __Inc$103134[ebp], 0
	jne	SHORT $LN9@overflow
; Line 146
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN19@overflow
$LN9@overflow:
; Line 148
	mov	ecx, DWORD PTR __Newsize$103133[ebp]
	add	ecx, DWORD PTR __Inc$103134[ebp]
	mov	DWORD PTR __Newsize$103133[ebp], ecx
; Line 150
	mov	edx, DWORD PTR __Newsize$103133[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Newptr$103139[ebp], eax
; Line 151
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR __Oldptr$103140[ebp], eax
; Line 153
	cmp	DWORD PTR __Oldsize$103132[ebp], 0
	jbe	SHORT $LN8@overflow
; Line 154
	mov	eax, DWORD PTR __Oldsize$103132[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$103140[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$103139[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN8@overflow:
; Line 156
	cmp	DWORD PTR __Oldsize$103132[ebp], 0
	jne	SHORT $LN7@overflow
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newptr$103139[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 159
	mov	edx, DWORD PTR __Newptr$103139[ebp]
	add	edx, DWORD PTR __Newsize$103133[ebp]
	push	edx
	mov	eax, DWORD PTR __Newptr$103139[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
; Line 160
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 4
	je	SHORT $LN6@overflow
; Line 161
	mov	eax, DWORD PTR __Newptr$103139[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Newptr$103139[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 162
	jmp	SHORT $LN5@overflow
$LN6@overflow:
; Line 163
	mov	edx, DWORD PTR __Newptr$103139[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Newptr$103139[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$103139[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN5@overflow:
; Line 165
	jmp	$LN4@overflow
$LN7@overflow:
; Line 167
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	sub	eax, DWORD PTR __Oldptr$103140[ebp]
	add	eax, DWORD PTR __Newptr$103139[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 170
	mov	edx, DWORD PTR __Newptr$103139[ebp]
	add	edx, DWORD PTR __Newsize$103133[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$103140[ebp]
	add	eax, DWORD PTR __Newptr$103139[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$103140[ebp]
	add	eax, DWORD PTR __Newptr$103139[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 4
	je	SHORT $LN3@overflow
; Line 172
	mov	edx, DWORD PTR __Newptr$103139[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Newptr$103139[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 173
	jmp	SHORT $LN4@overflow
$LN3@overflow:
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$103140[ebp]
	add	eax, DWORD PTR __Newptr$103139[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$103139[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN4@overflow:
; Line 179
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 1
	je	SHORT $LN1@overflow
; Line 180
	mov	ecx, DWORD PTR __Oldsize$103132[ebp]
	push	ecx
	mov	edx, DWORD PTR __Oldptr$103140[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@overflow:
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 183
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	mov	BYTE PTR [eax], bl
; Line 184
	mov	eax, DWORD PTR __Meta$[ebp]
$LN19@overflow:
; Line 186
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 496
	push	ebp
	mov	ebp, esp
; Line 497
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 498
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; Line 541
	push	ebp
	mov	ebp, esp
; Line 542
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 543
	pop	ebp
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 554
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; Line 557
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 558
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	ecx, DWORD PTR __Meta$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN3@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR tv69[ebp], eax
$LN4@not_eof:
	mov	eax, DWORD PTR tv69[ebp]
; Line 559
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; Line 562
	push	ebp
	mov	ebp, esp
; Line 563
	or	eax, -1
; Line 564
	pop	ebp
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T109543 = -12						; size = 4
$T109542 = -5						; size = 1
$T109541 = -4						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN3@pbackfail
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T109541[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T109541[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T109542[ebp], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T109542[ebp]
	push	ecx
	call	?eq@?$char_traits@D@std@@SA_NABD0@Z	; std::char_traits<char>::eq
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 2
	je	SHORT $LN4@pbackfail
$LN3@pbackfail:
; Line 195
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	SHORT $LN5@pbackfail
; Line 196
	jmp	SHORT $LN5@pbackfail
$LN4@pbackfail:
; Line 198
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 199
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T109543[ebp], eax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T109543[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@pbackfail
; Line 200
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	BYTE PTR [eax], bl
$LN1@pbackfail:
; Line 201
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
$LN5@pbackfail:
; Line 203
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 531
	push	ebp
	mov	ebp, esp
; Line 532
	mov	eax, DWORD PTR __Left$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movsx	eax, BYTE PTR [edx]
	xor	edx, edx
	cmp	ecx, eax
	sete	dl
	mov	al, dl
; Line 533
	pop	ebp
	ret	0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
_TEXT	ENDS
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 206
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN8@underflow
; Line 208
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN9@underflow
	jmp	$LN9@underflow
$LN8@underflow:
; Line 209
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jae	SHORT $LN6@underflow
; Line 210
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	jmp	$LN9@underflow
; Line 211
	jmp	$LN9@underflow
$LN6@underflow:
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 4
	jne	SHORT $LN3@underflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN3@underflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	ja	SHORT $LN4@underflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+60], eax
	ja	SHORT $LN4@underflow
$LN3@underflow:
; Line 213
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	SHORT $LN9@underflow
; Line 214
	jmp	SHORT $LN9@underflow
$LN4@underflow:
; Line 216
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN1@underflow
; Line 217
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN1@underflow:
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 219
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
$LN9@underflow:
; Line 221
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 546
	push	ebp
	mov	ebp, esp
; Line 547
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 548
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
; Function compile flags: /Odtp
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv411 = -20						; size = 8
tv344 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 227
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN21@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN21@seekoff
; Line 228
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN21@seekoff:
; Line 230
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 1
	je	$LN20@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN20@seekoff
; Line 232
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN19@seekoff
; Line 233
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 234
	jmp	SHORT $LN18@seekoff
$LN19@seekoff:
; Line 235
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN17@seekoff
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	jne	SHORT $LN17@seekoff
; Line 236
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN18@seekoff
$LN17@seekoff:
; Line 237
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN18@seekoff
; Line 238
	mov	ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Off$[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR __Off$[ebp+4], eax
$LN18@seekoff:
; Line 240
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN14@seekoff
	jg	SHORT $LN24@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN14@seekoff
$LN24@seekoff:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv344[ebp], eax
	mov	DWORD PTR tv344[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv344[ebp+4]
	jg	SHORT $LN14@seekoff
	jl	SHORT $LN25@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv344[ebp]
	ja	SHORT $LN14@seekoff
$LN25@seekoff:
; Line 242
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 243
	mov	edx, DWORD PTR __Which$[ebp]
	and	edx, 2
	je	SHORT $LN13@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN13@seekoff
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN13@seekoff:
; Line 247
	jmp	SHORT $LN12@seekoff
$LN14@seekoff:
; Line 248
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
	jmp	$LN11@seekoff
$LN20@seekoff:
; Line 250
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	je	$LN10@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN10@seekoff
; Line 252
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN9@seekoff
; Line 253
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN8@seekoff
$LN9@seekoff:
; Line 254
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN7@seekoff
; Line 255
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN8@seekoff
$LN7@seekoff:
; Line 256
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN8@seekoff
; Line 257
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 259
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	SHORT $LN4@seekoff
	jg	SHORT $LN26@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN4@seekoff
$LN26@seekoff:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv411[ebp], eax
	mov	DWORD PTR tv411[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv411[ebp+4]
	jg	SHORT $LN4@seekoff
	jl	SHORT $LN27@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv411[ebp]
	ja	SHORT $LN4@seekoff
$LN27@seekoff:
; Line 261
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 262
	jmp	SHORT $LN3@seekoff
$LN4@seekoff:
; Line 263
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN3@seekoff:
	jmp	SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
	mov	edx, DWORD PTR __Off$[ebp]
	or	edx, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN11@seekoff
; Line 273
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 274
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 275
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
; Function compile flags: /Odtp
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv312 = -32						; size = 8
tv272 = -24						; size = 8
tv253 = -16						; size = 4
_this$ = -12						; size = 4
__Off$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	lea	ecx, DWORD PTR __Ptr$[ebp]
	call	??B?$fpos@H@std@@QBE_JXZ		; std::fpos<int>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 281
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN12@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN12@seekpos
; Line 282
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN12@seekpos:
; Line 284
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	DWORD PTR tv253[ebp], eax
	mov	ecx, DWORD PTR tv253[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN11@seekpos
	mov	eax, DWORD PTR tv253[ebp]
	mov	ecx, DWORD PTR __Off$[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN11@seekpos
	jmp	$LN10@seekpos
$LN11@seekpos:
; Line 286
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 1
	je	$LN9@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN9@seekpos
; Line 288
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN8@seekpos
	jg	SHORT $LN15@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN8@seekpos
$LN15@seekpos:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv272[ebp], eax
	mov	DWORD PTR tv272[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv272[ebp+4]
	jg	SHORT $LN8@seekpos
	jl	SHORT $LN16@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv272[ebp]
	ja	SHORT $LN8@seekpos
$LN16@seekpos:
; Line 290
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 291
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	je	SHORT $LN7@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN7@seekpos
; Line 293
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN7@seekpos:
; Line 295
	jmp	SHORT $LN6@seekpos
$LN8@seekpos:
; Line 296
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
	jmp	$LN10@seekpos
$LN9@seekpos:
; Line 298
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	$LN4@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN4@seekpos
; Line 300
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	SHORT $LN3@seekpos
	jg	SHORT $LN17@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN3@seekpos
$LN17@seekpos:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv312[ebp], eax
	mov	DWORD PTR tv312[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv312[ebp+4]
	jg	SHORT $LN3@seekpos
	jl	SHORT $LN18@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv312[ebp]
	ja	SHORT $LN3@seekpos
$LN18@seekpos:
; Line 302
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 303
	jmp	SHORT $LN2@seekpos
$LN3@seekpos:
; Line 304
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekpos:
; Line 306
	jmp	SHORT $LN10@seekpos
$LN4@seekpos:
; Line 307
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN10@seekpos:
; Line 308
	mov	edx, DWORD PTR __Off$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 309
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 96					; 00000060H
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109568 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
__Al$ = 20						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 571
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T109568[ebp], esp
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 572
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 573
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 574
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T109579 = -2						; size = 1
$T109578 = -1						; size = 1
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 714
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@assign
; Line 716
	jmp	$LN5@assign
$LN6@assign:
; Line 717
	lea	ecx, DWORD PTR $T109578[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T109579[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	call	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator!=<char,char>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@assign
	mov	ecx, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN4@assign
; Line 718
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 719
	jmp	SHORT $LN5@assign
$LN4@assign:
; Line 721
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 722
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jae	SHORT $LN2@assign
; Line 724
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign
$LN2@assign:
; Line 727
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 728
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
$LN1@assign:
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
; Line 731
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 733
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
$LN5@assign:
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
; Line 736
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 516
	push	ebp
	mov	ebp, esp
; Line 517
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 518
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 886
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 888
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 893
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@2
; Line 894
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign@2:
; Line 895
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@2
; Line 897
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign@2:
; Line 899
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@2
; Line 900
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign@2
$LN3@assign@2:
; Line 901
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@2
; Line 903
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 904
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign@2:
; Line 906
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign@2:
; Line 907
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 910
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 916
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@3
; Line 917
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign@3
$LN2@assign@3:
; Line 919
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign@3
; Line 921
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 922
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign@3:
; Line 924
	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign@3:
; Line 925
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 930
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 931
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 490
	push	ebp
	mov	ebp, esp
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
; Line 492
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?find@?$char_traits@D@std@@SAPBDPBDIABD@Z	; std::char_traits<char>::find
; Function compile flags: /Odtp
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__Vptr$103411 = -12					; size = 4
__Uptr$103410 = -8					; size = 4
__Nm$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1617
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN6@find
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	ja	SHORT $LN6@find
; Line 1624
	mov	eax, DWORD PTR __Off$[ebp]
	jmp	$LN7@find
$LN6@find:
; Line 1627
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jae	$LN5@find
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Nm$[ebp], edx
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Nm$[ebp]
	ja	$LN5@find
; Line 1630
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR __Nm$[ebp]
	sub	edx, ecx
	mov	DWORD PTR __Nm$[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Vptr$103411[ebp], eax
; Line 1632
	jmp	SHORT $LN4@find
$LN3@find:
	mov	eax, DWORD PTR __Uptr$103410[ebp]
	sub	eax, DWORD PTR __Vptr$103411[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR __Nm$[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Nm$[ebp], ecx
	mov	edx, DWORD PTR __Uptr$103410[ebp]
	add	edx, 1
	mov	DWORD PTR __Vptr$103411[ebp], edx
$LN4@find:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Nm$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Vptr$103411[ebp]
	push	edx
	call	?find@?$char_traits@D@std@@SAPBDPBDIABD@Z ; std::char_traits<char>::find
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Uptr$103410[ebp], eax
	cmp	DWORD PTR __Uptr$103410[ebp], 0
	je	SHORT $LN5@find
; Line 1633
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Uptr$103410[ebp]
	push	edx
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@find
; Line 1634
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Uptr$103410[ebp]
	sub	ecx, eax
	mov	eax, ecx
	jmp	SHORT $LN7@find
$LN1@find:
; Line 1635
	jmp	SHORT $LN3@find
$LN5@find:
; Line 1637
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
$LN7@find:
; Line 1638
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 485
	push	ebp
	mov	ebp, esp
; Line 486
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
; Line 487
	pop	ebp
	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
_TEXT	ENDS
EXTRN	__imp__memchr:PROC
; Function compile flags: /Odtp
;	COMDAT ?find@?$char_traits@D@std@@SAPBDPBDIABD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 4
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z PROC		; std::char_traits<char>::find, COMDAT
; Line 510
	push	ebp
	mov	ebp, esp
; Line 511
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ch$[ebp]
	movsx	edx, BYTE PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	DWORD PTR __imp__memchr
	add	esp, 12					; 0000000cH
; Line 512
	pop	ebp
	ret	0
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z ENDP		; std::char_traits<char>::find
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1905
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1906
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1907
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$103430 = -4					; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1987
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1988
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 1990
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 1992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$103430[ebp], eax
; Line 1993
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 1994
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$103430[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 1995
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Ptr$103430[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN3@Tidy:
; Line 1997
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; Line 1998
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1999
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv80[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv80[ebp]
; Line 2011
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 454
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 458
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
PUBLIC	??0?$allocator@PAX@std@@QAE@ABV01@@Z		; std::allocator<void *>::allocator<void *>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@ABV?$allocator@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T109620 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@ABV?$allocator@PAX@1@@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 698
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T109620[ebp], esp
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@PAX@std@@QAE@ABV01@@Z	; std::allocator<void *>::allocator<void *>
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
; Line 699
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@ABV?$allocator@PAX@1@@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
PUBLIC	?clear@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::clear
; Function compile flags: /Odtp
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109627 = -16						; size = 4
$T109626 = -12						; size = 4
$T109625 = -8						; size = 4
$T109624 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@0@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase, COMDAT
; _this$ = ecx
; Line 1379
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1380
	lea	eax, DWORD PTR $T109624[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@erase
	lea	edx, DWORD PTR $T109625[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@erase
; Line 1382
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::clear
; Line 1383
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase
; Line 1385
	jmp	SHORT $LN5@erase
$LN2@erase:
; Line 1387
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@erase
; Line 1388
	push	0
	lea	ecx, DWORD PTR $T109626[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T109627[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
	jmp	SHORT $LN2@erase
$LN1@erase:
; Line 1389
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase:
; Line 1391
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@0@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
_TEXT	ENDS
PUBLIC	?_Eqrange@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Eqrange
; Function compile flags: /Odtp
;	COMDAT ?equal_range@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::equal_range, COMDAT
; _this$ = ecx
; Line 1469
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1470
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eqrange@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Eqrange
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1471
	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::equal_range
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
; Function compile flags: /Odtp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost, COMDAT
; _this$ = ecx
; Line 1758
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
; Line 1760
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T109636 = -12						; size = 4
$T109635 = -8						; size = 4
$T109634 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1865
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1866
	lea	eax, DWORD PTR $T109634[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::end
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T109635[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::begin
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T109636[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
; Line 1867
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
; Function compile flags: /Odtp
;	COMDAT ??1?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >, COMDAT
; _this$ = ecx
; Line 554
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 555
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
; Line 556
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::~_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval, COMDAT
; Line 636
	push	ebp
	mov	ebp, esp
; Line 637
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH
; Line 638
	pop	ebp
	ret	0
?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAX@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAX@std@@QAE@XZ PROC			; std::allocator<void *>::allocator<void *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAX@std@@QAE@XZ ENDP			; std::allocator<void *>::allocator<void *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::capacity
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin, COMDAT
; _this$ = ecx
; Line 786
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 787
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 788
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end, COMDAT
; _this$ = ecx
; Line 796
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 797
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 798
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::erase
PUBLIC	?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
PUBLIC	?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T109657 = -20						; size = 4
$T109656 = -16						; size = 4
$T109655 = -12						; size = 4
$T109654 = -8						; size = 4
$T109653 = -4						; size = 4
?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::clear, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1218
	lea	eax, DWORD PTR $T109654[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T109653[ebp], ecx
	lea	edx, DWORD PTR $T109656[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T109655[ebp], eax
	mov	ecx, DWORD PTR $T109653[ebp]
	push	ecx
	mov	edx, DWORD PTR $T109655[ebp]
	push	edx
	lea	eax, DWORD PTR $T109657[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::erase
; Line 1219
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::clear
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::allocate
PUBLIC	?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Xlen
PUBLIC	?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::max_size
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy, COMDAT
; _this$ = ecx
; Line 1250
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 1253
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1255
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1256
	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1257
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Xlen
; Line 1259
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1261
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1262
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], ecx
; Line 1263
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN3@Buy:
; Line 1265
	mov	al, 1
$LN6@Buy:
; Line 1266
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@2
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::deallocate
$LN1@Tidy@2:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z PROC ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >, COMDAT
; _this$ = ecx
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z ENDP ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >, COMDAT
; _this$ = ecx
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z PROC ; std::allocator<ibmras::common::Logger *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z ENDP ; std::allocator<ibmras::common::Logger *>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@3
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
$LN1@Tidy@3:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
; Function compile flags: /Odtp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 213
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator==, COMDAT
; _this$ = ecx
; Line 316
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 330
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 331
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
PUBLIC	?_Min@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Min
PUBLIC	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
; Function compile flags: /Odtp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$104518 = -4					; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN6@operator@2
	jmp	$LN5@operator@2
$LN6@operator@2:
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator@2
; Line 63
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Min@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 64
	jmp	SHORT $LN5@operator@2
$LN2@operator@2:
; Line 68
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$104518[ebp], ecx
	mov	edx, DWORD PTR __Pnode$104518[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@operator@2
	mov	ecx, DWORD PTR __Pnode$104518[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@operator@2
; Line 69
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$104518[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$104518[ebp]
	mov	DWORD PTR [ecx], edx
$LN5@operator@2:
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
; Line 73
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 29
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 30
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3
__ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv91 = -112						; size = 4
_this$ = -108						; size = 4
$T109706 = -104						; size = 4
__Nul$104533 = -100					; size = 28
__Str$104531 = -72					; size = 28
__Str$104528 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T109706[ebp], 0
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 2
	jne	$LN4@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN4@str
; Line 97
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+60], eax
	jae	SHORT $LN7@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@str
$LN7@str:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR tv91[ebp], ecx
$LN8@str:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR tv91[ebp]
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	lea	ecx, DWORD PTR __Str$104528[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 98
	lea	eax, DWORD PTR __Str$104528[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T109706[ebp]
	or	ecx, 1
	mov	DWORD PTR $T109706[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Str$104528[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@str
	jmp	$LN5@str
$LN4@str:
; Line 100
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 4
	jne	SHORT $LN2@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN2@str
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	lea	ecx, DWORD PTR __Str$104531[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 103
	lea	ecx, DWORD PTR __Str$104531[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T109706[ebp]
	or	edx, 1
	mov	DWORD PTR $T109706[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Str$104531[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@str
; Line 105
	jmp	SHORT $LN5@str
$LN2@str:
; Line 107
	lea	ecx, DWORD PTR __Nul$104533[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 108
	lea	eax, DWORD PTR __Nul$104533[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T109706[ebp]
	or	ecx, 1
	mov	DWORD PTR $T109706[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Nul$104533[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0:
	lea	ecx, DWORD PTR __Str$104528[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$1:
	mov	eax, DWORD PTR $T109706[ebp]
	and	eax, 1
	je	$LN11@str
	and	DWORD PTR $T109706[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@str:
	ret	0
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2:
	lea	ecx, DWORD PTR __Str$104531[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3:
	lea	ecx, DWORD PTR __Nul$104533[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109718 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T109718[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 551
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 552
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109728 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	mov	ecx, esp
	mov	DWORD PTR $T109728[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 703
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 704
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 705
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 340
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 341
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 1
	je	SHORT $LN1@Tidy@4
; Line 344
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN4@Tidy@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@Tidy@4
$LN4@Tidy@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv88[ebp], eax
$LN5@Tidy@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR tv88[ebp]
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@Tidy@4:
; Line 345
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 346
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
; Line 348
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 349
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Stz@?$fpos@H@std@@0HB				; std::fpos<int>::_Stz
;	COMDAT ?_Stz@?$fpos@H@std@@0HB
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
CONST	SEGMENT
?_Stz@?$fpos@H@std@@0HB DD 00H				; std::fpos<int>::_Stz
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?_Stz@?$fpos@H@std@@0HB	; std::fpos<int>::_Stz
	mov	DWORD PTR [ecx+16], edx
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
; Line 66
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newsize$104599 = -4					; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1108
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase@2
; Line 1110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@erase@2:
; Line 1111
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase@2
; Line 1112
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN2@erase@2:
; Line 1113
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase@2
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1117
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$104599[ebp], eax
; Line 1118
	mov	ecx, DWORD PTR __Newsize$104599[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@erase@2:
; Line 1120
	mov	eax, DWORD PTR _this$[ebp]
$LN5@erase@2:
; Line 1121
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T109748 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; Line 1952
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1953
	mov	BYTE PTR $T109748[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T109748[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 1954
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1958
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1959
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 1960
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 1961
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 1962
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 1963
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 1965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 1966
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 1967
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 1968
	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax
$LN8@Grow:
; Line 1969
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; Line 1972
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1973
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 1974
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 1975
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 1976
	mov	al, 1
$LN4@Inside:
; Line 1977
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2002
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2004
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv80[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv80[ebp]
; Line 2005
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2019
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2020
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN2@Xran:
; Line 2021
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAX@std@@PAX@std@@YAXAAV?$allocator@PAX@0@PAPAX@Z ; std::_Dest_val<std::allocator<void *>,void *>
PUBLIC	??$addressof@PAX@std@@YAPAPAXAAPAX@Z		; std::addressof<void *>
PUBLIC	?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lrotate
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
PUBLIC	?_Max@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Max
PUBLIC	?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Mynode
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
tv182 = -28						; size = 4
tv170 = -24						; size = 4
_this$ = -20						; size = 4
__Fixnodeparent$ = -16					; size = 4
__Pnode$ = -12						; size = 4
__Fixnode$ = -8						; size = 4
__Erasednode$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase, COMDAT
; _this$ = ecx
; Line 1195
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1204
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN40@erase@3
; Line 1205
	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN40@erase@3:
; Line 1206
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax
; Line 1207
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
; Line 1212
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1214
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN39@erase@3
; Line 1215
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], eax
	jmp	SHORT $LN38@erase@3
$LN39@erase@3:
; Line 1216
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN37@erase@3
; Line 1217
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], edx
; Line 1218
	jmp	SHORT $LN38@erase@3
$LN37@erase@3:
; Line 1220
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1221
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
$LN38@erase@3:
; Line 1224
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	$LN35@erase@3
; Line 1226
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
; Line 1227
	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN34@erase@3
; Line 1228
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN34@erase@3:
; Line 1230
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN33@erase@3
; Line 1231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN32@erase@3
$LN33@erase@3:
; Line 1232
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN31@erase@3
; Line 1233
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1234
	jmp	SHORT $LN32@erase@3
$LN31@erase@3:
; Line 1236
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN32@erase@3:
; Line 1238
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN29@erase@3
; Line 1241
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN43@erase@3
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv170[ebp], edx
	jmp	SHORT $LN44@erase@3
$LN43@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv170[ebp], eax
$LN44@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR [eax], ecx
$LN29@erase@3:
; Line 1243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase@3
; Line 1246
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN45@erase@3
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv182[ebp], edx
	jmp	SHORT $LN46@erase@3
$LN45@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv182[ebp], eax
$LN46@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost
	mov	ecx, DWORD PTR tv182[ebp]
	mov	DWORD PTR [eax], ecx
$LN28@erase@3:
; Line 1248
	jmp	$LN27@erase@3
$LN35@erase@3:
; Line 1251
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1253
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1255
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN26@erase@3
; Line 1256
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx
; Line 1257
	jmp	$LN25@erase@3
$LN26@erase@3:
; Line 1260
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
; Line 1261
	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN24@erase@3
; Line 1262
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase@3:
; Line 1263
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1265
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1267
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN25@erase@3:
; Line 1270
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase@3
; Line 1271
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN22@erase@3
$LN23@erase@3:
; Line 1272
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN21@erase@3
; Line 1274
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1275
	jmp	SHORT $LN22@erase@3
$LN21@erase@3:
; Line 1277
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase@3:
; Line 1280
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1282
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@D@std@@YAXAAD0@Z		; std::swap<char>
	add	esp, 8
$LN27@erase@3:
; Line 1285
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	$LN19@erase@3
; Line 1289
	jmp	SHORT $LN18@erase@3
$LN17@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	edx, DWORD PTR __Fixnode$[ebp]
	cmp	edx, DWORD PTR [eax]
	je	$LN16@erase@3
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN16@erase@3
; Line 1290
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN15@erase@3
; Line 1292
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1293
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN14@erase@3
; Line 1295
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1296
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1297
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lrotate
; Line 1298
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN14@erase@3:
; Line 1301
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN13@erase@3
; Line 1302
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx
; Line 1303
	jmp	$LN12@erase@3
$LN13@erase@3:
; Line 1304
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase@3
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase@3
; Line 1306
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1307
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax
; Line 1309
	jmp	$LN12@erase@3
$LN11@erase@3:
; Line 1312
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 1
	jne	SHORT $LN9@erase@3
; Line 1314
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1315
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1316
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rrotate
; Line 1317
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN9@erase@3:
; Line 1320
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl
; Line 1321
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1322
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1323
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lrotate
; Line 1324
	jmp	$LN16@erase@3
$LN12@erase@3:
; Line 1327
	jmp	$LN8@erase@3
$LN15@erase@3:
; Line 1329
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1330
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN7@erase@3
; Line 1332
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1333
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1334
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rrotate
; Line 1335
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN7@erase@3:
; Line 1337
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@erase@3
; Line 1338
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], edx
; Line 1339
	jmp	$LN8@erase@3
$LN6@erase@3:
; Line 1341
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase@3
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase@3
; Line 1343
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1344
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx
; Line 1346
	jmp	$LN8@erase@3
$LN4@erase@3:
; Line 1348
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN2@erase@3
; Line 1350
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1351
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1352
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lrotate
; Line 1353
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN2@erase@3:
; Line 1356
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl
; Line 1357
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1358
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1359
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rrotate
; Line 1360
	jmp	SHORT $LN16@erase@3
$LN8@erase@3:
; Line 1362
	jmp	$LN17@erase@3
$LN16@erase@3:
; Line 1364
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN19@erase@3:
; Line 1368
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@PAX@std@@YAPAPAXAAPAX@Z	; std::addressof<void *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 13					; 0000000dH
	push	edx
	call	??$_Dest_val@V?$allocator@PAX@std@@PAX@std@@YAXAAV?$allocator@PAX@0@PAPAX@Z ; std::_Dest_val<std::allocator<void *>,void *>
	add	esp, 8
; Line 1370
	push	1
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
; Line 1372
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jbe	SHORT $LN1@erase@3
; Line 1373
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@erase@3:
; Line 1375
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN42@erase@3:
; Line 1376
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@V32@@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::erase
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Erase
; Function compile flags: /Odtp
;	COMDAT ?clear@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::clear, COMDAT
; _this$ = ecx
; Line 1410
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1415
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Erase
; Line 1416
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 1417
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 1418
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 1419
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1420
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::clear
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
PUBLIC	??R?$less@PAX@std@@QBE_NABQAX0@Z		; std::less<void *>::operator()
PUBLIC	?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key
; Function compile flags: /Odtp
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z
_TEXT	SEGMENT
tv154 = -28						; size = 4
_this$ = -24						; size = 4
__Hinode$ = -20						; size = 4
__Last$ = -16						; size = 4
__Lonode$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?_Eqrange@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Eqrange, COMDAT
; _this$ = ecx
; Line 1575
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1576
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1577
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Lonode$[ebp], edx
; Line 1578
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Hinode$[ebp], ecx
$LN9@Eqrange:
; Line 1580
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	$LN8@Eqrange
; Line 1581
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@PAX@std@@QBE_NABQAX0@Z	; std::less<void *>::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@Eqrange
; Line 1582
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 1583
	jmp	SHORT $LN6@Eqrange
$LN7@Eqrange:
; Line 1586
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@Eqrange
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@PAX@std@@QBE_NABQAX0@Z	; std::less<void *>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@Eqrange
; Line 1588
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], edx
$LN5@Eqrange:
; Line 1589
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Lonode$[ebp], eax
; Line 1590
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN6@Eqrange:
; Line 1591
	jmp	$LN9@Eqrange
$LN8@Eqrange:
; Line 1594
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@Eqrange
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv154[ebp], edx
	jmp	SHORT $LN13@Eqrange
$LN12@Eqrange:
	mov	eax, DWORD PTR __Hinode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv154[ebp], ecx
$LN13@Eqrange:
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN4@Eqrange:
; Line 1595
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Eqrange
; Line 1596
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@PAX@std@@QBE_NABQAX0@Z	; std::less<void *>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Eqrange
; Line 1598
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], edx
; Line 1599
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1601
	jmp	SHORT $LN1@Eqrange
$LN2@Eqrange:
; Line 1602
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN1@Eqrange:
	jmp	SHORT $LN4@Eqrange
$LN3@Eqrange:
; Line 1604
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Lonode$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
; Line 1605
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Hinode$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
; Line 1606
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1607
	mov	esp, ebp
	pop	ebp
	ret	8
?_Eqrange@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@2@ABQAX@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Eqrange
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocate
PUBLIC	??0?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z ; std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >, COMDAT
; _this$ = ecx
; Line 542
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@PAX@std@@QAE@ABV01@@Z	; std::allocator<void *>::allocator<void *>
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z ; std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
; Line 543
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 544
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 546
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 547
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 548
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 549
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 550
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 551
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil, COMDAT
; Line 611
	push	ebp
	mov	ebp, esp
; Line 612
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 17					; 00000011H
; Line 613
	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left, COMDAT
; Line 621
	push	ebp
	mov	ebp, esp
; Line 622
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 623
	pop	ebp
	ret	0
?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent, COMDAT
; Line 626
	push	ebp
	mov	ebp, esp
; Line 627
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 628
	pop	ebp
	ret	0
?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right, COMDAT
; Line 631
	push	ebp
	mov	ebp, esp
; Line 632
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 633
	pop	ebp
	ret	0
?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Min, COMDAT
; Line 648
	push	ebp
	mov	ebp, esp
$LN2@Min:
; Line 649
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Min
; Line 650
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN1@Min:
; Line 651
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 652
	pop	ebp
	ret	0
?_Min@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Min
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAX@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAX@std@@QAE@ABV01@@Z PROC		; std::allocator<void *>::allocator<void *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAX@std@@QAE@ABV01@@Z ENDP		; std::allocator<void *>::allocator<void *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ ; std::allocator<ibmras::common::Logger *>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ ; std::allocator<ibmras::common::Logger *>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::max_size
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=
PUBLIC	?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T109800 = -16						; size = 4
__Ptr$105153 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::erase, COMDAT
; _this$ = ecx
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	mov	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
; Line 1192
	mov	edx, DWORD PTR __Last_arg$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
; Line 1194
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase@4
; Line 1207
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$105153[ebp], eax
; Line 1210
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$105153[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Line 1211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$105153[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@erase@4:
; Line 1213
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T109800[ebp], eax
	mov	ecx, DWORD PTR $T109800[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1214
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::erase
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Xlen
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z ; std::_Allocate<ibmras::common::Logger *>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z PROC ; std::allocator<ibmras::common::Logger *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z ; std::_Allocate<ibmras::common::Logger *>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z ENDP ; std::allocator<ibmras::common::Logger *>::allocate
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Tmp$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 271
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx
; Line 272
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
; Line 273
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 274
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 44
	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv137 = -12						; size = 4
_this$ = -8						; size = 4
__Pnew$105197 = -4					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
; Line 315
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [ecx+64], edx
; Line 318
	cmp	DWORD PTR __Count$[ebp], 0
	je	$LN5@Init
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 6
	cmp	ecx, 6
	je	$LN5@Init
; Line 320
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Pnew$105197[ebp], eax
; Line 321
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$105197[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 322
	mov	eax, DWORD PTR __Pnew$105197[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 324
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 4
	jne	SHORT $LN3@Init
; Line 326
	mov	ecx, DWORD PTR __Pnew$105197[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$105197[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$105197[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN3@Init:
; Line 327
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 2
	jne	SHORT $LN2@Init
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 16					; 00000010H
	je	SHORT $LN7@Init
	mov	edx, DWORD PTR __Pnew$105197[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN8@Init
$LN7@Init:
	mov	eax, DWORD PTR __Pnew$105197[ebp]
	mov	DWORD PTR tv137[ebp], eax
$LN8@Init:
	mov	ecx, DWORD PTR __Pnew$105197[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$105197[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN2@Init
; Line 333
	mov	ecx, DWORD PTR __Pnew$105197[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Pnew$105197[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN2@Init:
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN5@Init:
; Line 337
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__State$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 358
	mov	DWORD PTR __State$[ebp], 0
; Line 359
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	jne	SHORT $LN4@Getstate
; Line 360
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
$LN4@Getstate:
; Line 361
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	jne	SHORT $LN3@Getstate
; Line 362
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 363
	mov	ecx, DWORD PTR __Mode$[ebp]
	and	ecx, 8
	je	SHORT $LN2@Getstate
; Line 364
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 8
	mov	DWORD PTR __State$[ebp], edx
$LN2@Getstate:
; Line 365
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 4
	je	SHORT $LN1@Getstate
; Line 366
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 16					; 00000010H
	mov	DWORD PTR __State$[ebp], ecx
$LN1@Getstate:
; Line 367
	mov	eax, DWORD PTR __State$[ebp]
; Line 368
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1516
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1517
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv73[ebp]
; Line 1518
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv184 = -36						; size = 4
tv183 = -32						; size = 4
_this$ = -28						; size = 4
__Newres$ = -24						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1920
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 1921
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 1922
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 1924
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy
; Line 1926
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1927
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 1928
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 1931
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1932
	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1933
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1934
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 1935
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1936
	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv184[ebp], eax
	mov	eax, DWORD PTR tv184[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1938
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1939
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1940
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 1941
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 1943
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 1944
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 1945
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1946
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1947
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 1948
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2015
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@2:
; Line 2016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$105355 = -4					; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1610
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1611
	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$105355[ebp], eax
; Line 1612
	jmp	SHORT $LN3@Erase
$LN2@Erase:
	mov	ecx, DWORD PTR __Pnode$105355[ebp]
	mov	DWORD PTR __Rootnode$[ebp], ecx
$LN3@Erase:
	mov	edx, DWORD PTR __Pnode$105355[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN4@Erase
; Line 1614
	mov	ecx, DWORD PTR __Pnode$105355[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Erase
; Line 1615
	mov	eax, DWORD PTR __Pnode$105355[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$105355[ebp], ecx
; Line 1617
	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@PAX@std@@YAPAPAXAAPAX@Z	; std::addressof<void *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 13					; 0000000dH
	push	eax
	call	??$_Dest_val@V?$allocator@PAX@std@@PAX@std@@YAXAAV?$allocator@PAX@0@PAPAX@Z ; std::_Dest_val<std::allocator<void *>,void *>
	add	esp, 8
; Line 1619
	push	1
	mov	ecx, DWORD PTR __Rootnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
; Line 1620
	jmp	SHORT $LN2@Erase
$LN4@Erase:
; Line 1621
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lrotate, COMDAT
; _this$ = ecx
; Line 1763
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1764
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1765
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1767
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Lrotate
; Line 1768
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Lrotate:
; Line 1769
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1771
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Lrotate
; Line 1772
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Lrotate
$LN4@Lrotate:
; Line 1773
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Lrotate
; Line 1774
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1775
	jmp	SHORT $LN3@Lrotate
$LN2@Lrotate:
; Line 1776
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Lrotate:
; Line 1778
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1779
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1780
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lrotate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost, COMDAT
; _this$ = ecx
; Line 1783
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1784
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
; Line 1785
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root, COMDAT
; _this$ = ecx
; Line 1788
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1789
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
; Line 1790
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rrotate, COMDAT
; _this$ = ecx
; Line 1793
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1794
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1795
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1797
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Rrotate
; Line 1798
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Rrotate:
; Line 1799
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1801
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Rrotate
; Line 1802
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Rrotate
$LN4@Rrotate:
; Line 1803
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Rrotate
; Line 1804
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1805
	jmp	SHORT $LN3@Rrotate
$LN2@Rrotate:
; Line 1806
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Rrotate:
; Line 1808
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1809
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1810
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rrotate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color, COMDAT
; Line 606
	push	ebp
	mov	ebp, esp
; Line 607
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H
; Line 608
	pop	ebp
	ret	0
?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@SAABQAXABQAX@Z ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Kfn
; Function compile flags: /Odtp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key, COMDAT
; Line 616
	push	ebp
	mov	ebp, esp
; Line 617
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
	push	eax
	call	?_Kfn@?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@SAABQAXABQAX@Z ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Kfn
	add	esp, 4
; Line 618
	pop	ebp
	ret	0
?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Max, COMDAT
; Line 641
	push	ebp
	mov	ebp, esp
$LN2@Max:
; Line 642
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Max
; Line 643
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN1@Max:
; Line 644
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 645
	pop	ebp
	ret	0
?_Max@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Max
_TEXT	ENDS
PUBLIC	??$?0PAX@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node><void *>
PUBLIC	??0?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@QAE@U?$less@PAX@1@@Z ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z PROC ; std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >, COMDAT
; _this$ = ecx
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@QAE@U?$less@PAX@1@@Z ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>
	lea	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0PAX@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node><void *>
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	??0?$allocator@PAX@std@@QAE@ABV01@@Z	; std::allocator<void *>::allocator<void *>
; Line 483
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE@ABU?$less@PAX@1@V?$allocator@PAX@1@@Z ENDP ; std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??R?$less@PAX@std@@QBE_NABQAX0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@PAX@std@@QBE_NABQAX0@Z PROC			; std::less<void *>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
; Line 124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	sbb	eax, eax
	neg	eax
; Line 126
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@PAX@std@@QBE_NABQAX0@Z ENDP			; std::less<void *>::operator()
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 803
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ PROC ; std::allocator<ibmras::common::Logger *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ ENDP ; std::allocator<ibmras::common::Logger *>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 121
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 123
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], -1
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@3
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@3
$LN3@max_size@3:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@3:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@QAE@U?$less@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 1
??0?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@QAE@U?$less@PAX@1@@Z PROC ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\set
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@QAE@U?$less@PAX@1@@Z ENDP ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@SAABQAXABQAX@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@SAABQAXABQAX@Z PROC ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Kfn, COMDAT
; Line 45
	push	ebp
	mov	ebp, esp
; Line 46
	mov	eax, DWORD PTR __Val$[ebp]
; Line 47
	pop	ebp
	ret	0
?_Kfn@?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@SAABQAXABQAX@Z ENDP ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Compat
; Function compile flags: /Odtp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Compat, COMDAT
; _this$ = ecx
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Compat
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 188
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1874
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1876
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Line 1877
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT
tv129 = -20						; size = 4
tv130 = -16						; size = 4
tv86 = -12						; size = 4
_this$ = -8						; size = 4
__Ans$ = -4						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; Line 1887
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1893
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN2@compare
; Line 1894
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN2@compare:
; Line 1895
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __N0$[ebp]
	jae	SHORT $LN1@compare
; Line 1896
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __N0$[ebp], edx
$LN1@compare:
; Line 1899
	mov	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@compare
	mov	ecx, DWORD PTR __N0$[ebp]
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN6@compare
$LN5@compare:
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv86[ebp], edx
$LN6@compare:
	mov	eax, DWORD PTR tv86[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ans$[ebp], eax
; Line 1901
	cmp	DWORD PTR __Ans$[ebp], 0
	je	SHORT $LN9@compare
	mov	edx, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR tv130[ebp], edx
	jmp	SHORT $LN10@compare
$LN9@compare:
	mov	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN7@compare
	mov	DWORD PTR tv129[ebp], -1
	jmp	SHORT $LN8@compare
$LN7@compare:
	mov	ecx, DWORD PTR __N0$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR __Count$[ebp]
	setne	dl
	mov	DWORD PTR tv129[ebp], edx
$LN8@compare:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR tv130[ebp], eax
$LN10@compare:
	mov	eax, DWORD PTR tv130[ebp]
$LN4@compare:
; Line 1902
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Linsert
PUBLIC	??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode<void *>
PUBLIC	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z		; std::forward<void *>
; Function compile flags: /Odtp
;	COMDAT ??$insert@PAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@$$QAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@PAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@$$QAPAX@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::insert<void *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 756
	push	0
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z	; std::forward<void *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode<void *>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Linsert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Linsert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 757
	mov	esp, ebp
	pop	ebp
	ret	8
??$insert@PAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@$$QAPAX@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::insert<void *>
_TEXT	ENDS
PUBLIC	??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode<void * &>
PUBLIC	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z		; std::forward<void * &>
; Function compile flags: /Odtp
;	COMDAT ??$insert@AAPAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@AAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@AAPAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@AAPAX@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::insert<void * &>, COMDAT
; _this$ = ecx
; Line 753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 756
	push	0
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode<void * &>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Linsert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Linsert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 757
	mov	esp, ebp
	pop	ebp
	ret	8
??$insert@AAPAX@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@1@AAPAX@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::insert<void * &>
_TEXT	ENDS
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv293 = -145						; size = 1
tv292 = -144						; size = 4
tv291 = -140						; size = 4
tv290 = -136						; size = 4
tv289 = -129						; size = 1
tv288 = -128						; size = 8
tv287 = -120						; size = 4
tv286 = -113						; size = 1
tv285 = -112						; size = 4
tv284 = -108						; size = 4
tv283 = -104						; size = 4
tv282 = -97						; size = 1
tv137 = -96						; size = 4
tv135 = -92						; size = 8
tv341 = -84						; size = 8
tv329 = -76						; size = 8
$T109923 = -68						; size = 4
$T109922 = -64						; size = 4
$T109921 = -60						; size = 4
$T109920 = -56						; size = 4
$T109919 = -52						; size = 4
__Ok$ = -48						; size = 8
__Pad$ = -40						; size = 8
__Count$ = -32						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; Line 767
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 132				; 00000084H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 770
	mov	DWORD PTR __State$[ebp], 0
; Line 771
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 773
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	mov	DWORD PTR tv329[ebp], eax
	mov	DWORD PTR tv329[ebp+4], edx
	cmp	DWORD PTR tv329[ebp+4], 0
	jl	SHORT $LN17@operator@3
	jg	SHORT $LN25@operator@3
	cmp	DWORD PTR tv329[ebp], 0
	jbe	SHORT $LN17@operator@3
$LN25@operator@3:
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	mov	DWORD PTR tv341[ebp], eax
	mov	DWORD PTR tv341[ebp+4], edx
	mov	eax, DWORD PTR tv341[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator@3
	jg	SHORT $LN26@operator@3
	mov	ecx, DWORD PTR tv341[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator@3
$LN26@operator@3:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator@3
$LN17@operator@3:
	mov	DWORD PTR tv135[ebp], 0
	mov	DWORD PTR tv135[ebp+4], 0
$LN18@operator@3:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 774
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 776
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
	cmp	eax, -1
	jne	SHORT $LN14@operator@3
; Line 777
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
; Line 778
	jmp	$LN13@operator@3
$LN14@operator@3:
; Line 780
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 781
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR tv137[ebp]
	and	ecx, 448				; 000001c0H
	cmp	ecx, 64					; 00000040H
	je	$LN11@operator@3
; Line 782
	jmp	SHORT $LN10@operator@3
$LN9@operator@3:
	mov	edx, DWORD PTR __Pad$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR __Pad$[ebp+4]
	sbb	eax, 0
	mov	DWORD PTR __Pad$[ebp], edx
	mov	DWORD PTR __Pad$[ebp+4], eax
$LN10@operator@3:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator@3
	jg	SHORT $LN27@operator@3
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN11@operator@3
$LN27@operator@3:
; Line 784
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv282[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv283[ebp], eax
	movzx	eax, BYTE PTR tv282[ebp]
	push	eax
	mov	ecx, DWORD PTR tv283[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv284[ebp], eax
	mov	ecx, DWORD PTR tv284[ebp]
	mov	DWORD PTR $T109919[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv285[ebp], eax
	mov	edx, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T109920[ebp], edx
	lea	eax, DWORD PTR $T109919[ebp]
	push	eax
	lea	ecx, DWORD PTR $T109920[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	mov	BYTE PTR tv286[ebp], al
	movzx	edx, BYTE PTR tv286[ebp]
	test	edx, edx
	je	SHORT $LN7@operator@3
; Line 786
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 787
	jmp	SHORT $LN11@operator@3
$LN7@operator@3:
; Line 790
	jmp	$LN9@operator@3
$LN11@operator@3:
; Line 791
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN6@operator@3
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv287[ebp], eax
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv287[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	mov	DWORD PTR tv288[ebp], eax
	mov	DWORD PTR tv288[ebp+4], edx
	mov	eax, DWORD PTR tv288[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN28@operator@3
	mov	ecx, DWORD PTR tv288[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN6@operator@3
$LN28@operator@3:
; Line 792
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
$LN6@operator@3:
; Line 794
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN5@operator@3
; Line 795
	jmp	SHORT $LN4@operator@3
$LN3@operator@3:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator@3:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN5@operator@3
	jg	SHORT $LN29@operator@3
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN5@operator@3
$LN29@operator@3:
; Line 797
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv289[ebp], al
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv290[ebp], eax
	movzx	eax, BYTE PTR tv289[ebp]
	push	eax
	mov	ecx, DWORD PTR tv290[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv291[ebp], eax
	mov	ecx, DWORD PTR tv291[ebp]
	mov	DWORD PTR $T109921[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv292[ebp], eax
	mov	edx, DWORD PTR tv292[ebp]
	mov	DWORD PTR $T109922[ebp], edx
	lea	eax, DWORD PTR $T109921[ebp]
	push	eax
	lea	ecx, DWORD PTR $T109922[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	mov	BYTE PTR tv293[ebp], al
	movzx	edx, BYTE PTR tv293[ebp]
	test	edx, edx
	je	SHORT $LN1@operator@3
; Line 799
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 800
	jmp	SHORT $LN5@operator@3
$LN1@operator@3:
; Line 801
	jmp	$LN3@operator@3
$LN5@operator@3:
; Line 802
	push	0
	push	0
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	jmp	SHORT $LN19@operator@3
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 803
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN13@operator@3
	ret	0
$LN19@operator@3:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator@3:
; Line 806
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; Line 807
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T109923[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T109923[ebp]
; Line 808
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 115
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@sentry
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	test	eax, eax
	je	SHORT $LN1@sentry
; Line 116
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
$LN1@sentry:
; Line 117
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 118
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 123
	call	DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry@2
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
$LN2@sentry@2:
; Line 129
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Odtp
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+4]
	neg	eax
	sbb	eax, eax
	neg	eax
	sub	eax, 1
; Line 134
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv90 = -8						; size = 4
_this$ = -4						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 92
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR [ecx+4]
	mov	ecx, eax
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv90[ebp], eax
	mov	edx, DWORD PTR tv90[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN2@Sentry_bas:
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv90 = -8						; size = 4
_this$ = -4						; size = 4
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	eax, eax
	je	SHORT $LN2@Sentry_bas@2
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv90[ebp], eax
	mov	edx, DWORD PTR tv90[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN2@Sentry_bas@2:
; Line 100
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
xdata$x	SEGMENT
__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3
__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv298 = -133						; size = 1
tv297 = -132						; size = 4
tv296 = -128						; size = 4
tv295 = -124						; size = 4
tv294 = -117						; size = 1
tv402 = -116						; size = 8
tv293 = -108						; size = 8
tv292 = -100						; size = 4
tv291 = -96						; size = 4
tv290 = -89						; size = 1
tv289 = -88						; size = 4
tv288 = -84						; size = 4
tv287 = -80						; size = 4
tv286 = -73						; size = 1
tv138 = -72						; size = 4
tv136 = -68						; size = 4
tv331 = -64						; size = 8
$T109975 = -56						; size = 4
$T109974 = -52						; size = 4
$T109973 = -48						; size = 4
$T109972 = -44						; size = 4
$T109971 = -40						; size = 4
__Size$ = -36						; size = 4
__Ok$ = -32						; size = 8
__Pad$ = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 497
	mov	DWORD PTR __State$[ebp], 0
; Line 498
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 500
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	mov	DWORD PTR tv331[ebp], eax
	mov	DWORD PTR tv331[ebp+4], edx
	cmp	DWORD PTR tv331[ebp+4], 0
	jl	SHORT $LN17@operator@4
	jg	SHORT $LN25@operator@4
	cmp	DWORD PTR tv331[ebp], 0
	jbe	SHORT $LN17@operator@4
$LN25@operator@4:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	eax, DWORD PTR __Size$[ebp]
	jbe	SHORT $LN17@operator@4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	sub	eax, DWORD PTR __Size$[ebp]
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN18@operator@4
$LN17@operator@4:
	mov	DWORD PTR tv136[ebp], 0
$LN18@operator@4:
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR __Pad$[ebp], eax
; Line 501
	mov	ecx, DWORD PTR __Ostr$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 503
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
	cmp	eax, -1
	jne	SHORT $LN14@operator@4
; Line 504
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 505
	jmp	$LN13@operator@4
$LN14@operator@4:
; Line 507
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 508
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR tv138[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator@4
; Line 509
	jmp	SHORT $LN10@operator@4
$LN9@operator@4:
	mov	ecx, DWORD PTR __Pad$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Pad$[ebp], ecx
$LN10@operator@4:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN11@operator@4
; Line 511
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv286[ebp], al
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv287[ebp], eax
	movzx	eax, BYTE PTR tv286[ebp]
	push	eax
	mov	ecx, DWORD PTR tv287[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv288[ebp], eax
	mov	ecx, DWORD PTR tv288[ebp]
	mov	DWORD PTR $T109971[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv289[ebp], eax
	mov	edx, DWORD PTR tv289[ebp]
	mov	DWORD PTR $T109972[ebp], edx
	lea	eax, DWORD PTR $T109971[ebp]
	push	eax
	lea	ecx, DWORD PTR $T109972[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	mov	BYTE PTR tv290[ebp], al
	movzx	edx, BYTE PTR tv290[ebp]
	test	edx, edx
	je	SHORT $LN7@operator@4
; Line 513
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 514
	jmp	SHORT $LN11@operator@4
$LN7@operator@4:
; Line 517
	jmp	$LN9@operator@4
$LN11@operator@4:
; Line 518
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN6@operator@4
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	DWORD PTR tv291[ebp], eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv292[ebp], eax
	mov	eax, DWORD PTR __Size$[ebp]
	xor	ecx, ecx
	push	ecx
	push	eax
	mov	edx, DWORD PTR tv291[ebp]
	push	edx
	mov	ecx, DWORD PTR tv292[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	mov	DWORD PTR tv293[ebp], eax
	mov	DWORD PTR tv293[ebp+4], edx
	mov	eax, DWORD PTR __Size$[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv402[ebp], eax
	mov	DWORD PTR tv402[ebp+4], ecx
	mov	edx, DWORD PTR tv293[ebp]
	cmp	edx, DWORD PTR tv402[ebp]
	jne	SHORT $LN26@operator@4
	mov	eax, DWORD PTR tv293[ebp+4]
	cmp	eax, DWORD PTR tv402[ebp+4]
	je	SHORT $LN6@operator@4
$LN26@operator@4:
; Line 519
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
; Line 520
	jmp	$LN5@operator@4
$LN6@operator@4:
; Line 521
	jmp	SHORT $LN4@operator@4
$LN3@operator@4:
	mov	edx, DWORD PTR __Pad$[ebp]
	sub	edx, 1
	mov	DWORD PTR __Pad$[ebp], edx
$LN4@operator@4:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN5@operator@4
; Line 523
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv294[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv295[ebp], eax
	movzx	eax, BYTE PTR tv294[ebp]
	push	eax
	mov	ecx, DWORD PTR tv295[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv296[ebp], eax
	mov	ecx, DWORD PTR tv296[ebp]
	mov	DWORD PTR $T109973[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR tv297[ebp], eax
	mov	edx, DWORD PTR tv297[ebp]
	mov	DWORD PTR $T109974[ebp], edx
	lea	eax, DWORD PTR $T109973[ebp]
	push	eax
	lea	ecx, DWORD PTR $T109974[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	mov	BYTE PTR tv298[ebp], al
	movzx	edx, BYTE PTR tv298[ebp]
	test	edx, edx
	je	SHORT $LN1@operator@4
; Line 525
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 526
	jmp	SHORT $LN5@operator@4
$LN1@operator@4:
; Line 527
	jmp	$LN3@operator@4
$LN5@operator@4:
; Line 528
	push	0
	push	0
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	jmp	SHORT $LN19@operator@4
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:
; Line 529
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN13@operator@4
	ret	0
$LN19@operator@4:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator@4:
; Line 532
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; Line 533
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T109975[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T109975[ebp]
; Line 534
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,unsigned int>
PUBLIC	??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T109998 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 909
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 910
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T109998[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,unsigned int>
	add	esp, 16					; 00000010H
; Line 911
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1315
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
	add	esp, 16					; 00000010H
; Line 1319
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > > >
_TEXT	ENDS
PUBLIC	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
PUBLIC	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
; Function compile flags: /Odtp
;	COMDAT ??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z
_TEXT	SEGMENT
$T110003 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z PROC ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2163
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2165
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 8
	mov	BYTE PTR $T110003[ebp], al
	movzx	edx, BYTE PTR $T110003[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 16					; 00000010H
; Line 2166
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ENDP ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Uninitialized_copy<ibmras::common::Logger * *,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1315
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Uninitialized_copy<ibmras::common::Logger * *,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
	add	esp, 16					; 00000010H
; Line 1319
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
; Function compile flags: /Odtp
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator==<char,char>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T110010 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 36
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T110010[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T110010[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Odtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z
_TEXT	SEGMENT
$T110019 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 8
	mov	BYTE PTR $T110019[ebp], al
	movzx	edx, BYTE PTR $T110019[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Odtp
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 102
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR __Tmp$[ebp], cl
; Line 103
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl
; Line 104
	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl
; Line 105
	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@PAX@std@@YAPAPAXAAPAX@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAX@std@@YAPAPAXAAPAX@Z PROC		; std::addressof<void *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@PAX@std@@YAPAPAXAAPAX@Z ENDP		; std::addressof<void *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAX@std@@QAEXPAPAX@Z	; std::allocator<void *>::destroy
; Function compile flags: /Odtp
;	COMDAT ??$_Dest_val@V?$allocator@PAX@std@@PAX@std@@YAXAAV?$allocator@PAX@0@PAPAX@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAX@std@@PAX@std@@YAXAAV?$allocator@PAX@0@PAPAX@Z PROC ; std::_Dest_val<std::allocator<void *>,void *>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@PAX@std@@QAEXPAPAX@Z ; std::allocator<void *>::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@PAX@std@@PAX@std@@YAXAAV?$allocator@PAX@0@PAPAX@Z ENDP ; std::_Dest_val<std::allocator<void *>,void *>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
; Function compile flags: /Odtp
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 247
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
; Line 248
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z
_TEXT	SEGMENT
$T110030 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z PROC ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2533
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2535
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 8
	mov	BYTE PTR $T110030[ebp], al
	movzx	edx, BYTE PTR $T110030[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 16					; 00000010H
; Line 2536
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ENDP ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z
_TEXT	SEGMENT
$T110033 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z PROC ; std::_Allocate<ibmras::common::Logger *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T110033[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T110033[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@2:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z ENDP ; std::_Allocate<ibmras::common::Logger *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
$T110036 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	mov	BYTE PTR $T110036[ebp], al
	movzx	edx, BYTE PTR $T110036[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0PAX@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAX@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node><void *>, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAX@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node><void *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T110041 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@3
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@3
$LN4@Allocate@3:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 214748364	; 0cccccccH
	ja	SHORT $LN1@Allocate@3
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 20					; 00000014H
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@3
$LN1@Allocate@3:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T110041[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T110041[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@3:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@3:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,bool>
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator--
PUBLIC	??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>
PUBLIC	?_Insert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Insert
; Function compile flags: /Odtp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
tv147 = -60						; size = 4
_this$ = -56						; size = 4
$T110056 = -49						; size = 1
$T110055 = -48						; size = 4
$T110054 = -41						; size = 1
$T110053 = -40						; size = 4
$T110052 = -33						; size = 1
$T110051 = -32						; size = 4
$T110050 = -28						; size = 4
$T110049 = -21						; size = 1
__Where$106782 = -20					; size = 4
__Val$ = -16						; size = 4
__Trynode$ = -12					; size = 4
__Wherenode$ = -8					; size = 4
__Addleft$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Linsert, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 944
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR __Val$[ebp], eax
; Line 947
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$[ebp], ecx
; Line 948
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 949
	mov	BYTE PTR __Addleft$[ebp], 1
$LN12@Linsert:
; Line 950
	mov	ecx, DWORD PTR __Trynode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN11@Linsert
; Line 952
	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 953
	movzx	ecx, BYTE PTR __Leftish$[ebp]
	test	ecx, ecx
	je	SHORT $LN10@Linsert
; Line 954
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@SAABQAXABQAX@Z ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Kfn
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@PAX@std@@QBE_NABQAX0@Z	; std::less<void *>::operator()
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	BYTE PTR __Addleft$[ebp], cl
; Line 957
	jmp	SHORT $LN9@Linsert
$LN10@Linsert:
; Line 958
	mov	edx, DWORD PTR __Trynode$[ebp]
	push	edx
	call	?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?_Kfn@?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@SAABQAXABQAX@Z ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@PAX@std@@QBE_NABQAX0@Z	; std::less<void *>::operator()
	mov	BYTE PTR __Addleft$[ebp], al
$LN9@Linsert:
; Line 962
	movzx	ecx, BYTE PTR __Addleft$[ebp]
	test	ecx, ecx
	je	SHORT $LN15@Linsert
	mov	edx, DWORD PTR __Trynode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv147[ebp], eax
	jmp	SHORT $LN16@Linsert
$LN15@Linsert:
	mov	ecx, DWORD PTR __Trynode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv147[ebp], edx
$LN16@Linsert:
	mov	eax, DWORD PTR tv147[ebp]
	mov	DWORD PTR __Trynode$[ebp], eax
; Line 963
	jmp	$LN12@Linsert
$LN11@Linsert:
; Line 965
	xor	ecx, ecx
	je	SHORT $LN8@Linsert
; Line 966
	mov	BYTE PTR $T110049[ebp], 1
	lea	edx, DWORD PTR $T110049[ebp]
	push	edx
	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	movzx	edx, BYTE PTR __Addleft$[ebp]
	push	edx
	lea	eax, DWORD PTR $T110050[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN13@Linsert
; Line 967
	jmp	$LN13@Linsert
$LN8@Linsert:
; Line 969
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$106782[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
; Line 970
	movzx	eax, BYTE PTR __Addleft$[ebp]
	test	eax, eax
	jne	SHORT $LN6@Linsert
	jmp	SHORT $LN5@Linsert
$LN6@Linsert:
; Line 972
	lea	ecx, DWORD PTR $T110051[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$106782[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Linsert
; Line 973
	mov	BYTE PTR $T110052[ebp], 1
	lea	eax, DWORD PTR $T110052[ebp]
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T110053[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN13@Linsert
; Line 974
	jmp	SHORT $LN5@Linsert
$LN4@Linsert:
; Line 975
	lea	ecx, DWORD PTR __Where$106782[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator--
$LN5@Linsert:
; Line 977
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@SAABQAXABQAX@Z ; std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$106782[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@PAX@std@@QBE_NABQAX0@Z	; std::less<void *>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Linsert
; Line 980
	mov	BYTE PTR $T110054[ebp], 1
	lea	eax, DWORD PTR $T110054[ebp]
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T110055[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN13@Linsert
; Line 981
	jmp	SHORT $LN13@Linsert
$LN2@Linsert:
; Line 984
	mov	edx, DWORD PTR __Node$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@PAX@std@@YAPAPAXAAPAX@Z	; std::addressof<void *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 13					; 0000000dH
	push	eax
	call	??$_Dest_val@V?$allocator@PAX@std@@PAX@std@@YAXAAV?$allocator@PAX@0@PAPAX@Z ; std::_Dest_val<std::allocator<void *>,void *>
	add	esp, 8
; Line 986
	push	1
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
; Line 988
	mov	BYTE PTR $T110056[ebp], 0
	lea	edx, DWORD PTR $T110056[ebp]
	push	edx
	lea	eax, DWORD PTR __Where$106782[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN13@Linsert:
; Line 991
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Linsert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$_Destroy@PAX@std@@YAXPAPAX@Z			; std::_Destroy<void *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAX@std@@QAEXPAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAX@std@@QAEXPAPAX@Z PROC		; std::allocator<void *>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAX@std@@YAXPAPAX@Z		; std::_Destroy<void *>
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAX@std@@QAEXPAPAX@Z ENDP		; std::allocator<void *>::destroy
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::max_size
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$106835 = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Insert, COMDAT
; _this$ = ecx
; Line 1631
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1632
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::max_size
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+8]
	ja	SHORT $LN17@Insert
; Line 1635
	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@PAX@std@@YAPAPAXAAPAX@Z	; std::addressof<void *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 13					; 0000000dH
	push	eax
	call	??$_Dest_val@V?$allocator@PAX@std@@PAX@std@@YAXAAV?$allocator@PAX@0@PAPAX@Z ; std::_Dest_val<std::allocator<void *>,void *>
	add	esp, 8
; Line 1637
	push	1
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
; Line 1639
	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN17@Insert:
; Line 1641
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1642
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 1644
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN16@Insert
; Line 1646
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1647
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1648
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@Insert
$LN16@Insert:
; Line 1650
	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN14@Insert
; Line 1652
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1653
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN13@Insert
; Line 1654
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@Insert:
; Line 1656
	jmp	SHORT $LN15@Insert
$LN14@Insert:
; Line 1658
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1659
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN15@Insert
; Line 1660
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@Insert:
; Line 1663
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$106835[ebp], edx
$LN10@Insert:
; Line 1664
	mov	eax, DWORD PTR __Pnode$106835[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN9@Insert
; Line 1666
	mov	eax, DWORD PTR __Pnode$106835[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN8@Insert
; Line 1669
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], edx
; Line 1670
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@Insert
; Line 1672
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1673
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1675
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1676
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$106835[ebp], ecx
; Line 1678
	jmp	$LN6@Insert
$LN7@Insert:
; Line 1680
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Insert
; Line 1682
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$106835[ebp], eax
; Line 1683
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lrotate
$LN5@Insert:
; Line 1686
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1688
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1689
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rrotate
$LN6@Insert:
; Line 1692
	jmp	$LN4@Insert
$LN8@Insert:
; Line 1695
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], ecx
; Line 1696
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Insert
; Line 1698
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1699
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1701
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1702
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$106835[ebp], eax
; Line 1704
	jmp	$LN4@Insert
$LN3@Insert:
; Line 1706
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Insert
; Line 1708
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$106835[ebp], eax
; Line 1709
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Rrotate
$LN1@Insert:
; Line 1712
	mov	edx, DWORD PTR __Pnode$106835[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1714
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1715
	mov	ecx, DWORD PTR __Pnode$106835[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Lrotate
$LN4@Insert:
; Line 1717
	jmp	$LN10@Insert
$LN9@Insert:
; Line 1719
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1720
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert:
; Line 1721
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Insert@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Insert
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>
PUBLIC	??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Odtp
;	COMDAT ??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$move@AA_N@std@@YA$$QA_NAA_N@Z	; std::move<bool &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Odtp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 277
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 302
	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::operator--
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
; Line 306
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAX@std@@QBEIXZ		; std::allocator<void *>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::max_size, COMDAT
; _this$ = ecx
; Line 873
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 874
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?max_size@?$allocator@PAX@std@@QBEIXZ	; std::allocator<void *>::max_size
; Line 875
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 145
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$move@AA_N@std@@YA$$QA_NAA_N@Z	; std::move<bool &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$106944 = -4					; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@operator@5
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	jmp	$LN7@operator@5
$LN8@operator@5:
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@operator@5
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Max@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Max
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 89
	jmp	SHORT $LN7@operator@5
$LN4@operator@5:
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$106944[ebp], edx
	mov	eax, DWORD PTR __Pnode$106944[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator@5
	mov	edx, DWORD PTR __Pnode$106944[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator@5
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$106944[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@operator@5
$LN3@operator@5:
; Line 95
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@operator@5
; Line 97
	jmp	SHORT $LN7@operator@5
$LN2@operator@5:
; Line 98
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$106944[ebp]
	mov	DWORD PTR [edx], eax
$LN7@operator@5:
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
; Line 101
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAX@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@PAX@std@@QBEIXZ PROC		; std::allocator<void *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@4
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@4
$LN3@max_size@4:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@4:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAX@std@@QBEIXZ ENDP		; std::allocator<void *>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@PAX@std@@YA$$QAPAXAAPAX@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAX@std@@YA$$QAPAXAAPAX@Z PROC		; std::forward<void *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@PAX@std@@YA$$QAPAXAAPAX@Z ENDP		; std::forward<void *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAX@std@@PAXPAX@std@@YAXAAV?$allocator@PAX@0@PAPAX$$QAPAX@Z ; std::_Cons_val<std::allocator<void *>,void *,void *>
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__catchsym$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z$0
__unwindtable$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z$2
__ehfuncinfo$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z
_TEXT	SEGMENT
tv93 = -36						; size = 4
tv92 = -32						; size = 4
tv91 = -28						; size = 4
_this$ = -24						; size = 4
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode<void *>, COMDAT
; _this$ = ecx
; Line 586
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 588
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 592
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z	; std::forward<void *>
	add	esp, 4
	mov	DWORD PTR tv91[ebp], eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	call	??$addressof@PAX@std@@YAPAPAXAAPAX@Z	; std::addressof<void *>
	add	esp, 4
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 13					; 0000000dH
	push	edx
	call	??$_Cons_val@V?$allocator@PAX@std@@PAXPAX@std@@YAXAAV?$allocator@PAX@0@PAPAX$$QAPAX@Z ; std::_Cons_val<std::allocator<void *>,void *,void *>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z$0:
; Line 594
	push	1
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
; Line 595
	push	0
	push	0
	call	__CxxThrowException@8
; Line 596
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z$1
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z$1:
; Line 598
	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode:
; Line 599
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@PAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@$$QAPAX@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode<void *>
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAX@std@@YAAAPAXAAPAX@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAX@std@@YAAAPAXAAPAX@Z PROC		; std::forward<void * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAPAX@std@@YAAAPAXAAPAX@Z ENDP		; std::forward<void * &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAX@std@@PAXAAPAX@std@@YAXAAV?$allocator@PAX@0@PAPAXAAPAX@Z ; std::_Cons_val<std::allocator<void *>,void *,void * &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__catchsym$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z$0
__unwindtable$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z$2
__ehfuncinfo$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z
_TEXT	SEGMENT
tv93 = -36						; size = 4
tv92 = -32						; size = 4
tv91 = -28						; size = 4
_this$ = -24						; size = 4
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode<void * &>, COMDAT
; _this$ = ecx
; Line 586
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 588
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 592
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	mov	DWORD PTR tv91[ebp], eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	call	??$addressof@PAX@std@@YAPAPAXAAPAX@Z	; std::addressof<void *>
	add	esp, 4
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 13					; 0000000dH
	push	edx
	call	??$_Cons_val@V?$allocator@PAX@std@@PAXAAPAX@std@@YAXAAV?$allocator@PAX@0@PAPAXAAPAX@Z ; std::_Cons_val<std::allocator<void *>,void *,void * &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode@2
__catch$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z$0:
; Line 594
	push	1
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::deallocate
; Line 595
	push	0
	push	0
	call	__CxxThrowException@8
; Line 596
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z$1
	ret	0
$LN4@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z$1:
; Line 598
	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode@2:
; Line 599
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@AAPAX@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@1@AAPAX@Z ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode<void * &>
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 478
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 479
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,unsigned int>, COMDAT
; Line 876
	push	ebp
	mov	ebp, esp
; Line 877
	jmp	SHORT $LN3@Distance2
$LN2@Distance2:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator++
$LN3@Distance2:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@Distance2
; Line 878
	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@Distance2
$LN4@Distance2:
; Line 879
	pop	ebp
	ret	0
??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z
_TEXT	SEGMENT
$T110115 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 412
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 414
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *>
	add	esp, 8
	mov	BYTE PTR $T110115[ebp], al
	movzx	edx, BYTE PTR $T110115[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
	add	esp, 20					; 00000014H
; Line 415
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z PROC ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 516
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 518
	mov	al, BYTE PTR __Cat$[ebp]
; Line 519
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ENDP ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>, COMDAT
; Line 2152
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2153
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 2155
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 2156
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
; Line 2157
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<ibmras::common::Logger *,ibmras::common::Logger *>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z
_TEXT	SEGMENT
$T110122 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z PROC ; std::_Uninitialized_copy<ibmras::common::Logger * *,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 412
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 414
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 8
	mov	BYTE PTR $T110122[ebp], al
	movzx	edx, BYTE PTR $T110122[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 20					; 00000014H
; Line 415
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ENDP ; std::_Uninitialized_copy<ibmras::common::Logger * *,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >, COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
; Line 105
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 94
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 96
	pop	ebp
	ret	0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z PROC ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@AAV01@@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@0@Z ENDP ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > >::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2522
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2523
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 2525
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 2526
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
; Line 2527
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 516
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 518
	mov	al, BYTE PTR __Cat$[ebp]
; Line 519
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 95
	push	ebp
	mov	ebp, esp
; Line 96
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 97
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,bool>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Odtp
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,bool>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 247
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,bool>
; Line 248
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAX@std@@YAXPAPAX@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAX@std@@YAXPAPAX@Z PROC			; std::_Destroy<void *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 62
	push	ebp
	mov	ebp, esp
; Line 64
	pop	ebp
	ret	0
??$_Destroy@PAX@std@@YAXPAPAX@Z ENDP			; std::_Destroy<void *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Wherenode$ = -4					; size = 4
?_Buynode@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 559
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 560
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Node>::allocate
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 562
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 563
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 564
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 565
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 566
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 567
	mov	eax, DWORD PTR __Wherenode$[ebp]
; Line 568
	mov	esp, ebp
	pop	ebp
	ret	0
?_Buynode@?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z ; std::allocator<void *>::construct
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@PAX@std@@PAXPAX@std@@YAXAAV?$allocator@PAX@0@PAPAX$$QAPAX@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAX@std@@PAXPAX@std@@YAXAAV?$allocator@PAX@0@PAPAX$$QAPAX@Z PROC ; std::_Cons_val<std::allocator<void *>,void *,void *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z	; std::forward<void *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z ; std::allocator<void *>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAX@std@@PAXPAX@std@@YAXAAV?$allocator@PAX@0@PAPAX$$QAPAX@Z ENDP ; std::_Cons_val<std::allocator<void *>,void *,void *>
_TEXT	ENDS
PUBLIC	??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z ; std::allocator<void *>::construct<void * &>
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@PAX@std@@PAXAAPAX@std@@YAXAAV?$allocator@PAX@0@PAPAXAAPAX@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAX@std@@PAXAAPAX@std@@YAXAAV?$allocator@PAX@0@PAPAXAAPAX@Z PROC ; std::_Cons_val<std::allocator<void *>,void *,void * &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z ; std::allocator<void *>::construct<void * &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAX@std@@PAXAAPAX@std@@YAXAAV?$allocator@PAX@0@PAPAXAAPAX@Z ENDP ; std::_Cons_val<std::allocator<void *>,void *,void * &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 485
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 487
	mov	al, BYTE PTR __Cat$[ebp]
; Line 488
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z ; std::_Dest_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *>
PUBLIC	??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z ; std::_Cons_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *,ibmras::common::Logger * const &>
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator++
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
tv84 = -28						; size = 4
tv83 = -21						; size = 1
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >, COMDAT
; Line 369
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 372
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 374
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 375
	jmp	SHORT $LN6@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator++
$LN6@Uninit_cop:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=
	mov	BYTE PTR tv83[ebp], al
	movzx	eax, BYTE PTR tv83[ebp]
	test	eax, eax
	je	SHORT $LN4@Uninit_cop
; Line 376
	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator*
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z ; std::_Cons_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *,ibmras::common::Logger * const &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 378
	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_cop:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop
; Line 379
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z ; std::_Dest_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:
; Line 380
	push	0
	push	0
	call	__CxxThrowException@8
; Line 381
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 382
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:
; Line 383
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<ibmras::common::Logger *,ibmras::common::Logger *>, COMDAT
; Line 399
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 402
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 404
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 405
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<ibmras::common::Logger *,ibmras::common::Logger *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Function compile flags: /Odtp
;	COMDAT ??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,bool>, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@PAXU?$less@PAX@std@@V?$allocator@PAX@2@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<void *,std::less<void *>,std::allocator<void *>,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z$0
__ehfuncinfo$?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
_this$ = -24						; size = 4
$T110181 = -20						; size = 4
$T110180 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z PROC	; std::allocator<void *>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T110181[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T110181[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z	; std::forward<void *>
	add	esp, 4
	mov	edx, DWORD PTR $T110181[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T110181[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T110180[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T110181[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@PAX@std@@QAEXPAPAX$$QAPAX@Z ENDP	; std::allocator<void *>::construct
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
; Line 62
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator++
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z$0
__ehfuncinfo$??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
_this$ = -24						; size = 4
$T110204 = -20						; size = 4
$T110203 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z PROC ; std::allocator<void *>::construct<void * &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T110204[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T110204[ebp], 0
	je	SHORT $LN3@construct@2
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAPAX@std@@YAAAPAXAAPAX@Z	; std::forward<void * &>
	add	esp, 4
	mov	edx, DWORD PTR $T110204[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T110204[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct@2
$LN3@construct@2:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct@2:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T110203[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T110204[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAPAX@?$allocator@PAX@std@@QAEXPAPAXAAPAX@Z ENDP ; std::allocator<void *>::construct<void * &>
PUBLIC	?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z ; std::allocator<ibmras::common::Logger *>::construct
PUBLIC	??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z ; std::forward<ibmras::common::Logger * const &>
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z PROC ; std::_Cons_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *,ibmras::common::Logger * const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z ; std::forward<ibmras::common::Logger * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z ; std::allocator<ibmras::common::Logger *>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z ENDP ; std::_Cons_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *,ibmras::common::Logger * const &>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z ; std::allocator<ibmras::common::Logger *>::destroy
; Function compile flags: /Odtp
;	COMDAT ??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z PROC ; std::_Dest_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z ; std::allocator<ibmras::common::Logger *>::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z ENDP ; std::_Dest_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *>
_TEXT	ENDS
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
; Line 64
	pop	ebp
	ret	0
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z ; std::_Construct<ibmras::common::Logger *,ibmras::common::Logger * const &>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z PROC ; std::allocator<ibmras::common::Logger *>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z ; std::_Construct<ibmras::common::Logger *,ibmras::common::Logger * const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z ENDP ; std::allocator<ibmras::common::Logger *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z ; std::_Destroy<ibmras::common::Logger *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z PROC ; std::allocator<ibmras::common::Logger *>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z ; std::_Destroy<ibmras::common::Logger *>
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z ENDP ; std::allocator<ibmras::common::Logger *>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z PROC ; std::forward<ibmras::common::Logger * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z ENDP ; std::forward<ibmras::common::Logger * const &>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z$0
__ehfuncinfo$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T110231 = -24						; size = 4
$T110230 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z PROC ; std::_Construct<ibmras::common::Logger *,ibmras::common::Logger * const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T110231[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T110231[ebp], 0
	je	SHORT $LN3@Construct
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z ; std::forward<ibmras::common::Logger * const &>
	add	esp, 4
	mov	ecx, DWORD PTR $T110231[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T110231[ebp]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@Construct
$LN3@Construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@Construct:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T110230[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T110231[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z ENDP ; std::_Construct<ibmras::common::Logger *,ibmras::common::Logger * const &>
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z PROC ; std::_Destroy<ibmras::common::Logger *>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
; Line 64
	pop	ebp
	ret	0
??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z ENDP ; std::_Destroy<ibmras::common::Logger *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_EMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@W3AEPAXI@Z PROC ; [thunk]:ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@UAEPAXI@Z
??_EMethodLookupProvider@methods@j9@plugins@monitoring@ibmras@@W3AEPAXI@Z ENDP ; [thunk]:ibmras::monitoring::plugins::j9::methods::MethodLookupProvider::`vector deleting destructor'
_TEXT	ENDS
EXTRN	_ibmras_common_LogManager_getLogger:PROC
; Function compile flags: /Odtp
;	COMDAT ??__Elogger@methods@j9@plugins@monitoring@ibmras@@YAXXZ
text$yc	SEGMENT
??__Elogger@methods@j9@plugins@monitoring@ibmras@@YAXXZ PROC ; ibmras::monitoring::plugins::j9::methods::`dynamic initializer for 'logger'', COMDAT
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\j9\methods\methodlookupprovider.cpp
; Line 32
	push	ebp
	mov	ebp, esp
	push	OFFSET $SG99766
	call	_ibmras_common_LogManager_getLogger
	add	esp, 4
	mov	DWORD PTR ?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A, eax ; ibmras::monitoring::plugins::j9::methods::logger
	pop	ebp
	ret	0
??__Elogger@methods@j9@plugins@monitoring@ibmras@@YAXXZ ENDP ; ibmras::monitoring::plugins::j9::methods::`dynamic initializer for 'logger''
text$yc	ENDS
PUBLIC	?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A ; ibmras::monitoring::plugins::j9::methods::logger
_BSS	SEGMENT
?logger@methods@j9@plugins@monitoring@ibmras@@3PAVLogger@common@5@A DD 01H DUP (?) ; ibmras::monitoring::plugins::j9::methods::logger
_BSS	ENDS
CRT$XCU	SEGMENT
_logger$initializer$ DD FLAT:??__Elogger@methods@j9@plugins@monitoring@ibmras@@YAXXZ
CRT$XCU	ENDS
END
