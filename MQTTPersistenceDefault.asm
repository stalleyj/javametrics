; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\Paho\org.eclipse.paho.mqtt.c\src\MQTTPersistenceDefault.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_Log_levels:DWORD
$SG81742 DB	'pstopen', 00H
$SG81743 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81744 DB	':', 00H
	ORG $+2
$SG81745 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81746 DB	'%s/%s-%s', 00H
	ORG $+3
$SG81748 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81750 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81751 DB	'\/', 00H
	ORG $+1
$SG81753 DB	'\/', 00H
	ORG $+1
$SG81758 DB	'%s/%s', 00H
	ORG $+2
$SG81760 DB	'\/', 00H
	ORG $+1
$SG81761 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81762 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81763 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81764 DB	'pstopen', 00H
$SG81769 DB	'pstmkdir', 00H
	ORG $+3
$SG81772 DB	'pstmkdir', 00H
	ORG $+3
$SG81791 DB	'pstput', 00H
	ORG $+1
$SG81795 DB	'.msg', 00H
	ORG $+3
$SG81796 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81797 DB	'.msg', 00H
	ORG $+3
$SG81798 DB	'%s/%s%s', 00H
$SG81799 DB	'wb', 00H
	ORG $+1
$SG81809 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81810 DB	'pstput', 00H
	ORG $+1
$SG81827 DB	'pstget', 00H
	ORG $+1
$SG81831 DB	'.msg', 00H
	ORG $+3
$SG81832 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81833 DB	'.msg', 00H
	ORG $+3
$SG81834 DB	'%s/%s%s', 00H
$SG81835 DB	'rb', 00H
	ORG $+1
$SG81839 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81844 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81845 DB	'pstget', 00H
	ORG $+1
$SG81854 DB	'pstremove', 00H
	ORG $+2
$SG81858 DB	'.msg', 00H
	ORG $+3
$SG81859 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81860 DB	'.msg', 00H
	ORG $+3
$SG81861 DB	'%s/%s%s', 00H
$SG81864 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81865 DB	'pstremove', 00H
	ORG $+2
$SG81871 DB	'pstclose', 00H
	ORG $+3
$SG81877 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81878 DB	'pstclose', 00H
	ORG $+3
$SG81886 DB	'pstcontainskey', 00H
	ORG $+1
$SG81890 DB	'pstcontainskey', 00H
	ORG $+1
$SG81903 DB	'containskeyWin32', 00H
	ORG $+3
$SG81904 DB	'%s/*', 00H
	ORG $+3
$SG81912 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81913 DB	'.msg', 00H
	ORG $+3
$SG81917 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81920 DB	'containskeyWin32', 00H
	ORG $+3
$SG81926 DB	'pstclear', 00H
	ORG $+3
$SG81930 DB	'pstclear', 00H
	ORG $+3
$SG81940 DB	'clearWin32', 00H
	ORG $+1
$SG81941 DB	'%s/*', 00H
	ORG $+3
$SG81949 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81950 DB	'%s/%s', 00H
	ORG $+2
$SG81951 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG81956 DB	'clearWin32', 00H
	ORG $+1
$SG81966 DB	'pstkeys', 00H
$SG81970 DB	'pstkeys', 00H
$SG81988 DB	'keysWin32', 00H
	ORG $+2
$SG81989 DB	'%s/*', 00H
	ORG $+3
$SG82004 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG82012 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPersistenceDefau'
	DB	'lt.c', 00H
	ORG $+3
$SG82013 DB	'.msg', 00H
	ORG $+3
$SG82019 DB	'keysWin32', 00H
_DATA	ENDS
PUBLIC	_pstmkdir
PUBLIC	_pstopen
EXTRN	_StackTrace_exit:PROC
EXTRN	_myfree:PROC
EXTRN	__imp__strtok:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	__imp__strstr:PROC
EXTRN	_strcpy:PROC
EXTRN	_mymalloc:PROC
EXTRN	_strlen:PROC
EXTRN	_StackTrace_entry:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dataDir$ = -36						; size = 4
_pTokDirName$ = -32					; size = 4
_pToken$ = -28						; size = 4
_save_ptr$ = -24					; size = 4
_perserverURI$ = -20					; size = 4
_clientDir$ = -16					; size = 4
_ptraux$ = -12						; size = 4
_rc$ = -8						; size = 4
_pCrtDirName$ = -4					; size = 4
_handle$ = 8						; size = 4
_clientID$ = 12						; size = 4
_serverURI$ = 16					; size = 4
_context$ = 20						; size = 4
_pstopen PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttpersistencedefault.c
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
; Line 63
	mov	DWORD PTR _rc$[ebp], 0
; Line 64
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _dataDir$[ebp], eax
; Line 66
	mov	DWORD PTR _pToken$[ebp], 0
; Line 67
	mov	DWORD PTR _save_ptr$[ebp], 0
; Line 68
	mov	DWORD PTR _pCrtDirName$[ebp], 0
; Line 69
	mov	DWORD PTR _pTokDirName$[ebp], 0
; Line 70
	mov	DWORD PTR _perserverURI$[ebp], 0
; Line 72
	push	3
	push	72					; 00000048H
	push	OFFSET $SG81742
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 74
	mov	ecx, DWORD PTR _serverURI$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	74					; 0000004aH
	push	OFFSET $SG81743
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _perserverURI$[ebp], eax
; Line 75
	mov	edx, DWORD PTR _serverURI$[ebp]
	push	edx
	mov	eax, DWORD PTR _perserverURI$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 76
	push	OFFSET $SG81744
	mov	ecx, DWORD PTR _perserverURI$[ebp]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	mov	DWORD PTR _ptraux$[ebp], eax
; Line 77
	mov	edx, DWORD PTR _ptraux$[ebp]
	mov	BYTE PTR [edx], 45			; 0000002dH
; Line 80
	mov	eax, DWORD PTR _dataDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _clientID$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	esi, eax
	mov	edx, DWORD PTR _perserverURI$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR [esi+eax+3]
	push	eax
	push	80					; 00000050H
	push	OFFSET $SG81745
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _clientDir$[ebp], eax
; Line 81
	mov	ecx, DWORD PTR _perserverURI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _clientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _dataDir$[ebp]
	push	eax
	push	OFFSET $SG81746
	mov	ecx, DWORD PTR _clientDir$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
; Line 89
	mov	edx, DWORD PTR _clientDir$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	89					; 00000059H
	push	OFFSET $SG81748
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCrtDirName$[ebp], eax
; Line 90
	mov	eax, DWORD PTR _clientDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	90					; 0000005aH
	push	OFFSET $SG81750
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pTokDirName$[ebp], eax
; Line 91
	mov	ecx, DWORD PTR _clientDir$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTokDirName$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 93
	push	OFFSET $SG81751
	mov	eax, DWORD PTR _pTokDirName$[ebp]
	push	eax
	call	DWORD PTR __imp__strtok
	add	esp, 8
	mov	DWORD PTR _pToken$[ebp], eax
; Line 95
	mov	ecx, DWORD PTR _pToken$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCrtDirName$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 96
	mov	eax, DWORD PTR _pCrtDirName$[ebp]
	push	eax
	call	_pstmkdir
	add	esp, 4
	mov	DWORD PTR _rc$[ebp], eax
; Line 97
	push	OFFSET $SG81753
	push	0
	call	DWORD PTR __imp__strtok
	add	esp, 8
	mov	DWORD PTR _pToken$[ebp], eax
$LN2@pstopen:
; Line 98
	cmp	DWORD PTR _pToken$[ebp], 0
	je	SHORT $LN1@pstopen
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN1@pstopen
; Line 101
	mov	ecx, DWORD PTR _pToken$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCrtDirName$[ebp]
	push	edx
	push	OFFSET $SG81758
	mov	eax, DWORD PTR _pCrtDirName$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
; Line 102
	mov	ecx, DWORD PTR _pCrtDirName$[ebp]
	push	ecx
	call	_pstmkdir
	add	esp, 4
	mov	DWORD PTR _rc$[ebp], eax
; Line 103
	push	OFFSET $SG81760
	push	0
	call	DWORD PTR __imp__strtok
	add	esp, 8
	mov	DWORD PTR _pToken$[ebp], eax
; Line 104
	jmp	SHORT $LN2@pstopen
$LN1@pstopen:
; Line 106
	mov	edx, DWORD PTR _handle$[ebp]
	mov	eax, DWORD PTR _clientDir$[ebp]
	mov	DWORD PTR [edx], eax
; Line 108
	mov	ecx, DWORD PTR _perserverURI$[ebp]
	push	ecx
	push	108					; 0000006cH
	push	OFFSET $SG81761
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 109
	mov	edx, DWORD PTR _pTokDirName$[ebp]
	push	edx
	push	109					; 0000006dH
	push	OFFSET $SG81762
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 110
	mov	eax, DWORD PTR _pCrtDirName$[ebp]
	push	eax
	push	110					; 0000006eH
	push	OFFSET $SG81763
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 112
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	112					; 00000070H
	push	OFFSET $SG81764
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 113
	mov	eax, DWORD PTR _rc$[ebp]
; Line 114
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_pstopen ENDP
_TEXT	ENDS
EXTRN	__imp___errno:PROC
EXTRN	__imp___mkdir:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_pPathname$ = 8						; size = 4
_pstmkdir PROC
; Line 120
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 121
	mov	DWORD PTR _rc$[ebp], 0
; Line 123
	push	3
	push	123					; 0000007bH
	push	OFFSET $SG81769
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 125
	mov	eax, DWORD PTR _pPathname$[ebp]
	push	eax
	call	DWORD PTR __imp___mkdir
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@pstmkdir
; Line 132
	call	DWORD PTR __imp___errno
	cmp	DWORD PTR [eax], 17			; 00000011H
	je	SHORT $LN2@pstmkdir
; Line 133
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
$LN2@pstmkdir:
; Line 136
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	136					; 00000088H
	push	OFFSET $SG81772
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 137
	mov	eax, DWORD PTR _rc$[ebp]
; Line 138
	mov	esp, ebp
	pop	ebp
	ret	0
_pstmkdir ENDP
_TEXT	ENDS
PUBLIC	_pstremove
PUBLIC	_pstput
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp__fopen:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_bytesWritten$ = -28					; size = 4
_file$ = -24						; size = 4
_fp$ = -20						; size = 4
_clientDir$ = -16					; size = 4
_i$ = -12						; size = 4
_rc$ = -8						; size = 4
_bytesTotal$ = -4					; size = 4
_handle$ = 8						; size = 4
_key$ = 12						; size = 4
_bufcount$ = 16						; size = 4
_buffers$ = 20						; size = 4
_buflens$ = 24						; size = 4
_pstput	PROC
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
; Line 147
	mov	DWORD PTR _rc$[ebp], 0
; Line 148
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _clientDir$[ebp], eax
; Line 151
	mov	DWORD PTR _bytesWritten$[ebp], 0
; Line 152
	mov	DWORD PTR _bytesTotal$[ebp], 0
; Line 155
	push	3
	push	155					; 0000009bH
	push	OFFSET $SG81791
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 156
	cmp	DWORD PTR _clientDir$[ebp], 0
	jne	SHORT $LN7@pstput
; Line 158
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 159
	jmp	$exit$81794
$LN7@pstput:
; Line 163
	mov	ecx, DWORD PTR _clientDir$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	esi, eax
	push	OFFSET $SG81795
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR [esi+eax+2]
	push	eax
	push	163					; 000000a3H
	push	OFFSET $SG81796
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _file$[ebp], eax
; Line 164
	push	OFFSET $SG81797
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _clientDir$[ebp]
	push	edx
	push	OFFSET $SG81798
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
; Line 166
	push	OFFSET $SG81799
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax
; Line 167
	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN6@pstput
; Line 169
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@pstput
$LN4@pstput:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN5@pstput:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _bufcount$[ebp]
	jge	SHORT $LN3@pstput
; Line 171
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _buflens$[ebp]
	mov	eax, DWORD PTR _bytesTotal$[ebp]
	add	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _bytesTotal$[ebp], eax
; Line 172
	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buflens$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	push	1
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buffers$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _bytesWritten$[ebp]
	mov	DWORD PTR _bytesWritten$[ebp], eax
; Line 173
	jmp	SHORT $LN4@pstput
$LN3@pstput:
; Line 174
	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	DWORD PTR __imp__fclose
	add	esp, 4
; Line 175
	mov	DWORD PTR _fp$[ebp], 0
; Line 176
	jmp	SHORT $LN2@pstput
$LN6@pstput:
; Line 177
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
$LN2@pstput:
; Line 179
	mov	eax, DWORD PTR _bytesWritten$[ebp]
	cmp	eax, DWORD PTR _bytesTotal$[ebp]
	je	SHORT $LN1@pstput
; Line 181
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _handle$[ebp]
	push	edx
	call	_pstremove
	add	esp, 8
; Line 182
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
$LN1@pstput:
; Line 185
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	185					; 000000b9H
	push	OFFSET $SG81809
	call	_myfree
	add	esp, 12					; 0000000cH
$exit$81794:
; Line 188
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	188					; 000000bcH
	push	OFFSET $SG81810
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 189
	mov	eax, DWORD PTR _rc$[ebp]
; Line 190
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_pstput	ENDP
_TEXT	ENDS
PUBLIC	_pstget
EXTRN	__imp__fread:PROC
EXTRN	__imp__ftell:PROC
EXTRN	__imp__fseek:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_bytesRead$ = -28					; size = 4
_buf$ = -24						; size = 4
_file$ = -20						; size = 4
_fileLen$ = -16						; size = 4
_fp$ = -12						; size = 4
_clientDir$ = -8					; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_key$ = 12						; size = 4
_buffer$ = 16						; size = 4
_buflen$ = 20						; size = 4
_pstget	PROC
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
; Line 198
	mov	DWORD PTR _rc$[ebp], 0
; Line 200
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _clientDir$[ebp], eax
; Line 203
	mov	DWORD PTR _fileLen$[ebp], 0
; Line 204
	mov	DWORD PTR _bytesRead$[ebp], 0
; Line 206
	push	3
	push	206					; 000000ceH
	push	OFFSET $SG81827
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 207
	cmp	DWORD PTR _clientDir$[ebp], 0
	jne	SHORT $LN4@pstget
; Line 209
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 210
	jmp	$exit$81830
$LN4@pstget:
; Line 214
	mov	ecx, DWORD PTR _clientDir$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	esi, eax
	push	OFFSET $SG81831
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR [esi+eax+2]
	push	eax
	push	214					; 000000d6H
	push	OFFSET $SG81832
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _file$[ebp], eax
; Line 215
	push	OFFSET $SG81833
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _clientDir$[ebp]
	push	edx
	push	OFFSET $SG81834
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
; Line 217
	push	OFFSET $SG81835
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax
; Line 218
	cmp	DWORD PTR _fp$[ebp], 0
	je	$LN3@pstget
; Line 220
	push	2
	push	0
	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
; Line 221
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	DWORD PTR __imp__ftell
	add	esp, 4
	mov	DWORD PTR _fileLen$[ebp], eax
; Line 222
	push	0
	push	0
	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
; Line 223
	mov	edx, DWORD PTR _fileLen$[ebp]
	push	edx
	push	223					; 000000dfH
	push	OFFSET $SG81839
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$[ebp], eax
; Line 224
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileLen$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp__fread
	add	esp, 16					; 00000010H
	mov	DWORD PTR _bytesRead$[ebp], eax
; Line 225
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 226
	mov	edx, DWORD PTR _buflen$[ebp]
	mov	eax, DWORD PTR _bytesRead$[ebp]
	mov	DWORD PTR [edx], eax
; Line 227
	mov	ecx, DWORD PTR _bytesRead$[ebp]
	cmp	ecx, DWORD PTR _fileLen$[ebp]
	je	SHORT $LN2@pstget
; Line 228
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
$LN2@pstget:
; Line 229
	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	DWORD PTR __imp__fclose
	add	esp, 4
; Line 230
	mov	DWORD PTR _fp$[ebp], 0
; Line 231
	jmp	SHORT $LN1@pstget
$LN3@pstget:
; Line 232
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
$LN1@pstget:
; Line 234
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	234					; 000000eaH
	push	OFFSET $SG81844
	call	_myfree
	add	esp, 12					; 0000000cH
$exit$81830:
; Line 238
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	238					; 000000eeH
	push	OFFSET $SG81845
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 239
	mov	eax, DWORD PTR _rc$[ebp]
; Line 240
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_pstget	ENDP
_TEXT	ENDS
EXTRN	__imp___unlink:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_file$ = -12						; size = 4
_clientDir$ = -8					; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_key$ = 12						; size = 4
_pstremove PROC
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
; Line 249
	mov	DWORD PTR _rc$[ebp], 0
; Line 250
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _clientDir$[ebp], eax
; Line 253
	push	3
	push	253					; 000000fdH
	push	OFFSET $SG81854
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 254
	cmp	DWORD PTR _clientDir$[ebp], 0
	jne	SHORT $LN3@pstremove
; Line 256
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
	mov	eax, DWORD PTR _rc$[ebp]
	jmp	$LN4@pstremove
; Line 257
	jmp	$exit$81857
$LN3@pstremove:
; Line 261
	mov	ecx, DWORD PTR _clientDir$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	esi, eax
	push	OFFSET $SG81858
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR [esi+eax+2]
	push	eax
	push	261					; 00000105H
	push	OFFSET $SG81859
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _file$[ebp], eax
; Line 262
	push	OFFSET $SG81860
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _clientDir$[ebp]
	push	edx
	push	OFFSET $SG81861
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
; Line 265
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	DWORD PTR __imp___unlink
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@pstremove
; Line 271
	call	DWORD PTR __imp___errno
	cmp	DWORD PTR [eax], 2
	je	SHORT $LN2@pstremove
; Line 272
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
$LN2@pstremove:
; Line 275
	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	275					; 00000113H
	push	OFFSET $SG81864
	call	_myfree
	add	esp, 12					; 0000000cH
$exit$81857:
; Line 278
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	278					; 00000116H
	push	OFFSET $SG81865
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 279
	mov	eax, DWORD PTR _rc$[ebp]
$LN4@pstremove:
; Line 280
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_pstremove ENDP
_TEXT	ENDS
PUBLIC	_pstclose
EXTRN	__imp___rmdir:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_clientDir$ = -8					; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_pstclose PROC
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 288
	mov	DWORD PTR _rc$[ebp], 0
; Line 289
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _clientDir$[ebp], eax
; Line 291
	push	3
	push	291					; 00000123H
	push	OFFSET $SG81871
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 292
	cmp	DWORD PTR _clientDir$[ebp], 0
	jne	SHORT $LN3@pstclose
; Line 294
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 295
	jmp	SHORT $exit$81874
$LN3@pstclose:
; Line 299
	mov	ecx, DWORD PTR _clientDir$[ebp]
	push	ecx
	call	DWORD PTR __imp___rmdir
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@pstclose
; Line 305
	call	DWORD PTR __imp___errno
	cmp	DWORD PTR [eax], 2
	je	SHORT $LN2@pstclose
	call	DWORD PTR __imp___errno
	cmp	DWORD PTR [eax], 41			; 00000029H
	je	SHORT $LN2@pstclose
; Line 306
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
$LN2@pstclose:
; Line 309
	mov	edx, DWORD PTR _clientDir$[ebp]
	push	edx
	push	309					; 00000135H
	push	OFFSET $SG81877
	call	_myfree
	add	esp, 12					; 0000000cH
$exit$81874:
; Line 312
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	312					; 00000138H
	push	OFFSET $SG81878
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 313
	mov	eax, DWORD PTR _rc$[ebp]
; Line 314
	mov	esp, ebp
	pop	ebp
	ret	0
_pstclose ENDP
_TEXT	ENDS
PUBLIC	_containskeyWin32
PUBLIC	_pstcontainskey
; Function compile flags: /Odtp
_TEXT	SEGMENT
_clientDir$ = -8					; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_key$ = 12						; size = 4
_pstcontainskey PROC
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 322
	mov	DWORD PTR _rc$[ebp], 0
; Line 323
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _clientDir$[ebp], eax
; Line 325
	push	3
	push	325					; 00000145H
	push	OFFSET $SG81886
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 326
	cmp	DWORD PTR _clientDir$[ebp], 0
	jne	SHORT $LN1@pstcontain
; Line 328
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 329
	jmp	SHORT $exit$81889
$LN1@pstcontain:
; Line 333
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _clientDir$[ebp]
	push	edx
	call	_containskeyWin32
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
$exit$81889:
; Line 339
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	339					; 00000153H
	push	OFFSET $SG81890
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 340
	mov	eax, DWORD PTR _rc$[ebp]
; Line 341
	mov	esp, ebp
	pop	ebp
	ret	0
_pstcontainskey ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__FindClose@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__FindNextFileA@8:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp__FindFirstFileA@8:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_fFinished$ = -612					; size = 4
_dir$ = -608						; size = 261
_hDir$ = -340						; size = 4
_notFound$ = -336					; size = 4
_filekey$ = -332					; size = 4
_FileData$ = -328					; size = 320
__$ArrayPad$ = -8					; size = 4
_ptraux$ = -4						; size = 4
_dirname$ = 8						; size = 4
_key$ = 12						; size = 4
_containskeyWin32 PROC
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 612				; 00000264H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 347
	mov	DWORD PTR _notFound$[ebp], -2		; fffffffeH
; Line 348
	mov	DWORD PTR _fFinished$[ebp], 0
; Line 354
	push	3
	push	354					; 00000162H
	push	OFFSET $SG81903
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 355
	mov	eax, DWORD PTR _dirname$[ebp]
	push	eax
	push	OFFSET $SG81904
	lea	ecx, DWORD PTR _dir$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
; Line 357
	lea	edx, DWORD PTR _FileData$[ebp]
	push	edx
	lea	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _hDir$[ebp], eax
; Line 358
	cmp	DWORD PTR _hDir$[ebp], -1
	je	$LN8@containske
$LN7@containske:
; Line 360
	cmp	DWORD PTR _fFinished$[ebp], 0
	jne	$LN6@containske
; Line 362
	mov	ecx, DWORD PTR _FileData$[ebp]
	and	ecx, 32					; 00000020H
	je	$LN5@containske
; Line 364
	lea	edx, DWORD PTR _FileData$[ebp+44]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	364					; 0000016cH
	push	OFFSET $SG81912
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _filekey$[ebp], eax
; Line 365
	lea	eax, DWORD PTR _FileData$[ebp+44]
	push	eax
	mov	ecx, DWORD PTR _filekey$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 366
	push	OFFSET $SG81913
	mov	edx, DWORD PTR _filekey$[ebp]
	push	edx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	mov	DWORD PTR _ptraux$[ebp], eax
; Line 367
	cmp	DWORD PTR _ptraux$[ebp], 0
	je	SHORT $LN4@containske
; Line 368
	mov	eax, DWORD PTR _ptraux$[ebp]
	mov	BYTE PTR [eax], 0
$LN4@containske:
; Line 369
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filekey$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@containske
; Line 371
	mov	DWORD PTR _notFound$[ebp], 0
; Line 372
	mov	DWORD PTR _fFinished$[ebp], 1
$LN3@containske:
; Line 374
	mov	eax, DWORD PTR _filekey$[ebp]
	push	eax
	push	374					; 00000176H
	push	OFFSET $SG81917
	call	_myfree
	add	esp, 12					; 0000000cH
$LN5@containske:
; Line 376
	lea	ecx, DWORD PTR _FileData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hDir$[ebp]
	push	edx
	call	DWORD PTR __imp__FindNextFileA@8
	test	eax, eax
	jne	SHORT $LN2@containske
; Line 378
	call	DWORD PTR __imp__GetLastError@0
	cmp	eax, 18					; 00000012H
	jne	SHORT $LN2@containske
; Line 379
	mov	DWORD PTR _fFinished$[ebp], 1
$LN2@containske:
; Line 381
	jmp	$LN7@containske
$LN6@containske:
; Line 382
	mov	eax, DWORD PTR _hDir$[ebp]
	push	eax
	call	DWORD PTR __imp__FindClose@4
$LN8@containske:
; Line 385
	push	3
	lea	ecx, DWORD PTR _notFound$[ebp]
	push	ecx
	push	385					; 00000181H
	push	OFFSET $SG81920
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 386
	mov	eax, DWORD PTR _notFound$[ebp]
; Line 387
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_containskeyWin32 ENDP
_TEXT	ENDS
PUBLIC	_clearWin32
PUBLIC	_pstclear
; Function compile flags: /Odtp
_TEXT	SEGMENT
_clientDir$ = -8					; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_pstclear PROC
; Line 431
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 432
	mov	DWORD PTR _rc$[ebp], 0
; Line 433
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _clientDir$[ebp], eax
; Line 435
	push	3
	push	435					; 000001b3H
	push	OFFSET $SG81926
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 436
	cmp	DWORD PTR _clientDir$[ebp], 0
	jne	SHORT $LN1@pstclear
; Line 438
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 439
	jmp	SHORT $exit$81929
$LN1@pstclear:
; Line 443
	mov	ecx, DWORD PTR _clientDir$[ebp]
	push	ecx
	call	_clearWin32
	add	esp, 4
	mov	DWORD PTR _rc$[ebp], eax
$exit$81929:
; Line 449
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	449					; 000001c1H
	push	OFFSET $SG81930
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 450
	mov	eax, DWORD PTR _rc$[ebp]
; Line 451
	mov	esp, ebp
	pop	ebp
	ret	0
_pstclear ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__remove:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_fFinished$ = -604					; size = 4
_dir$ = -600						; size = 261
_hDir$ = -336						; size = 4
_file$ = -332						; size = 4
_FileData$ = -328					; size = 320
__$ArrayPad$ = -8					; size = 4
_rc$ = -4						; size = 4
_dirname$ = 8						; size = 4
_clearWin32 PROC
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 604				; 0000025cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
; Line 457
	mov	DWORD PTR _rc$[ebp], 0
; Line 458
	mov	DWORD PTR _fFinished$[ebp], 0
; Line 464
	push	3
	push	464					; 000001d0H
	push	OFFSET $SG81940
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 465
	mov	eax, DWORD PTR _dirname$[ebp]
	push	eax
	push	OFFSET $SG81941
	lea	ecx, DWORD PTR _dir$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
; Line 467
	lea	edx, DWORD PTR _FileData$[ebp]
	push	edx
	lea	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _hDir$[ebp], eax
; Line 468
	cmp	DWORD PTR _hDir$[ebp], -1
	je	$LN8@clearWin32
$LN7@clearWin32:
; Line 470
	cmp	DWORD PTR _fFinished$[ebp], 0
	jne	$LN6@clearWin32
; Line 472
	mov	ecx, DWORD PTR _FileData$[ebp]
	and	ecx, 32					; 00000020H
	je	$LN5@clearWin32
; Line 474
	mov	edx, DWORD PTR _dirname$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	esi, eax
	lea	eax, DWORD PTR _FileData$[ebp+44]
	push	eax
	call	_strlen
	add	esp, 4
	lea	ecx, DWORD PTR [esi+eax+2]
	push	ecx
	push	474					; 000001daH
	push	OFFSET $SG81949
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _file$[ebp], eax
; Line 475
	lea	edx, DWORD PTR _FileData$[ebp+44]
	push	edx
	mov	eax, DWORD PTR _dirname$[ebp]
	push	eax
	push	OFFSET $SG81950
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
; Line 476
	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	call	DWORD PTR __imp__remove
	add	esp, 4
	mov	DWORD PTR _rc$[ebp], eax
; Line 477
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	477					; 000001ddH
	push	OFFSET $SG81951
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 478
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN5@clearWin32
; Line 480
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 481
	jmp	SHORT $LN6@clearWin32
$LN5@clearWin32:
; Line 484
	lea	ecx, DWORD PTR _FileData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hDir$[ebp]
	push	edx
	call	DWORD PTR __imp__FindNextFileA@8
	test	eax, eax
	jne	SHORT $LN3@clearWin32
; Line 486
	call	DWORD PTR __imp__GetLastError@0
	cmp	eax, 18					; 00000012H
	jne	SHORT $LN3@clearWin32
; Line 487
	mov	DWORD PTR _fFinished$[ebp], 1
$LN3@clearWin32:
; Line 489
	jmp	$LN7@clearWin32
$LN6@clearWin32:
; Line 490
	mov	eax, DWORD PTR _hDir$[ebp]
	push	eax
	call	DWORD PTR __imp__FindClose@4
; Line 491
	jmp	SHORT $LN1@clearWin32
$LN8@clearWin32:
; Line 492
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
$LN1@clearWin32:
; Line 494
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	494					; 000001eeH
	push	OFFSET $SG81956
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 495
	mov	eax, DWORD PTR _rc$[ebp]
; Line 496
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_clearWin32 ENDP
_TEXT	ENDS
PUBLIC	_keysWin32
PUBLIC	_pstkeys
; Function compile flags: /Odtp
_TEXT	SEGMENT
_clientDir$ = -8					; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_keys$ = 12						; size = 4
_nkeys$ = 16						; size = 4
_pstkeys PROC
; Line 531
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 532
	mov	DWORD PTR _rc$[ebp], 0
; Line 533
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _clientDir$[ebp], eax
; Line 535
	push	3
	push	535					; 00000217H
	push	OFFSET $SG81966
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 536
	cmp	DWORD PTR _clientDir$[ebp], 0
	jne	SHORT $LN1@pstkeys
; Line 538
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 539
	jmp	SHORT $exit$81969
$LN1@pstkeys:
; Line 543
	mov	ecx, DWORD PTR _nkeys$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keys$[ebp]
	push	edx
	mov	eax, DWORD PTR _clientDir$[ebp]
	push	eax
	call	_keysWin32
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
$exit$81969:
; Line 549
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	549					; 00000225H
	push	OFFSET $SG81970
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 550
	mov	eax, DWORD PTR _rc$[ebp]
; Line 551
	mov	esp, ebp
	pop	ebp
	ret	0
_pstkeys ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp
_TEXT	SEGMENT
_fFinished$ = -620					; size = 4
_dir$ = -616						; size = 261
_hDir$ = -352						; size = 4
_nfkeys$ = -348						; size = 4
_FileData$ = -344					; size = 320
__$ArrayPad$ = -20					; size = 4
_fkeys$ = -16						; size = 4
_i$ = -12						; size = 4
_ptraux$ = -8						; size = 4
_rc$ = -4						; size = 4
_dirname$ = 8						; size = 4
_keys$ = 12						; size = 4
_nkeys$ = 16						; size = 4
_keysWin32 PROC
; Line 556
	push	ebp
	mov	ebp, esp
	sub	esp, 620				; 0000026cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 557
	mov	DWORD PTR _rc$[ebp], 0
; Line 558
	mov	DWORD PTR _fkeys$[ebp], 0
; Line 559
	mov	DWORD PTR _nfkeys$[ebp], 0
; Line 563
	mov	DWORD PTR _fFinished$[ebp], 0
; Line 567
	push	3
	push	567					; 00000237H
	push	OFFSET $SG81988
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 568
	mov	eax, DWORD PTR _dirname$[ebp]
	push	eax
	push	OFFSET $SG81989
	lea	ecx, DWORD PTR _dir$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
; Line 571
	lea	edx, DWORD PTR _FileData$[ebp]
	push	edx
	lea	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _hDir$[ebp], eax
; Line 572
	cmp	DWORD PTR _hDir$[ebp], -1
	je	SHORT $LN16@keysWin32
$LN15@keysWin32:
; Line 574
	cmp	DWORD PTR _fFinished$[ebp], 0
	jne	SHORT $LN14@keysWin32
; Line 576
	mov	ecx, DWORD PTR _FileData$[ebp]
	and	ecx, 32					; 00000020H
	je	SHORT $LN13@keysWin32
; Line 577
	mov	edx, DWORD PTR _nfkeys$[ebp]
	add	edx, 1
	mov	DWORD PTR _nfkeys$[ebp], edx
$LN13@keysWin32:
; Line 578
	lea	eax, DWORD PTR _FileData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hDir$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindNextFileA@8
	test	eax, eax
	jne	SHORT $LN12@keysWin32
; Line 580
	call	DWORD PTR __imp__GetLastError@0
	cmp	eax, 18					; 00000012H
	jne	SHORT $LN12@keysWin32
; Line 581
	mov	DWORD PTR _fFinished$[ebp], 1
$LN12@keysWin32:
; Line 583
	jmp	SHORT $LN15@keysWin32
$LN14@keysWin32:
; Line 584
	mov	edx, DWORD PTR _hDir$[ebp]
	push	edx
	call	DWORD PTR __imp__FindClose@4
; Line 585
	jmp	SHORT $LN10@keysWin32
$LN16@keysWin32:
; Line 587
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 588
	jmp	$exit$82000
$LN10@keysWin32:
; Line 591
	cmp	DWORD PTR _nfkeys$[ebp], 0
	je	SHORT $LN9@keysWin32
; Line 592
	mov	eax, DWORD PTR _nfkeys$[ebp]
	shl	eax, 2
	push	eax
	push	592					; 00000250H
	push	OFFSET $SG82004
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fkeys$[ebp], eax
$LN9@keysWin32:
; Line 595
	lea	ecx, DWORD PTR _FileData$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dir$[ebp]
	push	edx
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _hDir$[ebp], eax
; Line 596
	cmp	DWORD PTR _hDir$[ebp], -1
	je	$LN8@keysWin32
; Line 598
	mov	DWORD PTR _fFinished$[ebp], 0
; Line 599
	mov	DWORD PTR _i$[ebp], 0
$LN7@keysWin32:
; Line 600
	cmp	DWORD PTR _fFinished$[ebp], 0
	jne	$LN6@keysWin32
; Line 602
	mov	eax, DWORD PTR _FileData$[ebp]
	and	eax, 32					; 00000020H
	je	SHORT $LN5@keysWin32
; Line 604
	lea	ecx, DWORD PTR _FileData$[ebp+44]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	604					; 0000025cH
	push	OFFSET $SG82012
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _fkeys$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 605
	lea	edx, DWORD PTR _FileData$[ebp+44]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _fkeys$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 606
	push	OFFSET $SG82013
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _fkeys$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	mov	DWORD PTR _ptraux$[ebp], eax
; Line 607
	cmp	DWORD PTR _ptraux$[ebp], 0
	je	SHORT $LN4@keysWin32
; Line 608
	mov	eax, DWORD PTR _ptraux$[ebp]
	mov	BYTE PTR [eax], 0
$LN4@keysWin32:
; Line 609
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN5@keysWin32:
; Line 611
	lea	edx, DWORD PTR _FileData$[ebp]
	push	edx
	mov	eax, DWORD PTR _hDir$[ebp]
	push	eax
	call	DWORD PTR __imp__FindNextFileA@8
	test	eax, eax
	jne	SHORT $LN3@keysWin32
; Line 613
	call	DWORD PTR __imp__GetLastError@0
	cmp	eax, 18					; 00000012H
	jne	SHORT $LN3@keysWin32
; Line 614
	mov	DWORD PTR _fFinished$[ebp], 1
$LN3@keysWin32:
; Line 616
	jmp	$LN7@keysWin32
$LN6@keysWin32:
; Line 617
	mov	ecx, DWORD PTR _hDir$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindClose@4
; Line 618
	jmp	SHORT $LN1@keysWin32
$LN8@keysWin32:
; Line 620
	mov	DWORD PTR _rc$[ebp], -2			; fffffffeH
; Line 621
	jmp	SHORT $exit$82000
$LN1@keysWin32:
; Line 624
	mov	edx, DWORD PTR _nkeys$[ebp]
	mov	eax, DWORD PTR _nfkeys$[ebp]
	mov	DWORD PTR [edx], eax
; Line 625
	mov	ecx, DWORD PTR _keys$[ebp]
	mov	edx, DWORD PTR _fkeys$[ebp]
	mov	DWORD PTR [ecx], edx
$exit$82000:
; Line 629
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	629					; 00000275H
	push	OFFSET $SG82019
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 630
	mov	eax, DWORD PTR _rc$[ebp]
; Line 631
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_keysWin32 ENDP
_TEXT	ENDS
END
