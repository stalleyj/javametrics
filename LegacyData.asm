; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\runtime.tools\src\ibmras\common\data\legacy\LegacyData.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_DATA	SEGMENT
_DELIMETER DD	FLAT:$SG31738
_EOL	DD	FLAT:$SG31740
_DATA	ENDS
CONST	SEGMENT
$SG31738 DB	'@#', 00H
	ORG $+1
$SG31740 DB	0aH, 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_7LegacyDataValue@legacy@data@common@ibmras@@6B@ ; ibmras::common::data::legacy::LegacyDataValue::`vftable'
PUBLIC	??1LegacyDataValue@legacy@data@common@ibmras@@UAE@XZ ; ibmras::common::data::legacy::LegacyDataValue::~LegacyDataValue
PUBLIC	??_R4LegacyDataValue@legacy@data@common@ibmras@@6B@ ; ibmras::common::data::legacy::LegacyDataValue::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLegacyDataValue@legacy@data@common@ibmras@@@8 ; ibmras::common::data::legacy::LegacyDataValue `RTTI Type Descriptor'
PUBLIC	??_R3LegacyDataValue@legacy@data@common@ibmras@@8 ; ibmras::common::data::legacy::LegacyDataValue::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LegacyDataValue@legacy@data@common@ibmras@@8 ; ibmras::common::data::legacy::LegacyDataValue::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LegacyDataValue@legacy@data@common@ibmras@@8 ; ibmras::common::data::legacy::LegacyDataValue::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
EXTRN	??_ELegacyDataValue@legacy@data@common@ibmras@@UAEPAXI@Z:PROC ; ibmras::common::data::legacy::LegacyDataValue::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@LegacyDataValue@legacy@data@common@ibmras@@8
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\common\data\legacy\legacydata.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@LegacyDataValue@legacy@data@common@ibmras@@8 DD FLAT:??_R0?AVLegacyDataValue@legacy@data@common@ibmras@@@8 ; ibmras::common::data::legacy::LegacyDataValue::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LegacyDataValue@legacy@data@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R2LegacyDataValue@legacy@data@common@ibmras@@8
rdata$r	SEGMENT
??_R2LegacyDataValue@legacy@data@common@ibmras@@8 DD FLAT:??_R1A@?0A@EA@LegacyDataValue@legacy@data@common@ibmras@@8 ; ibmras::common::data::legacy::LegacyDataValue::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3LegacyDataValue@legacy@data@common@ibmras@@8
rdata$r	SEGMENT
??_R3LegacyDataValue@legacy@data@common@ibmras@@8 DD 00H ; ibmras::common::data::legacy::LegacyDataValue::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2LegacyDataValue@legacy@data@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLegacyDataValue@legacy@data@common@ibmras@@@8
_DATA	SEGMENT
??_R0?AVLegacyDataValue@legacy@data@common@ibmras@@@8 DD FLAT:??_7type_info@@6B@ ; ibmras::common::data::legacy::LegacyDataValue `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLegacyDataValue@legacy@data@common@ibmras@@', 00H
_DATA	ENDS
;	COMDAT ??_R4LegacyDataValue@legacy@data@common@ibmras@@6B@
rdata$r	SEGMENT
??_R4LegacyDataValue@legacy@data@common@ibmras@@6B@ DD 00H ; ibmras::common::data::legacy::LegacyDataValue::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLegacyDataValue@legacy@data@common@ibmras@@@8
	DD	FLAT:??_R3LegacyDataValue@legacy@data@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_7LegacyDataValue@legacy@data@common@ibmras@@6B@
CONST	SEGMENT
??_7LegacyDataValue@legacy@data@common@ibmras@@6B@ DD FLAT:??_R4LegacyDataValue@legacy@data@common@ibmras@@6B@ ; ibmras::common::data::legacy::LegacyDataValue::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:??_ELegacyDataValue@legacy@data@common@ibmras@@UAEPAXI@Z
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LegacyDataValue@legacy@data@common@ibmras@@UAE@XZ PROC ; ibmras::common::data::legacy::LegacyDataValue::~LegacyDataValue
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LegacyDataValue@legacy@data@common@ibmras@@6B@
; Line 24
	mov	esp, ebp
	pop	ebp
	ret	0
??1LegacyDataValue@legacy@data@common@ibmras@@UAE@XZ ENDP ; ibmras::common::data::legacy::LegacyDataValue::~LegacyDataValue
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ??_GLegacyDataValue@legacy@data@common@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLegacyDataValue@legacy@data@common@ibmras@@UAEPAXI@Z PROC ; ibmras::common::data::legacy::LegacyDataValue::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LegacyDataValue@legacy@data@common@ibmras@@UAE@XZ ; ibmras::common::data::legacy::LegacyDataValue::~LegacyDataValue
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLegacyDataValue@legacy@data@common@ibmras@@UAEPAXI@Z ENDP ; ibmras::common::data::legacy::LegacyDataValue::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_7LegacyData@legacy@data@common@ibmras@@6B@	; ibmras::common::data::legacy::LegacyData::`vftable'
PUBLIC	??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z ; ibmras::common::data::legacy::LegacyData::LegacyData
PUBLIC	??_R4LegacyData@legacy@data@common@ibmras@@6B@	; ibmras::common::data::legacy::LegacyData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLegacyData@legacy@data@common@ibmras@@@8 ; ibmras::common::data::legacy::LegacyData `RTTI Type Descriptor'
PUBLIC	??_R3LegacyData@legacy@data@common@ibmras@@8	; ibmras::common::data::legacy::LegacyData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LegacyData@legacy@data@common@ibmras@@8	; ibmras::common::data::legacy::LegacyData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LegacyData@legacy@data@common@ibmras@@8 ; ibmras::common::data::legacy::LegacyData::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_ELegacyData@legacy@data@common@ibmras@@UAEPAXI@Z:PROC ; ibmras::common::data::legacy::LegacyData::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@LegacyData@legacy@data@common@ibmras@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LegacyData@legacy@data@common@ibmras@@8 DD FLAT:??_R0?AVLegacyData@legacy@data@common@ibmras@@@8 ; ibmras::common::data::legacy::LegacyData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LegacyData@legacy@data@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R2LegacyData@legacy@data@common@ibmras@@8
rdata$r	SEGMENT
??_R2LegacyData@legacy@data@common@ibmras@@8 DD FLAT:??_R1A@?0A@EA@LegacyData@legacy@data@common@ibmras@@8 ; ibmras::common::data::legacy::LegacyData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3LegacyData@legacy@data@common@ibmras@@8
rdata$r	SEGMENT
??_R3LegacyData@legacy@data@common@ibmras@@8 DD 00H	; ibmras::common::data::legacy::LegacyData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2LegacyData@legacy@data@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLegacyData@legacy@data@common@ibmras@@@8
_DATA	SEGMENT
??_R0?AVLegacyData@legacy@data@common@ibmras@@@8 DD FLAT:??_7type_info@@6B@ ; ibmras::common::data::legacy::LegacyData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLegacyData@legacy@data@common@ibmras@@', 00H
_DATA	ENDS
;	COMDAT ??_R4LegacyData@legacy@data@common@ibmras@@6B@
rdata$r	SEGMENT
??_R4LegacyData@legacy@data@common@ibmras@@6B@ DD 00H	; ibmras::common::data::legacy::LegacyData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLegacyData@legacy@data@common@ibmras@@@8
	DD	FLAT:??_R3LegacyData@legacy@data@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_7LegacyData@legacy@data@common@ibmras@@6B@
CONST	SEGMENT
??_7LegacyData@legacy@data@common@ibmras@@6B@ DD FLAT:??_R4LegacyData@legacy@data@common@ibmras@@6B@ ; ibmras::common::data::legacy::LegacyData::`vftable'
	DD	FLAT:??_ELegacyData@legacy@data@common@ibmras@@UAEPAXI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z$1
__ehfuncinfo$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv81 = -40						; size = 4
tv73 = -36						; size = 4
_this$ = -32						; size = 4
$T39038 = -28						; size = 4
$T39037 = -24						; size = 4
$T39034 = -20						; size = 4
$T39033 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_eyecatcher$ = 8					; size = 4
_timestamp$ = 12					; size = 8
??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z PROC ; ibmras::common::data::legacy::LegacyData::LegacyData
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LegacyData@legacy@data@common@ibmras@@6B@
; Line 27
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T39034[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T39034[ebp], 0
	je	SHORT $LN3@LegacyData
	mov	ecx, DWORD PTR _eyecatcher$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T39034[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@LegacyData
$LN3@LegacyData:
	mov	DWORD PTR tv73[ebp], 0
$LN4@LegacyData:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T39033[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T39033[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 28
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T39038[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T39038[ebp], 0
	je	SHORT $LN5@LegacyData
	mov	ecx, DWORD PTR $T39038[ebp]
	call	??0?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN6@LegacyData
$LN5@LegacyData:
	mov	DWORD PTR tv81[ebp], 0
$LN6@LegacyData:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T39037[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T39037[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 29
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _timestamp$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _timestamp$[ebp+4]
	mov	DWORD PTR [edx+12], ecx
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z$0:
	mov	eax, DWORD PTR $T39034[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z$1:
	mov	eax, DWORD PTR $T39038[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0LegacyData@legacy@data@common@ibmras@@QAE@PBD_K@Z ENDP ; ibmras::common::data::legacy::LegacyData::LegacyData
PUBLIC	??1LegacyData@legacy@data@common@ibmras@@UAE@XZ	; ibmras::common::data::legacy::LegacyData::~LegacyData
; Function compile flags: /Odtp
;	COMDAT ??_GLegacyData@legacy@data@common@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLegacyData@legacy@data@common@ibmras@@UAEPAXI@Z PROC ; ibmras::common::data::legacy::LegacyData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LegacyData@legacy@data@common@ibmras@@UAE@XZ ; ibmras::common::data::legacy::LegacyData::~LegacyData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLegacyData@legacy@data@common@ibmras@@UAEPAXI@Z ENDP ; ibmras::common::data::legacy::LegacyData::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEPAXI@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::`scalar deleting destructor'
PUBLIC	?clear@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::clear
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv77 = -28						; size = 4
tv71 = -24						; size = 4
_this$ = -20						; size = 4
$T39060 = -16						; size = 4
$T39059 = -12						; size = 4
$T39056 = -8						; size = 4
$T39055 = -4						; size = 4
??1LegacyData@legacy@data@common@ibmras@@UAE@XZ PROC	; ibmras::common::data::legacy::LegacyData::~LegacyData
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LegacyData@legacy@data@common@ibmras@@6B@
; Line 33
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?clear@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::clear
; Line 34
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR $T39056[ebp], eax
	mov	ecx, DWORD PTR $T39056[ebp]
	mov	DWORD PTR $T39055[ebp], ecx
	cmp	DWORD PTR $T39055[ebp], 0
	je	SHORT $LN3@LegacyData@2
	push	1
	mov	ecx, DWORD PTR $T39055[ebp]
	call	??_G?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@LegacyData@2
$LN3@LegacyData@2:
	mov	DWORD PTR tv71[ebp], 0
$LN4@LegacyData@2:
; Line 35
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR $T39060[ebp], eax
	mov	ecx, DWORD PTR $T39060[ebp]
	mov	DWORD PTR $T39059[ebp], ecx
	cmp	DWORD PTR $T39059[ebp], 0
	je	SHORT $LN5@LegacyData@2
	push	1
	mov	ecx, DWORD PTR $T39059[ebp]
	call	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN1@LegacyData@2
$LN5@LegacyData@2:
	mov	DWORD PTR tv77[ebp], 0
$LN1@LegacyData@2:
; Line 36
	mov	esp, ebp
	pop	ebp
	ret	0
??1LegacyData@legacy@data@common@ibmras@@UAE@XZ ENDP	; ibmras::common::data::legacy::LegacyData::~LegacyData
_TEXT	ENDS
PUBLIC	??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
; Function compile flags: /Odtp
;	COMDAT ??_G?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEPAXI@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEPAXI@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXABQAVLegacyDataValue@legacy@data@common@ibmras@@@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::push_back
PUBLIC	?add@LegacyData@legacy@data@common@ibmras@@QAEXPAVLegacyDataValue@2345@@Z ; ibmras::common::data::legacy::LegacyData::add
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
?add@LegacyData@legacy@data@common@ibmras@@QAEXPAVLegacyDataValue@2345@@Z PROC ; ibmras::common::data::legacy::LegacyData::add
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?push_back@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXABQAVLegacyDataValue@legacy@data@common@ibmras@@@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::push_back
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	4
?add@LegacyData@legacy@data@common@ibmras@@QAEXPAVLegacyDataValue@2345@@Z ENDP ; ibmras::common::data::legacy::LegacyData::add
_TEXT	ENDS
PUBLIC	?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEAAPAVLegacyDataValue@legacy@data@common@ibmras@@XZ ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator*
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator!=
PUBLIC	?end@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::end
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator++
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z ; ibmras::common::itoa<unsigned __int64>
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?begin@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::begin
PUBLIC	__$ArrayPad$
PUBLIC	?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ ; ibmras::common::data::legacy::LegacyData::getData
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
xdata$x	SEGMENT
__unwindtable$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ$2
__ehfuncinfo$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv169 = -152						; size = 4
tv172 = -148						; size = 4
tv143 = -144						; size = 4
tv167 = -140						; size = 4
tv68 = -136						; size = 4
_this$ = -132						; size = 4
$T39073 = -128						; size = 4
$T39072 = -124						; size = 4
$T39071 = -120						; size = 4
$T39070 = -116						; size = 4
_sdata$ = -112						; size = 28
_len$ = -84						; size = 4
_i$ = -80						; size = 4
_p$ = -76						; size = 4
$T32267 = -72						; size = 28
$T32246 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ PROC ; ibmras::common::data::legacy::LegacyData::getData
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	lea	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?begin@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::begin
; Line 44
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 45
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 46
	mov	eax, DWORD PTR _DELIMETER
	push	eax
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	lea	ecx, DWORD PTR $T32246[ebp]
	push	ecx
	call	??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z ; ibmras::common::itoa<unsigned __int64>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv68[ebp], eax
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv167[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv167[ebp]
	push	eax
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T32246[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	SHORT $LN4@getData
$LN3@getData:
; Line 48
	lea	ecx, DWORD PTR _i$[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator++
$LN4@getData:
	lea	ecx, DWORD PTR $T39070[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?end@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::end
	push	eax
	lea	ecx, DWORD PTR _i$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@getData
; Line 49
	mov	ecx, DWORD PTR _DELIMETER
	push	ecx
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 50
	lea	ecx, DWORD PTR _i$[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEAAPAVLegacyDataValue@legacy@data@common@ibmras@@XZ ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv143[ebp], edx
	lea	eax, DWORD PTR $T32267[ebp]
	push	eax
	mov	ecx, DWORD PTR tv143[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv143[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv172[ebp], eax
	mov	ecx, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv169[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv169[ebp]
	push	edx
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T32267[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 51
	jmp	$LN3@getData
$LN2@getData:
; Line 52
	mov	eax, DWORD PTR _EOL
	push	eax
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 53
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 54
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T39071[ebp], eax
	mov	edx, DWORD PTR $T39071[ebp]
	mov	DWORD PTR _p$[ebp], edx
; Line 55
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN1@getData
; Line 56
	push	0
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy
; Line 57
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [edx-1], 0
; Line 58
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T39072[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T39072[ebp]
	jmp	SHORT $LN5@getData
$LN1@getData:
; Line 60
	mov	DWORD PTR $T39073[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sdata$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T39073[ebp]
$LN5@getData:
; Line 61
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ$0:
	lea	ecx, DWORD PTR _sdata$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ$1:
	lea	ecx, DWORD PTR $T32246[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ$2:
	lea	ecx, DWORD PTR $T32267[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getData@LegacyData@legacy@data@common@ibmras@@QAEPADXZ ENDP ; ibmras::common::data::legacy::LegacyData::getData
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T39082 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T39082[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 551
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 552
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T39092 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T39092[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 593
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 594
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 595
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 752
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 753
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 754
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 792
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 793
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 794
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 838
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 841
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 490
	push	ebp
	mov	ebp, esp
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
; Line 492
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1495
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 1512
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
; Function compile flags: /Odtp
;	COMDAT ?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Off$ = 16						; size = 4
?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy, COMDAT
; _this$ = ecx
; Line 1557
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1563
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN2@copy
; Line 1564
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN2@copy:
; Line 1565
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@copy
; Line 1566
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN1@copy:
; Line 1567
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1568
	mov	eax, DWORD PTR __Count$[ebp]
$LN4@copy:
; Line 1569
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 496
	push	ebp
	mov	ebp, esp
; Line 497
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 498
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@1@@Z ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
PUBLIC	??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@XZ ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocator<ibmras::common::data::legacy::LegacyDataValue *>
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T39125 = -4						; size = 4
??0?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T39125[ebp], esp
	call	??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@XZ ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocator<ibmras::common::data::legacy::LegacyDataValue *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@1@@Z ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
PUBLIC	?_Tidy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
__ehhandler$??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::end
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV23456@@Z ; std::_Cons_val<std::allocator<ibmras::common::data::legacy::LegacyDataValue *>,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * const &>
PUBLIC	??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z ; std::_Cons_val<std::allocator<ibmras::common::data::legacy::LegacyDataValue *>,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * &>
PUBLIC	?_Orphan_range@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Orphan_range
PUBLIC	?_Reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXI@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Reserve
PUBLIC	?_Inside@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBE_NPBQAVLegacyDataValue@legacy@data@common@ibmras@@@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Inside
PUBLIC	??$addressof@QAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPBQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ; std::addressof<ibmras::common::data::legacy::LegacyDataValue * const>
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXABQAVLegacyDataValue@legacy@data@common@ibmras@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$33940 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXABQAVLegacyDataValue@legacy@data@common@ibmras@@@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPBQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ; std::addressof<ibmras::common::data::legacy::LegacyDataValue * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBE_NPBQAVLegacyDataValue@legacy@data@common@ibmras@@@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@QAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPBQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ; std::addressof<ibmras::common::data::legacy::LegacyDataValue * const>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	mov	DWORD PTR __Idx$33940[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXI@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Reserve
$LN3@push_back:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Idx$33940[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z ; std::_Cons_val<std::allocator<ibmras::common::data::legacy::LegacyDataValue *>,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 988
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 990
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN1@push_back
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXI@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Reserve
$LN1@push_back:
; Line 992
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Orphan_range
; Line 995
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV23456@@Z ; std::_Cons_val<std::allocator<ibmras::common::data::legacy::LegacyDataValue *>,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@push_back:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXABQAVLegacyDataValue@legacy@data@common@ibmras@@@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::push_back
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::erase
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T39148 = -20						; size = 4
$T39147 = -16						; size = 4
$T39146 = -12						; size = 4
$T39145 = -8						; size = 4
$T39144 = -4						; size = 4
?clear@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXXZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::clear, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1218
	lea	eax, DWORD PTR $T39145[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T39144[ebp], ecx
	lea	edx, DWORD PTR $T39147[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T39146[ebp], eax
	mov	ecx, DWORD PTR $T39144[ebp]
	push	ecx
	mov	edx, DWORD PTR $T39146[ebp]
	push	edx
	lea	eax, DWORD PTR $T39148[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::erase
; Line 1219
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXXZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::clear
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEABQAVLegacyDataValue@legacy@data@common@ibmras@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator*
; Function compile flags: /Odtp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEAAPAVLegacyDataValue@legacy@data@common@ibmras@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEAAPAVLegacyDataValue@legacy@data@common@ibmras@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEABQAVLegacyDataValue@legacy@data@common@ibmras@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEAAPAVLegacyDataValue@legacy@data@common@ibmras@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator!=, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 798
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 799
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN4@append
; Line 800
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@append:
; Line 801
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 802
	mov	eax, DWORD PTR __Num$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@append
; Line 803
	mov	ecx, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN3@append:
; Line 804
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append
; Line 805
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:
; Line 807
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], edx
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@append
; Line 810
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 811
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append:
; Line 813
	mov	eax, DWORD PTR _this$[ebp]
$LN6@append:
; Line 814
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 817
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 823
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@append@2
; Line 824
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	SHORT $LN5@append@2
$LN3@append@2:
; Line 825
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append@2
; Line 826
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append@2:
; Line 829
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@append@2
; Line 831
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+16]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 832
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append@2:
; Line 834
	mov	eax, DWORD PTR _this$[ebp]
$LN5@append@2:
; Line 835
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 930
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 931
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$34176 = -4					; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1987
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1988
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 1990
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 1992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$34176[ebp], eax
; Line 1993
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 1994
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$34176[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 1995
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Ptr$34176[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN3@Tidy:
; Line 1997
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; Line 1998
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1999
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv80[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv80[ebp]
; Line 2011
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2019
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2020
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN2@Xran:
; Line 2021
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 454
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 458
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Destroy
PUBLIC	??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00@Z ; std::_Move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *>
PUBLIC	?_Make_iter@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T39179 = -16						; size = 4
__Ptr$35072 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@0@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	mov	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Make_iter
; Line 1192
	mov	edx, DWORD PTR __Last_arg$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Make_iter
; Line 1194
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase
; Line 1207
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00@Z ; std::_Move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$35072[ebp], eax
; Line 1210
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$35072[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Destroy
; Line 1211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$35072[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@erase:
; Line 1213
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T39179[ebp], eax
	mov	ecx, DWORD PTR $T39179[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1214
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@0@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBE_NPBQAVLegacyDataValue@legacy@data@common@ibmras@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBE_NPBQAVLegacyDataValue@legacy@data@common@ibmras@@@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBE_NPBQAVLegacyDataValue@legacy@data@common@ibmras@@@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Inside
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::reserve
PUBLIC	?_Grow_to@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEII@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Grow_to
PUBLIC	?capacity@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::capacity
PUBLIC	?_Xlen@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Xlen
PUBLIC	?max_size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::max_size
PUBLIC	?size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::size
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXI@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Xlen
	jmp	SHORT $LN6@Reserve
$LN4@Reserve:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve
; Line 1296
	jmp	SHORT $LN6@Reserve
$LN2@Reserve:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEII@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::reserve
$LN6@Reserve:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXI@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Reserve
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::deallocate
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXXZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@2
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::deallocate
$LN1@Tidy@2:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXXZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@ABV01@@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocator<ibmras::common::data::legacy::LegacyDataValue *>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@1@@Z PROC ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >, COMDAT
; _this$ = ecx
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@ABV01@@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocator<ibmras::common::data::legacy::LegacyDataValue *>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@1@@Z ENDP ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >, COMDAT
; _this$ = ecx
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::~_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@XZ PROC ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocator<ibmras::common::data::legacy::LegacyDataValue *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@XZ ENDP ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocator<ibmras::common::data::legacy::LegacyDataValue *>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEABQAVLegacyDataValue@legacy@data@common@ibmras@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEABQAVLegacyDataValue@legacy@data@common@ibmras@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator*, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEABQAVLegacyDataValue@legacy@data@common@ibmras@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator++
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Compat
; Function compile flags: /Odtp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator==, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::operator==
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 910
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 916
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign
; Line 917
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:
; Line 919
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 921
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 922
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 924
	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:
; Line 925
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T39208 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; Line 1952
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1953
	mov	BYTE PTR $T39208[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T39208[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 1954
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1958
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1959
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 1960
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 1961
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 1962
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 1963
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 1965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 1966
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 1967
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 1968
	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax
$LN8@Grow:
; Line 1969
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; Line 1972
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1973
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@2
$LN2@Inside@2:
; Line 1974
	xor	al, al
	jmp	SHORT $LN4@Inside@2
; Line 1975
	jmp	SHORT $LN4@Inside@2
$LN3@Inside@2:
; Line 1976
	mov	al, 1
$LN4@Inside@2:
; Line 1977
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2002
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2004
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv80[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv80[ebp]
; Line 2005
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2015
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen:
; Line 2016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV23456@00@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Umove<ibmras::common::data::legacy::LegacyDataValue * *>
PUBLIC	?allocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$35554 = -24					; size = 4
__Ptr$35547 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Xlen
	jmp	$LN7@reserve
$LN5@reserve:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocate
	mov	DWORD PTR __Ptr$35547[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$35547[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV23456@00@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Umove<ibmras::common::data::legacy::LegacyDataValue * *>
	jmp	SHORT $LN8@reserve
__catch$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$35547[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::size
	mov	DWORD PTR __Size$35554[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::deallocate
$LN1@reserve:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$35547[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 770
	mov	ecx, DWORD PTR __Size$35554[ebp]
	mov	edx, DWORD PTR __Ptr$35547[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 771
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$35547[ebp]
	mov	DWORD PTR [edx], eax
$LN7@reserve:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QAEXI@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::reserve
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Make_iter, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 803
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@2@@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Make_iter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QBEIXZ ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QBEIXZ ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::max_size
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEII@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEII@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Grow_to
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXXZ PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@2:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IBEXXZ ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocator<ibmras::common::data::legacy::LegacyDataValue *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocator<ibmras::common::data::legacy::LegacyDataValue *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z PROC ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z ENDP ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::deallocate
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> > >::_Compat
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 893
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@2
; Line 894
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign@2:
; Line 895
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@2
; Line 897
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign@2:
; Line 899
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@2
; Line 900
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign@2
$LN3@assign@2:
; Line 901
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@2
; Line 903
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 904
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign@2:
; Line 906
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign@2:
; Line 907
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; Line 1515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1516
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1517
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv73[ebp]
; Line 1518
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv184 = -36						; size = 4
tv183 = -32						; size = 4
_this$ = -28						; size = 4
__Newres$ = -24						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1920
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 1921
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 1922
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 1924
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy
; Line 1926
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1927
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 1928
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 1931
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1932
	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1933
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1934
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 1935
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1936
	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv184[ebp], eax
	mov	eax, DWORD PTR tv184[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1938
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1939
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1940
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 1941
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 1943
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 1944
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 1945
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1946
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1947
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 1948
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??$_Allocate@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@IPAPAV12345@@Z ; std::_Allocate<ibmras::common::data::legacy::LegacyDataValue *>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z PROC ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@IPAPAV12345@@Z ; std::_Allocate<ibmras::common::data::legacy::LegacyDataValue *>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@I@Z ENDP ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QBEIXZ PROC ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QBEIXZ ENDP ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::max_size
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newsize$35779 = -4					; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1108
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase@2
; Line 1110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@erase@2:
; Line 1111
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase@2
; Line 1112
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN2@erase@2:
; Line 1113
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase@2
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1117
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$35779[ebp], eax
; Line 1118
	mov	ecx, DWORD PTR __Newsize$35779[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@erase@2:
; Line 1120
	mov	eax, DWORD PTR _this$[ebp]
$LN5@erase@2:
; Line 1121
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 516
	push	ebp
	mov	ebp, esp
; Line 517
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 518
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], -1
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@3
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@3
$LN3@max_size@3:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@3:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z:PROC
;	COMDAT xdata$x
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\common\common.h
xdata$x	SEGMENT
__unwindtable$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z$0
__ehfuncinfo$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
_TEXT	SEGMENT
$T39313 = -184						; size = 4
_s$ = -180						; size = 168
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_t$ = 12						; size = 8
??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z PROC ; ibmras::common::itoa<unsigned __int64>, COMDAT
; Line 20
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 172				; 000000acH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T39313[ebp], 0
; Line 21
	push	1
	push	3
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 22
	mov	eax, DWORD PTR _t$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _s$[ebp+16]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_K@Z
; Line 23
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	lea	ecx, DWORD PTR _s$[ebp]
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T39313[ebp]
	or	eax, 1
	mov	DWORD PTR $T39313[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _s$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 24
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z$1:
	mov	eax, DWORD PTR $T39313[ebp]
	and	eax, 1
	je	$LN5@itoa
	and	DWORD PTR $T39313[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@itoa:
	ret	0
__ehhandler$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-176]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$itoa@_K@common@ibmras@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z ENDP ; ibmras::common::itoa<unsigned __int64>
; Function compile flags: /Odtp
;	COMDAT ??$addressof@QAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPBQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPBQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z PROC ; std::addressof<ibmras::common::data::legacy::LegacyDataValue * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@QAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPBQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ENDP ; std::addressof<ibmras::common::data::legacy::LegacyDataValue * const>
_TEXT	ENDS
PUBLIC	??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::construct<ibmras::common::data::legacy::LegacyDataValue * &>
PUBLIC	??$forward@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAAAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV12345@@Z ; std::forward<ibmras::common::data::legacy::LegacyDataValue * &>
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z PROC ; std::_Cons_val<std::allocator<ibmras::common::data::legacy::LegacyDataValue *>,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAAAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV12345@@Z ; std::forward<ibmras::common::data::legacy::LegacyDataValue * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::construct<ibmras::common::data::legacy::LegacyDataValue * &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z ENDP ; std::_Cons_val<std::allocator<ibmras::common::data::legacy::LegacyDataValue *>,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * &>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::construct
PUBLIC	??$forward@ABQAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAABQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ; std::forward<ibmras::common::data::legacy::LegacyDataValue * const &>
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV23456@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV23456@@Z PROC ; std::_Cons_val<std::allocator<ibmras::common::data::legacy::LegacyDataValue *>,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABQAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAABQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ; std::forward<ibmras::common::data::legacy::LegacyDataValue * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@Z ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@std@@YAXAAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV23456@@Z ENDP ; std::_Cons_val<std::allocator<ibmras::common::data::legacy::LegacyDataValue *>,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * const &>
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *>
PUBLIC	??$_Ptr_cat@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00@Z
_TEXT	SEGMENT
$T39329 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00@Z PROC ; std::_Move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2533
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2535
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>
	add	esp, 8
	mov	BYTE PTR $T39329[ebp], al
	movzx	edx, BYTE PTR $T39329[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *>
	add	esp, 16					; 00000010H
; Line 2536
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00@Z ENDP ; std::_Move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z ; std::_Uninitialized_move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV23456@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV23456@00@Z PROC ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Umove<ibmras::common::data::legacy::LegacyDataValue * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z ; std::_Uninitialized_move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$vector@PAVLegacyDataValue@legacy@data@common@ibmras@@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@IAEPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV23456@00@Z ENDP ; std::vector<ibmras::common::data::legacy::LegacyDataValue *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >::_Umove<ibmras::common::data::legacy::LegacyDataValue * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z
_TEXT	SEGMENT
$T39334 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>
	add	esp, 8
	mov	BYTE PTR $T39334[ebp], al
	movzx	edx, BYTE PTR $T39334[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@IPAPAV12345@@Z
_TEXT	SEGMENT
$T39337 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@IPAPAV12345@@Z PROC ; std::_Allocate<ibmras::common::data::legacy::LegacyDataValue *>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T39337[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T39337[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@IPAPAV12345@@Z ENDP ; std::_Allocate<ibmras::common::data::legacy::LegacyDataValue *>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Odtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T39346 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:
; Line 36
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T39346[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T39346[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@2:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
; Function compile flags: /Odtp
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ; std::_Construct<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * const &>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@Z PROC ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ; std::_Construct<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV34567@@Z ENDP ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::construct
_TEXT	ENDS
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
_DATA	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	060H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	050H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	060H
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T39356 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 658
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T39356[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN1@basic_stri
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T39356[ebp]
	or	edx, 1
	mov	DWORD PTR $T39356[ebp], edx
$LN1@basic_stri:
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	edx, DWORD PTR __Mode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Line 659
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T39356[ebp]
	and	eax, 1
	je	$LN5@basic_stri
	and	DWORD PTR $T39356[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	jmp	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
$LN5@basic_stri:
	ret	0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-96]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-96], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	call	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	jmp	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
; Function compile flags: /Odtp
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T39380 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T39380[ebp], 0
; Line 714
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T39380[ebp]
	or	ecx, 1
	mov	DWORD PTR $T39380[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 715
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 77
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv199 = -36						; size = 4
tv195 = -32						; size = 4
_this$ = -28						; size = 4
$T39393 = -24						; size = 4
__Newsize$36885 = -20					; size = 4
__Oldptr$36892 = -16					; size = 4
__Oldsize$36884 = -12					; size = 4
__Inc$36886 = -8					; size = 4
__Newptr$36891 = -4					; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 8
	je	SHORT $LN18@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN18@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+60]
	jae	SHORT $LN18@overflow
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN18@overflow:
; Line 125
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T39393[ebp], eax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T39393[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@overflow
; Line 126
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
	jmp	$LN19@overflow
; Line 127
	jmp	$LN19@overflow
$LN17@overflow:
; Line 128
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN15@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jae	SHORT $LN15@overflow
; Line 130
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	mov	BYTE PTR [eax], bl
; Line 131
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN19@overflow
	jmp	$LN19@overflow
$LN15@overflow:
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 2
	je	SHORT $LN13@overflow
; Line 134
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN19@overflow
; Line 135
	jmp	$LN19@overflow
$LN13@overflow:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN21@overflow
	mov	DWORD PTR tv195[ebp], 0
	jmp	SHORT $LN22@overflow
$LN21@overflow:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	DWORD PTR tv195[ebp], esi
$LN22@overflow:
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR __Oldsize$36884[ebp], eax
; Line 139
	mov	ecx, DWORD PTR __Oldsize$36884[ebp]
	mov	DWORD PTR __Newsize$36885[ebp], ecx
; Line 141
	mov	edx, DWORD PTR __Newsize$36885[ebp]
	shr	edx, 1
	cmp	edx, 32					; 00000020H
	jae	SHORT $LN23@overflow
	mov	DWORD PTR tv199[ebp], 32		; 00000020H
	jmp	SHORT $LN24@overflow
$LN23@overflow:
	mov	eax, DWORD PTR __Newsize$36885[ebp]
	shr	eax, 1
	mov	DWORD PTR tv199[ebp], eax
$LN24@overflow:
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR __Inc$36886[ebp], ecx
$LN11@overflow:
; Line 143
	cmp	DWORD PTR __Inc$36886[ebp], 0
	jbe	SHORT $LN10@overflow
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, DWORD PTR __Inc$36886[ebp]
	cmp	edx, DWORD PTR __Newsize$36885[ebp]
	jae	SHORT $LN10@overflow
; Line 144
	mov	eax, DWORD PTR __Inc$36886[ebp]
	shr	eax, 1
	mov	DWORD PTR __Inc$36886[ebp], eax
	jmp	SHORT $LN11@overflow
$LN10@overflow:
; Line 145
	cmp	DWORD PTR __Inc$36886[ebp], 0
	jne	SHORT $LN9@overflow
; Line 146
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN19@overflow
$LN9@overflow:
; Line 148
	mov	ecx, DWORD PTR __Newsize$36885[ebp]
	add	ecx, DWORD PTR __Inc$36886[ebp]
	mov	DWORD PTR __Newsize$36885[ebp], ecx
; Line 150
	mov	edx, DWORD PTR __Newsize$36885[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Newptr$36891[ebp], eax
; Line 151
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR __Oldptr$36892[ebp], eax
; Line 153
	cmp	DWORD PTR __Oldsize$36884[ebp], 0
	jbe	SHORT $LN8@overflow
; Line 154
	mov	eax, DWORD PTR __Oldsize$36884[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$36892[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$36891[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN8@overflow:
; Line 156
	cmp	DWORD PTR __Oldsize$36884[ebp], 0
	jne	SHORT $LN7@overflow
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newptr$36891[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 159
	mov	edx, DWORD PTR __Newptr$36891[ebp]
	add	edx, DWORD PTR __Newsize$36885[ebp]
	push	edx
	mov	eax, DWORD PTR __Newptr$36891[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
; Line 160
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 4
	je	SHORT $LN6@overflow
; Line 161
	mov	eax, DWORD PTR __Newptr$36891[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Newptr$36891[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 162
	jmp	SHORT $LN5@overflow
$LN6@overflow:
; Line 163
	mov	edx, DWORD PTR __Newptr$36891[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Newptr$36891[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$36891[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN5@overflow:
; Line 165
	jmp	$LN4@overflow
$LN7@overflow:
; Line 167
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	sub	eax, DWORD PTR __Oldptr$36892[ebp]
	add	eax, DWORD PTR __Newptr$36891[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 170
	mov	edx, DWORD PTR __Newptr$36891[ebp]
	add	edx, DWORD PTR __Newsize$36885[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$36892[ebp]
	add	eax, DWORD PTR __Newptr$36891[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$36892[ebp]
	add	eax, DWORD PTR __Newptr$36891[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 4
	je	SHORT $LN3@overflow
; Line 172
	mov	edx, DWORD PTR __Newptr$36891[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Newptr$36891[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 173
	jmp	SHORT $LN4@overflow
$LN3@overflow:
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$36892[ebp]
	add	eax, DWORD PTR __Newptr$36891[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$36891[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN4@overflow:
; Line 179
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 1
	je	SHORT $LN1@overflow
; Line 180
	mov	ecx, DWORD PTR __Oldsize$36884[ebp]
	push	ecx
	mov	edx, DWORD PTR __Oldptr$36892[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@overflow:
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 183
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	mov	BYTE PTR [eax], bl
; Line 184
	mov	eax, DWORD PTR __Meta$[ebp]
$LN19@overflow:
; Line 186
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 541
	push	ebp
	mov	ebp, esp
; Line 542
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 543
	pop	ebp
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 554
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; Line 557
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 558
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	ecx, DWORD PTR __Meta$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN3@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR tv69[ebp], eax
$LN4@not_eof:
	mov	eax, DWORD PTR tv69[ebp]
; Line 559
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; Line 562
	push	ebp
	mov	ebp, esp
; Line 563
	or	eax, -1
; Line 564
	pop	ebp
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T39412 = -12						; size = 4
$T39411 = -5						; size = 1
$T39410 = -4						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN3@pbackfail
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T39410[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T39410[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T39411[ebp], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T39411[ebp]
	push	ecx
	call	?eq@?$char_traits@D@std@@SA_NABD0@Z	; std::char_traits<char>::eq
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 2
	je	SHORT $LN4@pbackfail
$LN3@pbackfail:
; Line 195
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	SHORT $LN5@pbackfail
; Line 196
	jmp	SHORT $LN5@pbackfail
$LN4@pbackfail:
; Line 198
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 199
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T39412[ebp], eax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T39412[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@pbackfail
; Line 200
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	BYTE PTR [eax], bl
$LN1@pbackfail:
; Line 201
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
$LN5@pbackfail:
; Line 203
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 531
	push	ebp
	mov	ebp, esp
; Line 532
	mov	eax, DWORD PTR __Left$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movsx	eax, BYTE PTR [edx]
	xor	edx, edx
	cmp	ecx, eax
	sete	dl
	mov	al, dl
; Line 533
	pop	ebp
	ret	0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
_TEXT	ENDS
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 206
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN8@underflow
; Line 208
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN9@underflow
	jmp	$LN9@underflow
$LN8@underflow:
; Line 209
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jae	SHORT $LN6@underflow
; Line 210
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	jmp	$LN9@underflow
; Line 211
	jmp	$LN9@underflow
$LN6@underflow:
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 4
	jne	SHORT $LN3@underflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN3@underflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	ja	SHORT $LN4@underflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+60], eax
	ja	SHORT $LN4@underflow
$LN3@underflow:
; Line 213
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	SHORT $LN9@underflow
; Line 214
	jmp	SHORT $LN9@underflow
$LN4@underflow:
; Line 216
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN1@underflow
; Line 217
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN1@underflow:
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 219
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
$LN9@underflow:
; Line 221
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 546
	push	ebp
	mov	ebp, esp
; Line 547
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 548
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
; Function compile flags: /Odtp
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv411 = -20						; size = 8
tv344 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 227
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN21@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN21@seekoff
; Line 228
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN21@seekoff:
; Line 230
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 1
	je	$LN20@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN20@seekoff
; Line 232
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN19@seekoff
; Line 233
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 234
	jmp	SHORT $LN18@seekoff
$LN19@seekoff:
; Line 235
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN17@seekoff
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	jne	SHORT $LN17@seekoff
; Line 236
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN18@seekoff
$LN17@seekoff:
; Line 237
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN18@seekoff
; Line 238
	mov	ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Off$[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR __Off$[ebp+4], eax
$LN18@seekoff:
; Line 240
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN14@seekoff
	jg	SHORT $LN24@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN14@seekoff
$LN24@seekoff:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv344[ebp], eax
	mov	DWORD PTR tv344[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv344[ebp+4]
	jg	SHORT $LN14@seekoff
	jl	SHORT $LN25@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv344[ebp]
	ja	SHORT $LN14@seekoff
$LN25@seekoff:
; Line 242
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 243
	mov	edx, DWORD PTR __Which$[ebp]
	and	edx, 2
	je	SHORT $LN13@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN13@seekoff
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN13@seekoff:
; Line 247
	jmp	SHORT $LN12@seekoff
$LN14@seekoff:
; Line 248
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
	jmp	$LN11@seekoff
$LN20@seekoff:
; Line 250
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	je	$LN10@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN10@seekoff
; Line 252
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN9@seekoff
; Line 253
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN8@seekoff
$LN9@seekoff:
; Line 254
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN7@seekoff
; Line 255
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN8@seekoff
$LN7@seekoff:
; Line 256
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN8@seekoff
; Line 257
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 259
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	SHORT $LN4@seekoff
	jg	SHORT $LN26@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN4@seekoff
$LN26@seekoff:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv411[ebp], eax
	mov	DWORD PTR tv411[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv411[ebp+4]
	jg	SHORT $LN4@seekoff
	jl	SHORT $LN27@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv411[ebp]
	ja	SHORT $LN4@seekoff
$LN27@seekoff:
; Line 261
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 262
	jmp	SHORT $LN3@seekoff
$LN4@seekoff:
; Line 263
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN3@seekoff:
	jmp	SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
	mov	edx, DWORD PTR __Off$[ebp]
	or	edx, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN11@seekoff
; Line 273
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 274
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 275
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
PUBLIC	?_Stz@?$fpos@H@std@@0HB				; std::fpos<int>::_Stz
;	COMDAT ?_Stz@?$fpos@H@std@@0HB
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
CONST	SEGMENT
?_Stz@?$fpos@H@std@@0HB DD 00H				; std::fpos<int>::_Stz
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?_Stz@?$fpos@H@std@@0HB	; std::fpos<int>::_Stz
	mov	DWORD PTR [ecx+16], edx
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
_TEXT	ENDS
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
; Function compile flags: /Odtp
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv312 = -32						; size = 8
tv272 = -24						; size = 8
tv253 = -16						; size = 4
_this$ = -12						; size = 4
__Off$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	lea	ecx, DWORD PTR __Ptr$[ebp]
	call	??B?$fpos@H@std@@QBE_JXZ		; std::fpos<int>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 281
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN12@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN12@seekpos
; Line 282
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN12@seekpos:
; Line 284
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	DWORD PTR tv253[ebp], eax
	mov	ecx, DWORD PTR tv253[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN11@seekpos
	mov	eax, DWORD PTR tv253[ebp]
	mov	ecx, DWORD PTR __Off$[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN11@seekpos
	jmp	$LN10@seekpos
$LN11@seekpos:
; Line 286
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 1
	je	$LN9@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN9@seekpos
; Line 288
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN8@seekpos
	jg	SHORT $LN15@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN8@seekpos
$LN15@seekpos:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv272[ebp], eax
	mov	DWORD PTR tv272[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv272[ebp+4]
	jg	SHORT $LN8@seekpos
	jl	SHORT $LN16@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv272[ebp]
	ja	SHORT $LN8@seekpos
$LN16@seekpos:
; Line 290
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 291
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	je	SHORT $LN7@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN7@seekpos
; Line 293
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN7@seekpos:
; Line 295
	jmp	SHORT $LN6@seekpos
$LN8@seekpos:
; Line 296
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
	jmp	$LN10@seekpos
$LN9@seekpos:
; Line 298
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	$LN4@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN4@seekpos
; Line 300
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	SHORT $LN3@seekpos
	jg	SHORT $LN17@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN3@seekpos
$LN17@seekpos:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv312[ebp], eax
	mov	DWORD PTR tv312[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv312[ebp+4]
	jg	SHORT $LN3@seekpos
	jl	SHORT $LN18@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv312[ebp]
	ja	SHORT $LN3@seekpos
$LN18@seekpos:
; Line 302
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 303
	jmp	SHORT $LN2@seekpos
$LN3@seekpos:
; Line 304
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekpos:
; Line 306
	jmp	SHORT $LN10@seekpos
$LN4@seekpos:
; Line 307
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN10@seekpos:
; Line 308
	mov	edx, DWORD PTR __Off$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 309
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 96					; 00000060H
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 96					; 00000060H
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
; Line 66
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
_TEXT	ENDS
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 29
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 30
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3
__ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv91 = -112						; size = 4
_this$ = -108						; size = 4
$T39455 = -104						; size = 4
__Nul$37031 = -100					; size = 28
__Str$37029 = -72					; size = 28
__Str$37026 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T39455[ebp], 0
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 2
	jne	$LN4@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN4@str
; Line 97
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+60], eax
	jae	SHORT $LN7@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@str
$LN7@str:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR tv91[ebp], ecx
$LN8@str:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR tv91[ebp]
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	lea	ecx, DWORD PTR __Str$37026[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 98
	lea	eax, DWORD PTR __Str$37026[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T39455[ebp]
	or	ecx, 1
	mov	DWORD PTR $T39455[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Str$37026[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@str
	jmp	$LN5@str
$LN4@str:
; Line 100
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 4
	jne	SHORT $LN2@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN2@str
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	lea	ecx, DWORD PTR __Str$37029[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 103
	lea	ecx, DWORD PTR __Str$37029[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T39455[ebp]
	or	edx, 1
	mov	DWORD PTR $T39455[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Str$37029[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@str
; Line 105
	jmp	SHORT $LN5@str
$LN2@str:
; Line 107
	lea	ecx, DWORD PTR __Nul$37031[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 108
	lea	eax, DWORD PTR __Nul$37031[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T39455[ebp]
	or	ecx, 1
	mov	DWORD PTR $T39455[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Nul$37031[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0:
	lea	ecx, DWORD PTR __Str$37026[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$1:
	mov	eax, DWORD PTR $T39455[ebp]
	and	eax, 1
	je	$LN11@str
	and	DWORD PTR $T39455[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@str:
	ret	0
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2:
	lea	ecx, DWORD PTR __Str$37029[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3:
	lea	ecx, DWORD PTR __Nul$37031[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T39467 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	mov	ecx, esp
	mov	DWORD PTR $T39467[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 703
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 704
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 705
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T39478 = -2						; size = 1
$T39477 = -1						; size = 1
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 714
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@assign@3
; Line 716
	jmp	$LN5@assign@3
$LN6@assign@3:
; Line 717
	lea	ecx, DWORD PTR $T39477[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T39478[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	call	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator!=<char,char>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@assign@3
	mov	ecx, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN4@assign@3
; Line 718
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 719
	jmp	SHORT $LN5@assign@3
$LN4@assign@3:
; Line 721
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 722
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jae	SHORT $LN2@assign@3
; Line 724
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign@3
$LN2@assign@3:
; Line 727
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 728
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
$LN1@assign@3:
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
; Line 731
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 733
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
$LN5@assign@3:
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
; Line 736
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 762
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 763
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 764
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx
; Line 1905
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1906
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1907
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 886
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 888
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
; Function compile flags: /Odtp
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator==<char,char>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 340
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 341
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 1
	je	SHORT $LN1@Tidy@3
; Line 344
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN4@Tidy@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@Tidy@3
$LN4@Tidy@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv88[ebp], eax
$LN5@Tidy@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR tv88[ebp]
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@Tidy@3:
; Line 345
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 346
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
; Line 348
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 349
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T39497 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 578
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T39497[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 579
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 580
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 581
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv137 = -12						; size = 4
_this$ = -8						; size = 4
__Pnew$37099 = -4					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
; Line 315
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [ecx+64], edx
; Line 318
	cmp	DWORD PTR __Count$[ebp], 0
	je	$LN5@Init
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 6
	cmp	ecx, 6
	je	$LN5@Init
; Line 320
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Pnew$37099[ebp], eax
; Line 321
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$37099[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 322
	mov	eax, DWORD PTR __Pnew$37099[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 324
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 4
	jne	SHORT $LN3@Init
; Line 326
	mov	ecx, DWORD PTR __Pnew$37099[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$37099[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$37099[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN3@Init:
; Line 327
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 2
	jne	SHORT $LN2@Init
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 16					; 00000010H
	je	SHORT $LN7@Init
	mov	edx, DWORD PTR __Pnew$37099[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN8@Init
$LN7@Init:
	mov	eax, DWORD PTR __Pnew$37099[ebp]
	mov	DWORD PTR tv137[ebp], eax
$LN8@Init:
	mov	ecx, DWORD PTR __Pnew$37099[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$37099[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN2@Init
; Line 333
	mov	ecx, DWORD PTR __Pnew$37099[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Pnew$37099[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN2@Init:
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN5@Init:
; Line 337
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__State$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 358
	mov	DWORD PTR __State$[ebp], 0
; Line 359
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	jne	SHORT $LN4@Getstate
; Line 360
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
$LN4@Getstate:
; Line 361
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	jne	SHORT $LN3@Getstate
; Line 362
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 363
	mov	ecx, DWORD PTR __Mode$[ebp]
	and	ecx, 8
	je	SHORT $LN2@Getstate
; Line 364
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 8
	mov	DWORD PTR __State$[ebp], edx
$LN2@Getstate:
; Line 365
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 4
	je	SHORT $LN1@Getstate
; Line 366
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 16					; 00000010H
	mov	DWORD PTR __State$[ebp], ecx
$LN1@Getstate:
; Line 367
	mov	eax, DWORD PTR __State$[ebp]
; Line 368
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAAAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV12345@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAAAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV12345@@Z PROC ; std::forward<ibmras::common::data::legacy::LegacyDataValue * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAAAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV12345@@Z ENDP ; std::forward<ibmras::common::data::legacy::LegacyDataValue * &>
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z$0
__ehfuncinfo$??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
_this$ = -24						; size = 4
$T39516 = -20						; size = 4
$T39515 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z PROC ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::construct<ibmras::common::data::legacy::LegacyDataValue * &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T39516[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T39516[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAAAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV12345@@Z ; std::forward<ibmras::common::data::legacy::LegacyDataValue * &>
	add	esp, 4
	mov	edx, DWORD PTR $T39516[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T39516[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T39515[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T39516[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAPAVLegacyDataValue@legacy@data@common@ibmras@@@?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@QAEXPAPAVLegacyDataValue@legacy@data@common@ibmras@@AAPAV23456@@Z ENDP ; std::allocator<ibmras::common::data::legacy::LegacyDataValue *>::construct<ibmras::common::data::legacy::LegacyDataValue * &>
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
; Line 62
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABQAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAABQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAABQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z PROC ; std::forward<ibmras::common::data::legacy::LegacyDataValue * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABQAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAABQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ENDP ; std::forward<ibmras::common::data::legacy::LegacyDataValue * const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z PROC ; std::_Ptr_cat<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 516
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 518
	mov	al, BYTE PTR __Cat$[ebp]
; Line 519
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ENDP ; std::_Ptr_cat<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *>, COMDAT
; Line 2522
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2523
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 2525
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 2526
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
; Line 2527
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@PAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>
PUBLIC	??$_Val_type@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@Z ; std::_Val_type<ibmras::common::data::legacy::LegacyDataValue * *>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z
_TEXT	SEGMENT
$T39540 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z PROC ; std::_Uninitialized_move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLegacyDataValue@legacy@data@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>
	add	esp, 8
	mov	BYTE PTR $T39540[ebp], al
	movzx	edx, BYTE PTR $T39540[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@Z ; std::_Val_type<ibmras::common::data::legacy::LegacyDataValue * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@PAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@@Z ENDP ; std::_Uninitialized_move<ibmras::common::data::legacy::LegacyDataValue * *,ibmras::common::data::legacy::LegacyDataValue * *,std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 104
	push	ebp
	mov	ebp, esp
; Line 105
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@std@@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@0AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ibmras::common::data::legacy::LegacyDataValue *> >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z$0
__ehfuncinfo$??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T39546 = -24						; size = 4
$T39545 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z PROC ; std::_Construct<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T39546[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T39546[ebp], 0
	je	SHORT $LN3@Construct
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABQAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAABQAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ; std::forward<ibmras::common::data::legacy::LegacyDataValue * const &>
	add	esp, 4
	mov	ecx, DWORD PTR $T39546[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T39546[ebp]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@Construct
$LN3@Construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@Construct:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T39545[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T39546[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@PAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@std@@YAXPAPAVLegacyDataValue@legacy@data@common@ibmras@@ABQAV12345@@Z ENDP ; std::_Construct<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue * const &>
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@Z PROC ; std::_Val_type<ibmras::common::data::legacy::LegacyDataValue * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 789
	push	ebp
	mov	ebp, esp
; Line 790
	xor	eax, eax
; Line 791
	pop	ebp
	ret	0
??$_Val_type@PAPAVLegacyDataValue@legacy@data@common@ibmras@@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@@Z ENDP ; std::_Val_type<ibmras::common::data::legacy::LegacyDataValue * *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Uninit_move@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@PAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@PAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 456
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 459
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 461
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 462
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAVLegacyDataValue@legacy@data@common@ibmras@@PAV12345@PAV12345@@std@@YAPAPAVLegacyDataValue@legacy@data@common@ibmras@@PAPAV12345@00AAV?$allocator@PAVLegacyDataValue@legacy@data@common@ibmras@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *,ibmras::common::data::legacy::LegacyDataValue *>
_TEXT	ENDS
END
