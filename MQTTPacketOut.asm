; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\Paho\org.eclipse.paho.mqtt.c\src\MQTTPacketOut.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_Log_levels:DWORD
$SG84330 DB	'MQTTPacket_send_connect', 00H
$SG84334 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84336 DB	'MQIsdp', 00H
	ORG $+1
$SG84340 DB	'MQTT', 00H
	ORG $+3
$SG84352 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84353 DB	'MQTTPacket_send_connect', 00H
$SG84363 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84365 DB	'MQTTPacket_connack', 00H
	ORG $+1
$SG84367 DB	'MQTTPacket_connack', 00H
	ORG $+1
$SG84376 DB	'MQTTPacket_send_pingreq', 00H
$SG84379 DB	'MQTTPacket_send_pingreq', 00H
$SG84402 DB	'MQTTPacket_send_subscribe', 00H
	ORG $+2
$SG84407 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84416 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84417 DB	'MQTTPacket_send_subscribe', 00H
	ORG $+2
$SG84427 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84429 DB	'MQTTPacket_suback', 00H
	ORG $+2
$SG84436 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84440 DB	'MQTTPacket_suback', 00H
	ORG $+2
$SG84459 DB	'MQTTPacket_send_unsubscribe', 00H
$SG84464 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84472 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTPacketOut.c', 00H
$SG84473 DB	'MQTTPacket_send_unsubscribe', 00H
_DATA	ENDS
PUBLIC	_MQTTPacket_send_connect
EXTRN	_StackTrace_exit:PROC
EXTRN	_myfree:PROC
EXTRN	_Log:PROC
EXTRN	_MQTTPacket_send:PROC
EXTRN	_writeInt:PROC
EXTRN	_writeChar:PROC
EXTRN	_writeUTF:PROC
EXTRN	_mymalloc:PROC
EXTRN	_strlen:PROC
EXTRN	_StackTrace_entry:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_packet$ = -48						; size = 32
_buf$ = -16						; size = 4
_len$ = -12						; size = 4
_ptr$ = -8						; size = 4
_rc$ = -4						; size = 4
_client$ = 8						; size = 4
_MQTTVersion$ = 12					; size = 4
_MQTTPacket_send_connect PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttpacketout.c
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
; Line 48
	mov	DWORD PTR _rc$[ebp], -1
; Line 50
	push	3
	push	50					; 00000032H
	push	OFFSET $SG84330
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 51
	mov	BYTE PTR _packet$[ebp], 0
; Line 52
	mov	eax, DWORD PTR _packet$[ebp]
	and	eax, -241				; ffffff0fH
	or	eax, 16					; 00000010H
	mov	DWORD PTR _packet$[ebp], eax
; Line 54
	xor	ebx, ebx
	cmp	DWORD PTR _MQTTVersion$[ebp], 3
	sete	bl
	lea	ebx, DWORD PTR [ebx+ebx+10]
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR [ebx+eax+2]
	mov	DWORD PTR _len$[ebp], eax
; Line 55
	mov	ecx, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN14@MQTTPacket
; Line 56
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _len$[ebp]
	lea	edx, DWORD PTR [eax+esi+4]
	mov	DWORD PTR _len$[ebp], edx
$LN14@MQTTPacket:
; Line 57
	mov	eax, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN13@MQTTPacket
; Line 58
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _len$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	mov	DWORD PTR _len$[ebp], edx
$LN13@MQTTPacket:
; Line 59
	mov	eax, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN12@MQTTPacket
; Line 60
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _len$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	mov	DWORD PTR _len$[ebp], edx
$LN12@MQTTPacket:
; Line 62
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	push	62					; 0000003eH
	push	OFFSET $SG84334
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$[ebp], eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 63
	cmp	DWORD PTR _MQTTVersion$[ebp], 3
	jne	SHORT $LN11@MQTTPacket
; Line 65
	push	OFFSET $SG84336
	lea	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_writeUTF
	add	esp, 8
; Line 66
	push	3
	lea	eax, DWORD PTR _ptr$[ebp]
	push	eax
	call	_writeChar
	add	esp, 8
	jmp	SHORT $LN10@MQTTPacket
$LN11@MQTTPacket:
; Line 68
	cmp	DWORD PTR _MQTTVersion$[ebp], 4
	jne	SHORT $LN9@MQTTPacket
; Line 70
	push	OFFSET $SG84340
	lea	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	call	_writeUTF
	add	esp, 8
; Line 71
	push	4
	lea	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_writeChar
	add	esp, 8
; Line 73
	jmp	SHORT $LN10@MQTTPacket
$LN9@MQTTPacket:
; Line 74
	jmp	$exit$84343
$LN10@MQTTPacket:
; Line 76
	mov	BYTE PTR _packet$[ebp+4], 0
; Line 77
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 1
	and	ecx, 1
	shl	ecx, 1
	mov	edx, DWORD PTR _packet$[ebp+4]
	and	edx, -3					; fffffffdH
	or	edx, ecx
	mov	DWORD PTR _packet$[ebp+4], edx
; Line 78
	mov	eax, DWORD PTR _client$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+56], 0
	setne	cl
	and	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _packet$[ebp+4]
	and	edx, -5					; fffffffbH
	or	edx, ecx
	mov	DWORD PTR _packet$[ebp+4], edx
; Line 79
	mov	eax, DWORD PTR _packet$[ebp+4]
	shr	eax, 2
	and	eax, 1
	je	SHORT $LN7@MQTTPacket
; Line 81
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR [edx+12]
	and	eax, 3
	shl	eax, 3
	mov	ecx, DWORD PTR _packet$[ebp+4]
	and	ecx, -25				; ffffffe7H
	or	ecx, eax
	mov	DWORD PTR _packet$[ebp+4], ecx
; Line 82
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 1
	shl	ecx, 5
	mov	edx, DWORD PTR _packet$[ebp+4]
	and	edx, -33				; ffffffdfH
	or	edx, ecx
	mov	DWORD PTR _packet$[ebp+4], edx
$LN7@MQTTPacket:
; Line 85
	mov	eax, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN6@MQTTPacket
; Line 86
	mov	ecx, DWORD PTR _packet$[ebp+4]
	or	ecx, 128				; 00000080H
	mov	DWORD PTR _packet$[ebp+4], ecx
$LN6@MQTTPacket:
; Line 87
	mov	edx, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN5@MQTTPacket
; Line 88
	mov	eax, DWORD PTR _packet$[ebp+4]
	or	eax, 64					; 00000040H
	mov	DWORD PTR _packet$[ebp+4], eax
$LN5@MQTTPacket:
; Line 90
	movzx	ecx, BYTE PTR _packet$[ebp+4]
	push	ecx
	lea	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_writeChar
	add	esp, 8
; Line 91
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	lea	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_writeInt
	add	esp, 8
; Line 92
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_writeUTF
	add	esp, 8
; Line 93
	mov	eax, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN4@MQTTPacket
; Line 95
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	call	_writeUTF
	add	esp, 8
; Line 96
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_writeUTF
	add	esp, 8
$LN4@MQTTPacket:
; Line 98
	mov	eax, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@MQTTPacket
; Line 99
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR _ptr$[ebp]
	push	eax
	call	_writeUTF
	add	esp, 8
$LN3@MQTTPacket:
; Line 100
	mov	ecx, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN2@MQTTPacket
; Line 101
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	call	_writeUTF
	add	esp, 8
$LN2@MQTTPacket:
; Line 103
	push	1
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _packet$[ebp]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	_MQTTPacket_send
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax
; Line 104
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, 1
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	push	0
	push	0
	push	4
	call	_Log
	add	esp, 28					; 0000001cH
$exit$84343:
; Line 106
	cmp	DWORD PTR _rc$[ebp], -22		; ffffffeaH
	je	SHORT $LN1@MQTTPacket
; Line 107
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	107					; 0000006bH
	push	OFFSET $SG84352
	call	_myfree
	add	esp, 12					; 0000000cH
$LN1@MQTTPacket:
; Line 108
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	108					; 0000006cH
	push	OFFSET $SG84353
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 109
	mov	eax, DWORD PTR _rc$[ebp]
; Line 110
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTPacket_send_connect ENDP
_TEXT	ENDS
PUBLIC	_MQTTPacket_connack
EXTRN	_readChar:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_curdata$ = -8						; size = 4
_pack$ = -4						; size = 4
_aHeader$ = 8						; size = 1
_data$ = 12						; size = 4
_datalen$ = 16						; size = 4
_MQTTPacket_connack PROC
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 122
	push	12					; 0000000cH
	push	122					; 0000007aH
	push	OFFSET $SG84363
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pack$[ebp], eax
; Line 123
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _curdata$[ebp], eax
; Line 125
	push	3
	push	125					; 0000007dH
	push	OFFSET $SG84365
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 126
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	dl, BYTE PTR _aHeader$[ebp]
	mov	BYTE PTR [ecx], dl
; Line 127
	lea	eax, DWORD PTR _curdata$[ebp]
	push	eax
	call	_readChar
	add	esp, 4
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 128
	lea	edx, DWORD PTR _curdata$[ebp]
	push	edx
	call	_readChar
	add	esp, 4
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	BYTE PTR [ecx+8], al
; Line 129
	push	3
	push	0
	push	129					; 00000081H
	push	OFFSET $SG84367
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 130
	mov	eax, DWORD PTR _pack$[ebp]
; Line 131
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTPacket_connack ENDP
_TEXT	ENDS
PUBLIC	_MQTTPacket_send_pingreq
; Function compile flags: /Odtp
_TEXT	SEGMENT
_header$ = -12						; size = 4
_rc$ = -8						; size = 4
_buflen$ = -4						; size = 4
_net$ = 8						; size = 4
_clientID$ = 12						; size = 4
_MQTTPacket_send_pingreq PROC
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 143
	mov	DWORD PTR _rc$[ebp], 0
; Line 144
	mov	DWORD PTR _buflen$[ebp], 0
; Line 146
	push	3
	push	146					; 00000092H
	push	OFFSET $SG84376
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 147
	mov	BYTE PTR _header$[ebp], 0
; Line 148
	mov	eax, DWORD PTR _header$[ebp]
	and	eax, -241				; ffffff0fH
	or	eax, 192				; 000000c0H
	mov	DWORD PTR _header$[ebp], eax
; Line 149
	push	0
	mov	ecx, DWORD PTR _buflen$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _header$[ebp]
	push	edx
	mov	eax, DWORD PTR _net$[ebp]
	push	eax
	call	_MQTTPacket_send
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax
; Line 150
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _clientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _net$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	push	20					; 00000014H
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 151
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	151					; 00000097H
	push	OFFSET $SG84379
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 152
	mov	eax, DWORD PTR _rc$[ebp]
; Line 153
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTPacket_send_pingreq ENDP
_TEXT	ENDS
PUBLIC	_MQTTPacket_send_subscribe
EXTRN	_ListNextElement:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_header$ = -28						; size = 4
_data$ = -24						; size = 4
_datalen$ = -20						; size = 4
_ptr$ = -16						; size = 4
_qosElem$ = -12						; size = 4
_elem$ = -8						; size = 4
_rc$ = -4						; size = 4
_topics$ = 8						; size = 4
_qoss$ = 12						; size = 4
_msgid$ = 16						; size = 4
_dup$ = 20						; size = 4
_net$ = 24						; size = 4
_clientID$ = 28						; size = 4
_MQTTPacket_send_subscribe PROC
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 170
	mov	DWORD PTR _rc$[ebp], -1
; Line 171
	mov	DWORD PTR _elem$[ebp], 0
	mov	DWORD PTR _qosElem$[ebp], 0
; Line 174
	push	3
	push	174					; 000000aeH
	push	OFFSET $SG84402
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 175
	mov	eax, DWORD PTR _header$[ebp]
	and	eax, -241				; ffffff0fH
	or	eax, 128				; 00000080H
	mov	DWORD PTR _header$[ebp], eax
; Line 176
	mov	ecx, DWORD PTR _dup$[ebp]
	and	ecx, 1
	shl	ecx, 3
	mov	edx, DWORD PTR _header$[ebp]
	and	edx, -9					; fffffff7H
	or	edx, ecx
	mov	DWORD PTR _header$[ebp], edx
; Line 177
	mov	eax, DWORD PTR _header$[ebp]
	and	eax, -7					; fffffff9H
	or	eax, 2
	mov	DWORD PTR _header$[ebp], eax
; Line 178
	mov	ecx, DWORD PTR _header$[ebp]
	and	ecx, -2					; fffffffeH
	mov	DWORD PTR _header$[ebp], ecx
; Line 180
	mov	edx, DWORD PTR _topics$[ebp]
	mov	eax, DWORD PTR [edx+12]
	imul	eax, 3
	add	eax, 2
	mov	DWORD PTR _datalen$[ebp], eax
$LN5@MQTTPacket@2:
; Line 181
	lea	ecx, DWORD PTR _elem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _topics$[ebp]
	push	edx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@MQTTPacket@2
; Line 182
	mov	eax, DWORD PTR _elem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR _datalen$[ebp], eax
	jmp	SHORT $LN5@MQTTPacket@2
$LN4@MQTTPacket@2:
; Line 183
	mov	edx, DWORD PTR _datalen$[ebp]
	push	edx
	push	183					; 000000b7H
	push	OFFSET $SG84407
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _data$[ebp], eax
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax
; Line 185
	mov	ecx, DWORD PTR _msgid$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_writeInt
	add	esp, 8
; Line 186
	mov	DWORD PTR _elem$[ebp], 0
$LN3@MQTTPacket@2:
; Line 187
	lea	eax, DWORD PTR _elem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _topics$[ebp]
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@MQTTPacket@2
; Line 189
	lea	edx, DWORD PTR _qosElem$[ebp]
	push	edx
	mov	eax, DWORD PTR _qoss$[ebp]
	push	eax
	call	_ListNextElement
	add	esp, 8
; Line 190
	mov	ecx, DWORD PTR _elem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR _ptr$[ebp]
	push	eax
	call	_writeUTF
	add	esp, 8
; Line 191
	mov	ecx, DWORD PTR _qosElem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movzx	eax, BYTE PTR [edx]
	push	eax
	lea	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	call	_writeChar
	add	esp, 8
; Line 192
	jmp	SHORT $LN3@MQTTPacket@2
$LN2@MQTTPacket@2:
; Line 193
	push	1
	mov	edx, DWORD PTR _datalen$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _header$[ebp]
	push	ecx
	mov	edx, DWORD PTR _net$[ebp]
	push	edx
	call	_MQTTPacket_send
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax
; Line 194
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msgid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _clientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _net$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	push	22					; 00000016H
	push	4
	call	_Log
	add	esp, 28					; 0000001cH
; Line 195
	cmp	DWORD PTR _rc$[ebp], -22		; ffffffeaH
	je	SHORT $LN1@MQTTPacket@2
; Line 196
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	push	196					; 000000c4H
	push	OFFSET $SG84416
	call	_myfree
	add	esp, 12					; 0000000cH
$LN1@MQTTPacket@2:
; Line 197
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	197					; 000000c5H
	push	OFFSET $SG84417
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 198
	mov	eax, DWORD PTR _rc$[ebp]
; Line 199
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTPacket_send_subscribe ENDP
_TEXT	ENDS
PUBLIC	_MQTTPacket_suback
EXTRN	_ListAppend:PROC
EXTRN	_ListInitialize:PROC
EXTRN	_readInt:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_newint$84434 = -12					; size = 4
_curdata$ = -8						; size = 4
_pack$ = -4						; size = 4
_aHeader$ = 8						; size = 1
_data$ = 12						; size = 4
_datalen$ = 16						; size = 4
_MQTTPacket_suback PROC
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 211
	push	12					; 0000000cH
	push	211					; 000000d3H
	push	OFFSET $SG84427
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pack$[ebp], eax
; Line 212
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _curdata$[ebp], eax
; Line 214
	push	3
	push	214					; 000000d6H
	push	OFFSET $SG84429
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 215
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	dl, BYTE PTR _aHeader$[ebp]
	mov	BYTE PTR [ecx], dl
; Line 216
	lea	eax, DWORD PTR _curdata$[ebp]
	push	eax
	call	_readInt
	add	esp, 4
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 217
	call	_ListInitialize
	mov	edx, DWORD PTR _pack$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN2@MQTTPacket@3:
; Line 218
	mov	eax, DWORD PTR _curdata$[ebp]
	sub	eax, DWORD PTR _data$[ebp]
	cmp	eax, DWORD PTR _datalen$[ebp]
	jae	SHORT $LN1@MQTTPacket@3
; Line 221
	push	4
	push	221					; 000000ddH
	push	OFFSET $SG84436
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _newint$84434[ebp], eax
; Line 222
	lea	ecx, DWORD PTR _curdata$[ebp]
	push	ecx
	call	_readChar
	add	esp, 4
	movzx	edx, al
	mov	eax, DWORD PTR _newint$84434[ebp]
	mov	DWORD PTR [eax], edx
; Line 223
	push	4
	mov	ecx, DWORD PTR _newint$84434[ebp]
	push	ecx
	mov	edx, DWORD PTR _pack$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 224
	jmp	SHORT $LN2@MQTTPacket@3
$LN1@MQTTPacket@3:
; Line 225
	push	3
	push	0
	push	225					; 000000e1H
	push	OFFSET $SG84440
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 226
	mov	eax, DWORD PTR _pack$[ebp]
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTPacket_suback ENDP
_TEXT	ENDS
PUBLIC	_MQTTPacket_send_unsubscribe
; Function compile flags: /Odtp
_TEXT	SEGMENT
_header$ = -24						; size = 4
_data$ = -20						; size = 4
_datalen$ = -16						; size = 4
_ptr$ = -12						; size = 4
_elem$ = -8						; size = 4
_rc$ = -4						; size = 4
_topics$ = 8						; size = 4
_msgid$ = 12						; size = 4
_dup$ = 16						; size = 4
_net$ = 20						; size = 4
_clientID$ = 24						; size = 4
_MQTTPacket_send_unsubscribe PROC
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 243
	mov	DWORD PTR _rc$[ebp], -1
; Line 244
	mov	DWORD PTR _elem$[ebp], 0
; Line 247
	push	3
	push	247					; 000000f7H
	push	OFFSET $SG84459
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 248
	mov	eax, DWORD PTR _header$[ebp]
	and	eax, -241				; ffffff0fH
	or	eax, 160				; 000000a0H
	mov	DWORD PTR _header$[ebp], eax
; Line 249
	mov	ecx, DWORD PTR _dup$[ebp]
	and	ecx, 1
	shl	ecx, 3
	mov	edx, DWORD PTR _header$[ebp]
	and	edx, -9					; fffffff7H
	or	edx, ecx
	mov	DWORD PTR _header$[ebp], edx
; Line 250
	mov	eax, DWORD PTR _header$[ebp]
	and	eax, -7					; fffffff9H
	or	eax, 2
	mov	DWORD PTR _header$[ebp], eax
; Line 251
	mov	ecx, DWORD PTR _header$[ebp]
	and	ecx, -2					; fffffffeH
	mov	DWORD PTR _header$[ebp], ecx
; Line 253
	mov	edx, DWORD PTR _topics$[ebp]
	mov	eax, DWORD PTR [edx+12]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR _datalen$[ebp], ecx
$LN5@MQTTPacket@4:
; Line 254
	lea	edx, DWORD PTR _elem$[ebp]
	push	edx
	mov	eax, DWORD PTR _topics$[ebp]
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@MQTTPacket@4
; Line 255
	mov	ecx, DWORD PTR _elem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR _datalen$[ebp], eax
	jmp	SHORT $LN5@MQTTPacket@4
$LN4@MQTTPacket@4:
; Line 256
	mov	eax, DWORD PTR _datalen$[ebp]
	push	eax
	push	256					; 00000100H
	push	OFFSET $SG84464
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _data$[ebp], eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 258
	mov	edx, DWORD PTR _msgid$[ebp]
	push	edx
	lea	eax, DWORD PTR _ptr$[ebp]
	push	eax
	call	_writeInt
	add	esp, 8
; Line 259
	mov	DWORD PTR _elem$[ebp], 0
$LN3@MQTTPacket@4:
; Line 260
	lea	ecx, DWORD PTR _elem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _topics$[ebp]
	push	edx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@MQTTPacket@4
; Line 261
	mov	eax, DWORD PTR _elem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_writeUTF
	add	esp, 8
	jmp	SHORT $LN3@MQTTPacket@4
$LN2@MQTTPacket@4:
; Line 262
	push	1
	mov	eax, DWORD PTR _datalen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _header$[ebp]
	push	edx
	mov	eax, DWORD PTR _net$[ebp]
	push	eax
	call	_MQTTPacket_send
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax
; Line 263
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msgid$[ebp]
	push	edx
	mov	eax, DWORD PTR _clientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _net$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	0
	push	25					; 00000019H
	push	4
	call	_Log
	add	esp, 28					; 0000001cH
; Line 264
	cmp	DWORD PTR _rc$[ebp], -22		; ffffffeaH
	je	SHORT $LN1@MQTTPacket@4
; Line 265
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	push	265					; 00000109H
	push	OFFSET $SG84472
	call	_myfree
	add	esp, 12					; 0000000cH
$LN1@MQTTPacket@4:
; Line 266
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	266					; 0000010aH
	push	OFFSET $SG84473
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 267
	mov	eax, DWORD PTR _rc$[ebp]
; Line 268
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTPacket_send_unsubscribe ENDP
_TEXT	ENDS
END
