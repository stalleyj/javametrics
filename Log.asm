; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\Paho\org.eclipse.paho.mqtt.c\src\Log.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_trace_settings
_DATA	SEGMENT
COMM	_log_mutex:DWORD
COMM	_last_ts:BYTE:010H
COMM	_Log_levels:DWORD
COMM	_ts:BYTE:010H
_DATA	ENDS
_BSS	SEGMENT
_next_index DD	01H DUP (?)
_trace_queue DD	01H DUP (?)
_trace_queue_size DD 01H DUP (?)
_trace_destination DD 01H DUP (?)
_trace_destination_name DD 01H DUP (?)
_trace_destination_backup_name DD 01H DUP (?)
_lines_written DD 01H DUP (?)
_trace_callback DD 01H DUP (?)
_sametime_count DD 01H DUP (?)
$SG84594 DB	01H DUP (?)
	ALIGN	4

$SG84596 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_trace_settings DD 03H
	DD	0190H
	DD	0ffffffffH
_start_index DD	0ffffffffH
_max_lines_per_file DD 03e8H
_trace_output_level DD 0ffffffffH
$SG84502 DB	'MQTT_C_CLIENT_TRACE', 00H
$SG84506 DB	'ON', 00H
	ORG $+1
$SG84507 DB	'w', 00H
	ORG $+2
$SG84509 DB	'%s.0', 00H
	ORG $+3
$SG84512 DB	'MQTT_C_CLIENT_TRACE_MAX_LINES', 00H
	ORG $+2
$SG84516 DB	'MQTT_C_CLIENT_TRACE_LEVEL', 00H
	ORG $+2
$SG84519 DB	'MAXIMUM', 00H
$SG84520 DB	'TRACE_MAXIMUM', 00H
	ORG $+2
$SG84524 DB	'MEDIUM', 00H
	ORG $+1
$SG84525 DB	'TRACE_MEDIUM', 00H
	ORG $+3
$SG84529 DB	'MINIMUM', 00H
$SG84530 DB	'TRACE_MEDIUM', 00H
	ORG $+3
$SG84534 DB	'PROTOCOL', 00H
	ORG $+3
$SG84535 DB	'TRACE_PROTOCOL', 00H
	ORG $+1
$SG84539 DB	'ERROR', 00H
	ORG $+2
$SG84540 DB	'TRACE_ERROR', 00H
$SG84541 DB	'========================================================'
	DB	'=', 00H
	ORG $+2
$SG84542 DB	'                   Trace Output', 00H
$SG84547 DB	'%s: %s', 00H
	ORG $+1
$SG84548 DB	'========================================================'
	DB	'=', 00H
	ORG $+2
$SG84587 DB	'%Y%m%d %H%M%S ', 00H
	ORG $+1
$SG84588 DB	'.%.3hu ', 00H
$SG84589 DB	'(%.4d)', 00H
	ORG $+1
$SG84603 DB	'%s', 0aH, 00H
$SG84605 DB	'w', 00H
	ORG $+2
$SG84681 DB	'stdout', 00H
	ORG $+1
$SG84684 DB	'stderr', 00H
	ORG $+1
$SG84687 DB	'FFDC', 00H
	ORG $+3
$SG84688 DB	'ab', 00H
	ORG $+1
$SG84690 DB	'wb', 00H
_DATA	ENDS
PUBLIC	_Log_initialize
EXTRN	__imp___snprintf:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__fopen:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__getenv:PROC
EXTRN	__imp__malloc:PROC
_BSS	SEGMENT
	ALIGN	4

_msg_buf DB	0200H DUP (?)
; Function compile flags: /Odtp
_BSS	ENDS
_TEXT	SEGMENT
_envval$ = -8						; size = 4
_rc$ = -4						; size = 4
_info$ = 8						; size = 4
_Log_initialize PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\log.c
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 126
	mov	DWORD PTR _rc$[ebp], -1
; Line 127
	mov	DWORD PTR _envval$[ebp], 0
; Line 129
	mov	eax, DWORD PTR _trace_settings+4
	imul	eax, 312				; 00000138H
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	DWORD PTR _trace_queue, eax
	cmp	DWORD PTR _trace_queue, 0
	jne	SHORT $LN25@Log_initia
; Line 130
	mov	eax, DWORD PTR _rc$[ebp]
	jmp	$LN26@Log_initia
$LN25@Log_initia:
; Line 131
	mov	ecx, DWORD PTR _trace_settings+4
	mov	DWORD PTR _trace_queue_size, ecx
; Line 133
	push	OFFSET $SG84502
	call	DWORD PTR __imp__getenv
	add	esp, 4
	mov	DWORD PTR _envval$[ebp], eax
	cmp	DWORD PTR _envval$[ebp], 0
	je	$LN24@Log_initia
	mov	edx, DWORD PTR _envval$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	test	eax, eax
	jbe	$LN24@Log_initia
; Line 135
	push	OFFSET $SG84506
	mov	eax, DWORD PTR _envval$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN22@Log_initia
	push	OFFSET $SG84507
	mov	ecx, DWORD PTR _envval$[ebp]
	push	ecx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _trace_destination, eax
	cmp	DWORD PTR _trace_destination, 0
	jne	SHORT $LN23@Log_initia
$LN22@Log_initia:
; Line 136
	call	DWORD PTR __imp____iob_func
	add	eax, 32					; 00000020H
	mov	DWORD PTR _trace_destination, eax
; Line 137
	jmp	SHORT $LN24@Log_initia
$LN23@Log_initia:
; Line 139
	mov	edx, DWORD PTR _envval$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	DWORD PTR _trace_destination_name, eax
; Line 140
	mov	eax, DWORD PTR _envval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _trace_destination_name
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 141
	mov	edx, DWORD PTR _envval$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 3
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	DWORD PTR _trace_destination_backup_name, eax
; Line 142
	mov	eax, DWORD PTR _trace_destination_name
	push	eax
	push	OFFSET $SG84509
	mov	ecx, DWORD PTR _trace_destination_backup_name
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
$LN24@Log_initia:
; Line 145
	push	OFFSET $SG84512
	call	DWORD PTR __imp__getenv
	add	esp, 4
	mov	DWORD PTR _envval$[ebp], eax
	cmp	DWORD PTR _envval$[ebp], 0
	je	SHORT $LN20@Log_initia
	mov	edx, DWORD PTR _envval$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	test	eax, eax
	jbe	SHORT $LN20@Log_initia
; Line 147
	mov	eax, DWORD PTR _envval$[ebp]
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	mov	DWORD PTR _max_lines_per_file, eax
; Line 148
	cmp	DWORD PTR _max_lines_per_file, 0
	jg	SHORT $LN20@Log_initia
; Line 149
	mov	DWORD PTR _max_lines_per_file, 1000	; 000003e8H
$LN20@Log_initia:
; Line 151
	push	OFFSET $SG84516
	call	DWORD PTR __imp__getenv
	add	esp, 4
	mov	DWORD PTR _envval$[ebp], eax
	cmp	DWORD PTR _envval$[ebp], 0
	je	$LN18@Log_initia
	mov	ecx, DWORD PTR _envval$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	test	eax, eax
	jbe	$LN18@Log_initia
; Line 153
	push	OFFSET $SG84519
	mov	edx, DWORD PTR _envval$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@Log_initia
	push	OFFSET $SG84520
	mov	eax, DWORD PTR _envval$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@Log_initia
$LN16@Log_initia:
; Line 154
	mov	DWORD PTR _trace_settings, 1
	jmp	$LN18@Log_initia
$LN17@Log_initia:
; Line 155
	push	OFFSET $SG84524
	mov	ecx, DWORD PTR _envval$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN13@Log_initia
	push	OFFSET $SG84525
	mov	edx, DWORD PTR _envval$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@Log_initia
$LN13@Log_initia:
; Line 156
	mov	DWORD PTR _trace_settings, 2
	jmp	$LN18@Log_initia
$LN14@Log_initia:
; Line 157
	push	OFFSET $SG84529
	mov	eax, DWORD PTR _envval$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN10@Log_initia
	push	OFFSET $SG84530
	mov	ecx, DWORD PTR _envval$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@Log_initia
$LN10@Log_initia:
; Line 158
	mov	DWORD PTR _trace_settings, 3
	jmp	SHORT $LN18@Log_initia
$LN11@Log_initia:
; Line 159
	push	OFFSET $SG84534
	mov	edx, DWORD PTR _envval$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@Log_initia
	push	OFFSET $SG84535
	mov	eax, DWORD PTR _envval$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@Log_initia
$LN7@Log_initia:
; Line 160
	mov	DWORD PTR _trace_output_level, 4
	jmp	SHORT $LN18@Log_initia
$LN8@Log_initia:
; Line 161
	push	OFFSET $SG84539
	mov	ecx, DWORD PTR _envval$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@Log_initia
	push	OFFSET $SG84540
	mov	edx, DWORD PTR _envval$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@Log_initia
$LN4@Log_initia:
; Line 162
	mov	DWORD PTR _trace_output_level, 5
$LN18@Log_initia:
; Line 164
	push	OFFSET $SG84541
	push	3
	call	_Log_output
	add	esp, 8
; Line 165
	push	OFFSET $SG84542
	push	3
	call	_Log_output
	add	esp, 8
; Line 166
	cmp	DWORD PTR _info$[ebp], 0
	je	SHORT $LN3@Log_initia
$LN2@Log_initia:
; Line 168
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Log_initia
; Line 170
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG84547
	push	512					; 00000200H
	push	OFFSET _msg_buf
	call	DWORD PTR __imp___snprintf
	add	esp, 20					; 00000014H
; Line 171
	push	OFFSET _msg_buf
	push	3
	call	_Log_output
	add	esp, 8
; Line 172
	mov	edx, DWORD PTR _info$[ebp]
	add	edx, 8
	mov	DWORD PTR _info$[ebp], edx
; Line 173
	jmp	SHORT $LN2@Log_initia
$LN3@Log_initia:
; Line 193
	push	OFFSET $SG84548
	push	3
	call	_Log_output
	add	esp, 8
; Line 195
	mov	eax, DWORD PTR _rc$[ebp]
$LN26@Log_initia:
; Line 196
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_initialize ENDP
_TEXT	ENDS
PUBLIC	_Log_setTraceCallback
; Function compile flags: /Odtp
_TEXT	SEGMENT
_callback$ = 8						; size = 4
_Log_setTraceCallback PROC
; Line 200
	push	ebp
	mov	ebp, esp
; Line 201
	mov	eax, DWORD PTR _callback$[ebp]
	mov	DWORD PTR _trace_callback, eax
; Line 202
	pop	ebp
	ret	0
_Log_setTraceCallback ENDP
_TEXT	ENDS
PUBLIC	_Log_setTraceLevel
; Function compile flags: /Odtp
_TEXT	SEGMENT
_level$ = 8						; size = 4
_Log_setTraceLevel PROC
; Line 206
	push	ebp
	mov	ebp, esp
; Line 207
	cmp	DWORD PTR _level$[ebp], 3
	jge	SHORT $LN1@Log_setTra
; Line 208
	mov	eax, DWORD PTR _level$[ebp]
	mov	DWORD PTR _trace_settings, eax
$LN1@Log_setTra:
; Line 209
	mov	ecx, DWORD PTR _level$[ebp]
	mov	DWORD PTR _trace_output_level, ecx
; Line 210
	pop	ebp
	ret	0
_Log_setTraceLevel ENDP
_TEXT	ENDS
PUBLIC	_Log_terminate
EXTRN	__imp__fclose:PROC
EXTRN	__imp__free:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_Log_terminate PROC
; Line 214
	push	ebp
	mov	ebp, esp
; Line 215
	mov	eax, DWORD PTR _trace_queue
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
; Line 216
	mov	DWORD PTR _trace_queue, 0
; Line 217
	mov	DWORD PTR _trace_queue_size, 0
; Line 218
	cmp	DWORD PTR _trace_destination, 0
	je	SHORT $LN4@Log_termin
; Line 220
	call	DWORD PTR __imp____iob_func
	add	eax, 32					; 00000020H
	cmp	DWORD PTR _trace_destination, eax
	je	SHORT $LN3@Log_termin
; Line 221
	mov	ecx, DWORD PTR _trace_destination
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN3@Log_termin:
; Line 222
	mov	DWORD PTR _trace_destination, 0
$LN4@Log_termin:
; Line 224
	cmp	DWORD PTR _trace_destination_name, 0
	je	SHORT $LN2@Log_termin
; Line 225
	mov	edx, DWORD PTR _trace_destination_name
	push	edx
	call	DWORD PTR __imp__free
	add	esp, 4
$LN2@Log_termin:
; Line 226
	cmp	DWORD PTR _trace_destination_backup_name, 0
	je	SHORT $LN1@Log_termin
; Line 227
	mov	eax, DWORD PTR _trace_destination_backup_name
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
$LN1@Log_termin:
; Line 228
	mov	DWORD PTR _start_index, -1
; Line 229
	mov	DWORD PTR _next_index, 0
; Line 230
	mov	DWORD PTR _trace_output_level, -1
; Line 231
	mov	DWORD PTR _sametime_count, 0
; Line 232
	pop	ebp
	ret	0
_Log_terminate ENDP
_TEXT	ENDS
EXTRN	__imp__fflush:PROC
EXTRN	__imp__rename:PROC
EXTRN	__imp___unlink:PROC
EXTRN	__imp__fprintf:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_log_level$ = 8						; size = 4
_msg$ = 12						; size = 4
_Log_output PROC
; Line 325
	push	ebp
	mov	ebp, esp
; Line 326
	cmp	DWORD PTR _trace_destination, 0
	je	$LN5@Log_output
; Line 328
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	push	OFFSET $SG84603
	mov	ecx, DWORD PTR _trace_destination
	push	ecx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
; Line 330
	call	DWORD PTR __imp____iob_func
	add	eax, 32					; 00000020H
	cmp	DWORD PTR _trace_destination, eax
	je	$LN4@Log_output
	mov	edx, DWORD PTR _lines_written
	add	edx, 1
	mov	DWORD PTR _lines_written, edx
	mov	eax, DWORD PTR _lines_written
	cmp	eax, DWORD PTR _max_lines_per_file
	jl	SHORT $LN4@Log_output
; Line 333
	mov	ecx, DWORD PTR _trace_destination
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
; Line 334
	mov	edx, DWORD PTR _trace_destination_backup_name
	push	edx
	call	DWORD PTR __imp___unlink
	add	esp, 4
; Line 335
	mov	eax, DWORD PTR _trace_destination_backup_name
	push	eax
	mov	ecx, DWORD PTR _trace_destination_name
	push	ecx
	call	DWORD PTR __imp__rename
	add	esp, 8
; Line 336
	push	OFFSET $SG84605
	mov	edx, DWORD PTR _trace_destination_name
	push	edx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _trace_destination, eax
; Line 337
	cmp	DWORD PTR _trace_destination, 0
	jne	SHORT $LN3@Log_output
; Line 338
	call	DWORD PTR __imp____iob_func
	add	eax, 32					; 00000020H
	mov	DWORD PTR _trace_destination, eax
$LN3@Log_output:
; Line 339
	mov	DWORD PTR _lines_written, 0
; Line 341
	jmp	SHORT $LN5@Log_output
$LN4@Log_output:
; Line 342
	mov	eax, DWORD PTR _trace_destination
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
$LN5@Log_output:
; Line 345
	cmp	DWORD PTR _trace_callback, 0
	je	SHORT $LN6@Log_output
; Line 346
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _log_level$[ebp]
	push	edx
	call	DWORD PTR _trace_callback
	add	esp, 8
$LN6@Log_output:
; Line 347
	pop	ebp
	ret	0
_Log_output ENDP
_TEXT	ENDS
PUBLIC	_Log
EXTRN	_Thread_unlock_mutex:PROC
EXTRN	__imp__vsnprintf:PROC
EXTRN	_Messages_get:PROC
EXTRN	_Thread_lock_mutex:PROC
_BSS	SEGMENT
?msg_buf@?2??Log@@9@9 DB 0200H DUP (?)			; `Log'::`3'::msg_buf
; Function compile flags: /Odtp
_BSS	ENDS
_TEXT	SEGMENT
_temp$84639 = -8					; size = 4
_args$84643 = -4					; size = 4
_log_level$ = 8						; size = 4
_msgno$ = 12						; size = 4
_format$ = 16						; size = 4
_Log	PROC
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 395
	mov	eax, DWORD PTR _log_level$[ebp]
	cmp	eax, DWORD PTR _trace_settings
	jl	$LN3@Log
; Line 397
	mov	DWORD PTR _temp$84639[ebp], 0
; Line 402
	mov	ecx, DWORD PTR _log_mutex
	push	ecx
	call	_Thread_lock_mutex
	add	esp, 4
; Line 403
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN1@Log
	mov	edx, DWORD PTR _log_level$[ebp]
	push	edx
	mov	eax, DWORD PTR _msgno$[ebp]
	push	eax
	call	_Messages_get
	add	esp, 8
	mov	DWORD PTR _temp$84639[ebp], eax
	cmp	DWORD PTR _temp$84639[ebp], 0
	je	SHORT $LN1@Log
; Line 404
	mov	ecx, DWORD PTR _temp$84639[ebp]
	mov	DWORD PTR _format$[ebp], ecx
$LN1@Log:
; Line 406
	lea	edx, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _args$84643[ebp], edx
; Line 407
	mov	eax, DWORD PTR _args$84643[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	512					; 00000200H
	push	OFFSET ?msg_buf@?2??Log@@9@9
	call	DWORD PTR __imp__vsnprintf
	add	esp, 16					; 00000010H
; Line 409
	push	OFFSET ?msg_buf@?2??Log@@9@9
	mov	edx, DWORD PTR _log_level$[ebp]
	push	edx
	call	_Log_trace
	add	esp, 8
; Line 410
	mov	DWORD PTR _args$84643[ebp], 0
; Line 411
	mov	eax, DWORD PTR _log_mutex
	push	eax
	call	_Thread_unlock_mutex
	add	esp, 4
$LN3@Log:
; Line 420
	mov	esp, ebp
	pop	ebp
	ret	0
_Log	ENDP
_TEXT	ENDS
EXTRN	__imp__strncpy:PROC
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cur_entry$ = -4					; size = 4
_log_level$ = 8						; size = 4
_buf$ = 12						; size = 4
_Log_trace PROC
; Line 365
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 366
	mov	DWORD PTR _cur_entry$[ebp], 0
; Line 368
	cmp	DWORD PTR _trace_queue, 0
	jne	SHORT $LN1@Log_trace
; Line 369
	jmp	SHORT $LN2@Log_trace
$LN1@Log_trace:
; Line 371
	call	_Log_pretrace
	mov	DWORD PTR _cur_entry$[ebp], eax
; Line 373
	push	16					; 00000010H
	push	OFFSET _ts
	mov	eax, DWORD PTR _cur_entry$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 374
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	mov	edx, DWORD PTR _sametime_count
	mov	DWORD PTR [ecx+16], edx
; Line 376
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	DWORD PTR [eax+296], 2
; Line 377
	push	257					; 00000101H
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cur_entry$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
; Line 378
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	BYTE PTR [eax+288], 0
; Line 380
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	push	ecx
	mov	edx, DWORD PTR _log_level$[ebp]
	push	edx
	call	_Log_posttrace
	add	esp, 8
$LN2@Log_trace:
; Line 381
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_trace ENDP
; Function compile flags: /Odtp
tv78 = -12						; size = 4
_new_trace_queue$84571 = -8				; size = 4
_cur_entry$ = -4					; size = 4
_Log_pretrace PROC
; Line 236
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 237
	mov	DWORD PTR _cur_entry$[ebp], 0
; Line 240
	mov	eax, DWORD PTR _sametime_count
	add	eax, 1
	mov	DWORD PTR _sametime_count, eax
	mov	eax, DWORD PTR _sametime_count
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN11@Log_pretra
; Line 246
	push	OFFSET _ts
	call	_ftime
	add	esp, 4
; Line 247
	mov	edx, DWORD PTR _ts
	cmp	edx, DWORD PTR _last_ts
	jne	SHORT $LN9@Log_pretra
	mov	eax, DWORD PTR _ts+4
	cmp	eax, DWORD PTR _last_ts+4
	jne	SHORT $LN9@Log_pretra
	movzx	ecx, WORD PTR _ts+8
	movzx	edx, WORD PTR _last_ts+8
	cmp	ecx, edx
	je	SHORT $LN11@Log_pretra
$LN9@Log_pretra:
; Line 250
	mov	DWORD PTR _sametime_count, 0
; Line 251
	mov	eax, DWORD PTR _ts
	mov	DWORD PTR _last_ts, eax
	mov	ecx, DWORD PTR _ts+4
	mov	DWORD PTR _last_ts+4, ecx
	mov	edx, DWORD PTR _ts+8
	mov	DWORD PTR _last_ts+8, edx
	mov	eax, DWORD PTR _ts+12
	mov	DWORD PTR _last_ts+12, eax
$LN11@Log_pretra:
; Line 255
	mov	ecx, DWORD PTR _trace_queue_size
	cmp	ecx, DWORD PTR _trace_settings+4
	je	$LN8@Log_pretra
; Line 257
	mov	edx, DWORD PTR _trace_settings+4
	imul	edx, 312				; 00000138H
	push	edx
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	DWORD PTR _new_trace_queue$84571[ebp], eax
; Line 259
	mov	eax, DWORD PTR _trace_queue_size
	cmp	eax, DWORD PTR _trace_settings+4
	jge	SHORT $LN14@Log_pretra
	mov	ecx, DWORD PTR _trace_queue_size
	mov	DWORD PTR tv78[ebp], ecx
	jmp	SHORT $LN15@Log_pretra
$LN14@Log_pretra:
	mov	edx, DWORD PTR _trace_settings+4
	mov	DWORD PTR tv78[ebp], edx
$LN15@Log_pretra:
	mov	eax, DWORD PTR tv78[ebp]
	imul	eax, 312				; 00000138H
	push	eax
	mov	ecx, DWORD PTR _trace_queue
	push	ecx
	mov	edx, DWORD PTR _new_trace_queue$84571[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 260
	mov	eax, DWORD PTR _trace_queue
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
; Line 261
	mov	ecx, DWORD PTR _new_trace_queue$84571[ebp]
	mov	DWORD PTR _trace_queue, ecx
; Line 262
	mov	edx, DWORD PTR _trace_settings+4
	mov	DWORD PTR _trace_queue_size, edx
; Line 265
	mov	eax, DWORD PTR _trace_settings+4
	add	eax, 1
	cmp	DWORD PTR _start_index, eax
	jg	SHORT $LN6@Log_pretra
	mov	ecx, DWORD PTR _trace_settings+4
	add	ecx, 1
	cmp	DWORD PTR _next_index, ecx
	jle	SHORT $LN8@Log_pretra
$LN6@Log_pretra:
; Line 267
	mov	DWORD PTR _start_index, -1
; Line 268
	mov	DWORD PTR _next_index, 0
$LN8@Log_pretra:
; Line 273
	mov	edx, DWORD PTR _next_index
	imul	edx, 312				; 00000138H
	add	edx, DWORD PTR _trace_queue
	mov	DWORD PTR _cur_entry$[ebp], edx
; Line 274
	mov	eax, DWORD PTR _next_index
	cmp	eax, DWORD PTR _start_index
	jne	SHORT $LN5@Log_pretra
; Line 276
	mov	ecx, DWORD PTR _start_index
	add	ecx, 1
	mov	DWORD PTR _start_index, ecx
	mov	edx, DWORD PTR _start_index
	cmp	edx, DWORD PTR _trace_settings+4
	jne	SHORT $LN4@Log_pretra
; Line 277
	mov	DWORD PTR _start_index, 0
$LN4@Log_pretra:
; Line 278
	jmp	SHORT $LN3@Log_pretra
$LN5@Log_pretra:
	cmp	DWORD PTR _start_index, -1
	jne	SHORT $LN3@Log_pretra
; Line 279
	mov	DWORD PTR _start_index, 0
$LN3@Log_pretra:
; Line 280
	mov	eax, DWORD PTR _next_index
	add	eax, 1
	mov	DWORD PTR _next_index, eax
	mov	ecx, DWORD PTR _next_index
	cmp	ecx, DWORD PTR _trace_settings+4
	jne	SHORT $LN1@Log_pretra
; Line 281
	mov	DWORD PTR _next_index, 0
$LN1@Log_pretra:
; Line 283
	mov	eax, DWORD PTR _cur_entry$[ebp]
; Line 284
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_pretrace ENDP
_TEXT	ENDS
EXTRN	__imp___ftime64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Tmb$ = 8						; size = 4
_ftime	PROC
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sys\timeb.inl
; Line 49
	push	ebp
	mov	ebp, esp
; Line 51
	mov	eax, DWORD PTR __Tmb$[ebp]
	push	eax
	call	DWORD PTR __imp___ftime64
	add	esp, 4
; Line 52
	pop	ebp
	ret	0
_ftime	ENDP
; Function compile flags: /Odtp
tv69 = -8						; size = 4
_msg$84617 = -4						; size = 4
_log_level$ = 8						; size = 4
_cur_entry$ = 12					; size = 4
_Log_posttrace PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\log.c
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 352
	cmp	DWORD PTR _trace_output_level, -1
	jne	SHORT $LN6@Log_posttr
	mov	eax, DWORD PTR _log_level$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR _trace_settings
	setge	cl
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN7@Log_posttr
$LN6@Log_posttr:
	mov	edx, DWORD PTR _log_level$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR _trace_output_level
	setge	al
	mov	DWORD PTR tv69[ebp], eax
$LN7@Log_posttr:
	cmp	DWORD PTR tv69[ebp], 0
	je	SHORT $LN4@Log_posttr
; Line 354
	mov	DWORD PTR _msg$84617[ebp], 0
; Line 356
	cmp	DWORD PTR _trace_destination, 0
	jne	SHORT $LN1@Log_posttr
	cmp	DWORD PTR _trace_callback, 0
	je	SHORT $LN2@Log_posttr
$LN1@Log_posttr:
; Line 357
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	push	ecx
	call	_Log_formatTraceEntry
	add	esp, 4
	add	eax, 7
	mov	DWORD PTR _msg$84617[ebp], eax
$LN2@Log_posttr:
; Line 359
	mov	edx, DWORD PTR _msg$84617[ebp]
	push	edx
	mov	eax, DWORD PTR _log_level$[ebp]
	push	eax
	call	_Log_output
	add	esp, 8
$LN4@Log_posttr:
; Line 361
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_posttrace ENDP
_TEXT	ENDS
EXTRN	__imp__strftime:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_format$84592 = -12					; size = 4
_timeinfo$ = -8						; size = 4
_buf_pos$ = -4						; size = 4
_cur_entry$ = 8						; size = 4
_Log_formatTraceEntry PROC
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 290
	mov	DWORD PTR _buf_pos$[ebp], 31		; 0000001fH
; Line 295
	mov	eax, DWORD PTR _cur_entry$[ebp]
	push	eax
	call	_localtime
	add	esp, 4
	mov	DWORD PTR _timeinfo$[ebp], eax
; Line 297
	mov	ecx, DWORD PTR _timeinfo$[ebp]
	push	ecx
	push	OFFSET $SG84587
	push	80					; 00000050H
	push	OFFSET _msg_buf+7
	call	DWORD PTR __imp__strftime
	add	esp, 16					; 00000010H
; Line 301
	mov	edx, DWORD PTR _cur_entry$[ebp]
	movzx	eax, WORD PTR [edx+8]
	push	eax
	push	OFFSET $SG84588
	push	OFFSET _msg_buf+22
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
; Line 303
	mov	DWORD PTR _buf_pos$[ebp], 27		; 0000001bH
; Line 305
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	OFFSET $SG84589
	push	OFFSET _msg_buf
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
; Line 306
	mov	BYTE PTR _msg_buf+6, 32			; 00000020H
; Line 308
	mov	eax, DWORD PTR _cur_entry$[ebp]
	cmp	DWORD PTR [eax+296], 2
	jne	SHORT $LN4@Log_format
; Line 309
	mov	ecx, 512				; 00000200H
	sub	ecx, DWORD PTR _buf_pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cur_entry$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	mov	eax, DWORD PTR _buf_pos$[ebp]
	add	eax, OFFSET _msg_buf
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
; Line 310
	jmp	$LN3@Log_format
$LN4@Log_format:
; Line 312
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	mov	edx, DWORD PTR [ecx+304]
	push	edx
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_Messages_get
	add	esp, 8
	mov	DWORD PTR _format$84592[ebp], eax
; Line 313
	mov	edx, DWORD PTR _cur_entry$[ebp]
	cmp	DWORD PTR [edx+296], 1
	jne	SHORT $LN2@Log_format
; Line 315
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	mov	edx, DWORD PTR _cur_entry$[ebp]
	mov	eax, DWORD PTR [edx+292]
	push	eax
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _cur_entry$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	push	OFFSET $SG84594
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _format$84592[ebp]
	push	edx
	mov	eax, 512				; 00000200H
	sub	eax, DWORD PTR _buf_pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf_pos$[ebp]
	add	ecx, OFFSET _msg_buf
	push	ecx
	call	DWORD PTR __imp___snprintf
	add	esp, 40					; 00000028H
; Line 316
	jmp	SHORT $LN3@Log_format
$LN2@Log_format:
; Line 318
	mov	edx, DWORD PTR _cur_entry$[ebp]
	mov	eax, DWORD PTR [edx+292]
	push	eax
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _cur_entry$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	push	OFFSET $SG84596
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _format$84592[ebp]
	push	edx
	mov	eax, 512				; 00000200H
	sub	eax, DWORD PTR _buf_pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf_pos$[ebp]
	add	ecx, OFFSET _msg_buf
	push	ecx
	call	DWORD PTR __imp___snprintf
	add	esp, 36					; 00000024H
$LN3@Log_format:
; Line 320
	mov	eax, OFFSET _msg_buf
; Line 321
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_formatTraceEntry ENDP
_TEXT	ENDS
EXTRN	__imp___localtime64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 113
	push	ebp
	mov	ebp, esp
; Line 116
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___localtime64
	add	esp, 4
; Line 118
	pop	ebp
	ret	0
_localtime ENDP
_TEXT	ENDS
PUBLIC	_Log_stackTrace
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cur_entry$ = -4					; size = 4
_log_level$ = 8						; size = 4
_msgno$ = 12						; size = 4
_thread_id$ = 16					; size = 4
_current_depth$ = 20					; size = 4
_name$ = 24						; size = 4
_line$ = 28						; size = 4
_rc$ = 32						; size = 4
_Log_stackTrace PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\log.c
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 434
	mov	DWORD PTR _cur_entry$[ebp], 0
; Line 436
	cmp	DWORD PTR _trace_queue, 0
	jne	SHORT $LN4@Log_stackT
; Line 437
	jmp	$LN5@Log_stackT
$LN4@Log_stackT:
; Line 439
	mov	eax, DWORD PTR _log_level$[ebp]
	cmp	eax, DWORD PTR _trace_settings
	jge	SHORT $LN3@Log_stackT
; Line 440
	jmp	$LN5@Log_stackT
$LN3@Log_stackT:
; Line 442
	mov	ecx, DWORD PTR _log_mutex
	push	ecx
	call	_Thread_lock_mutex
	add	esp, 4
; Line 443
	call	_Log_pretrace
	mov	DWORD PTR _cur_entry$[ebp], eax
; Line 445
	push	16					; 00000010H
	push	OFFSET _ts
	mov	edx, DWORD PTR _cur_entry$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 446
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	ecx, DWORD PTR _sametime_count
	mov	DWORD PTR [eax+16], ecx
; Line 447
	mov	edx, DWORD PTR _cur_entry$[ebp]
	mov	eax, DWORD PTR _msgno$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 448
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	mov	edx, DWORD PTR _thread_id$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 449
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	ecx, DWORD PTR _current_depth$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 450
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _cur_entry$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_strcpy
	add	esp, 8
; Line 451
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	mov	edx, DWORD PTR _log_level$[ebp]
	mov	DWORD PTR [ecx+304], edx
; Line 452
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [eax+292], ecx
; Line 453
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN2@Log_stackT
; Line 454
	mov	edx, DWORD PTR _cur_entry$[ebp]
	mov	DWORD PTR [edx+296], 0
; Line 455
	jmp	SHORT $LN1@Log_stackT
$LN2@Log_stackT:
; Line 457
	mov	eax, DWORD PTR _cur_entry$[ebp]
	mov	DWORD PTR [eax+296], 1
; Line 458
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+300], eax
$LN1@Log_stackT:
; Line 461
	mov	ecx, DWORD PTR _cur_entry$[ebp]
	push	ecx
	mov	edx, DWORD PTR _log_level$[ebp]
	push	edx
	call	_Log_posttrace
	add	esp, 8
; Line 462
	mov	eax, DWORD PTR _log_mutex
	push	eax
	call	_Thread_unlock_mutex
	add	esp, 4
$LN5@Log_stackT:
; Line 463
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_stackTrace ENDP
_TEXT	ENDS
PUBLIC	_Log_destToFile
EXTRN	__imp__strstr:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_file$ = -4						; size = 4
_dest$ = 8						; size = 4
_Log_destToFile PROC
; Line 467
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 468
	mov	DWORD PTR _file$[ebp], 0
; Line 470
	push	OFFSET $SG84681
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@Log_destTo
; Line 471
	call	DWORD PTR __imp____iob_func
	add	eax, 32					; 00000020H
	mov	DWORD PTR _file$[ebp], eax
	jmp	SHORT $LN5@Log_destTo
$LN6@Log_destTo:
; Line 472
	push	OFFSET $SG84684
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@Log_destTo
; Line 473
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	mov	DWORD PTR _file$[ebp], eax
; Line 474
	jmp	SHORT $LN5@Log_destTo
$LN4@Log_destTo:
; Line 476
	push	OFFSET $SG84687
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@Log_destTo
; Line 477
	push	OFFSET $SG84688
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _file$[ebp], eax
; Line 478
	jmp	SHORT $LN5@Log_destTo
$LN2@Log_destTo:
; Line 479
	push	OFFSET $SG84690
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _file$[ebp], eax
$LN5@Log_destTo:
; Line 481
	mov	eax, DWORD PTR _file$[ebp]
; Line 482
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_destToFile ENDP
_TEXT	ENDS
PUBLIC	_Log_compareEntries
EXTRN	__imp__strncmp:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_comp$ = -4						; size = 4
_entry1$ = 8						; size = 4
_entry2$ = 12						; size = 4
_Log_compareEntries PROC
; Line 486
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 487
	push	19					; 00000013H
	mov	eax, DWORD PTR _entry2$[ebp]
	add	eax, 7
	push	eax
	mov	ecx, DWORD PTR _entry1$[ebp]
	add	ecx, 7
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _comp$[ebp], eax
; Line 490
	cmp	DWORD PTR _comp$[ebp], 0
	jne	SHORT $LN1@Log_compar
; Line 491
	push	4
	mov	edx, DWORD PTR _entry2$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _entry1$[ebp]
	add	eax, 1
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _comp$[ebp], eax
$LN1@Log_compar:
; Line 493
	mov	eax, DWORD PTR _comp$[ebp]
; Line 494
	mov	esp, ebp
	pop	ebp
	ret	0
_Log_compareEntries ENDP
_TEXT	ENDS
END
