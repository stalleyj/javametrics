; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\Paho\org.eclipse.paho.mqtt.c\src\utf-8.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_valid_ranges
_DATA	SEGMENT
COMM	_Log_levels:DWORD
_valid_ranges DD 01H
	DB	00H
	DB	07fH
	ORG $+6
	DD	02H
	DB	0c2H
	DB	0dfH
	DB	080H
	DB	0bfH
	ORG $+4
	DD	03H
	DB	0e0H
	DB	0e0H
	DB	0a0H
	DB	0bfH
	DB	080H
	DB	0bfH
	ORG $+2
	DD	03H
	DB	0e1H
	DB	0ecH
	DB	080H
	DB	0bfH
	DB	080H
	DB	0bfH
	ORG $+2
	DD	03H
	DB	0edH
	DB	0edH
	DB	080H
	DB	09fH
	DB	080H
	DB	0bfH
	ORG $+2
	DD	03H
	DB	0eeH
	DB	0efH
	DB	080H
	DB	0bfH
	DB	080H
	DB	0bfH
	ORG $+2
	DD	04H
	DB	0f0H
	DB	0f0H
	DB	090H
	DB	0bfH
	DB	080H
	DB	0bfH
	DB	080H
	DB	0bfH
	DD	04H
	DB	0f1H
	DB	0f3H
	DB	080H
	DB	0bfH
	DB	080H
	DB	0bfH
	DB	080H
	DB	0bfH
	DD	04H
	DB	0f4H
	DB	0f4H
	DB	080H
	DB	08fH
	DB	080H
	DB	0bfH
	DB	080H
	DB	0bfH
$SG81470 DB	'UTF8_char_validate', 00H
	ORG $+1
$SG81490 DB	'UTF8_char_validate', 00H
	ORG $+1
$SG81500 DB	'UTF8_validate', 00H
	ORG $+2
$SG81507 DB	'UTF8_validate', 00H
	ORG $+2
$SG81513 DB	'UTF8_validateString', 00H
$SG81514 DB	'UTF8_validateString', 00H
_DATA	ENDS
PUBLIC	_UTF8_char_validate
EXTRN	_StackTrace_exit:PROC
EXTRN	_StackTrace_entry:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_j$ = -20						; size = 4
_good$ = -16						; size = 4
_charlen$ = -12						; size = 4
_i$ = -8						; size = 4
_rc$ = -4						; size = 4
_len$ = 8						; size = 4
_data$ = 12						; size = 4
_UTF8_char_validate PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\utf-8.c
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 74
	mov	DWORD PTR _good$[ebp], 0
; Line 75
	mov	DWORD PTR _charlen$[ebp], 2
; Line 77
	mov	DWORD PTR _rc$[ebp], 0
; Line 79
	push	3
	push	79					; 0000004fH
	push	OFFSET $SG81470
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 81
	mov	eax, DWORD PTR _data$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 128				; 00000080H
	jne	SHORT $LN17@UTF8_char_
; Line 82
	mov	DWORD PTR _charlen$[ebp], 1
	jmp	SHORT $LN16@UTF8_char_
$LN17@UTF8_char_:
; Line 83
	mov	edx, DWORD PTR _data$[ebp]
	movsx	eax, BYTE PTR [edx]
	and	eax, 240				; 000000f0H
	cmp	eax, 240				; 000000f0H
	jne	SHORT $LN15@UTF8_char_
; Line 84
	mov	DWORD PTR _charlen$[ebp], 4
	jmp	SHORT $LN16@UTF8_char_
$LN15@UTF8_char_:
; Line 85
	mov	ecx, DWORD PTR _data$[ebp]
	movsx	edx, BYTE PTR [ecx]
	and	edx, 224				; 000000e0H
	cmp	edx, 224				; 000000e0H
	jne	SHORT $LN16@UTF8_char_
; Line 86
	mov	DWORD PTR _charlen$[ebp], 3
$LN16@UTF8_char_:
; Line 88
	mov	eax, DWORD PTR _charlen$[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jle	SHORT $LN12@UTF8_char_
; Line 89
	jmp	$exit$81477
$LN12@UTF8_char_:
; Line 91
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@UTF8_char_
$LN10@UTF8_char_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN11@UTF8_char_:
	cmp	DWORD PTR _i$[ebp], 9
	jae	$LN9@UTF8_char_
; Line 93
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _valid_ranges[edx]
	cmp	eax, DWORD PTR _charlen$[ebp]
	jne	SHORT $LN8@UTF8_char_
; Line 95
	mov	DWORD PTR _good$[ebp], 1
; Line 96
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN7@UTF8_char_
$LN6@UTF8_char_:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN7@UTF8_char_:
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR _charlen$[ebp]
	jge	SHORT $LN5@UTF8_char_
; Line 99
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _j$[ebp]
	movsx	edx, BYTE PTR _valid_ranges[edx+eax*2+4]
	cmp	ecx, edx
	jl	SHORT $LN3@UTF8_char_
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _j$[ebp]
	movsx	edx, BYTE PTR _valid_ranges[edx+eax*2+5]
	cmp	ecx, edx
	jle	SHORT $LN4@UTF8_char_
$LN3@UTF8_char_:
; Line 101
	mov	DWORD PTR _good$[ebp], 0
; Line 102
	jmp	SHORT $LN5@UTF8_char_
$LN4@UTF8_char_:
; Line 104
	jmp	SHORT $LN6@UTF8_char_
$LN5@UTF8_char_:
; Line 105
	cmp	DWORD PTR _good$[ebp], 0
	je	SHORT $LN8@UTF8_char_
; Line 106
	jmp	SHORT $LN9@UTF8_char_
$LN8@UTF8_char_:
; Line 108
	jmp	$LN10@UTF8_char_
$LN9@UTF8_char_:
; Line 110
	cmp	DWORD PTR _good$[ebp], 0
	je	SHORT $exit$81477
; Line 111
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _charlen$[ebp]
	mov	DWORD PTR _rc$[ebp], eax
$exit$81477:
; Line 113
	push	3
	push	0
	push	113					; 00000071H
	push	OFFSET $SG81490
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 114
	mov	eax, DWORD PTR _rc$[ebp]
; Line 115
	mov	esp, ebp
	pop	ebp
	ret	0
_UTF8_char_validate ENDP
_TEXT	ENDS
PUBLIC	_UTF8_validate
; Function compile flags: /Odtp
_TEXT	SEGMENT
_curdata$ = -8						; size = 4
_rc$ = -4						; size = 4
_len$ = 8						; size = 4
_data$ = 12						; size = 4
_UTF8_validate PROC
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 126
	mov	DWORD PTR _curdata$[ebp], 0
; Line 127
	mov	DWORD PTR _rc$[ebp], 0
; Line 129
	push	3
	push	129					; 00000081H
	push	OFFSET $SG81500
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 130
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN3@UTF8_valid
; Line 132
	mov	DWORD PTR _rc$[ebp], 1
; Line 133
	jmp	SHORT $exit$81502
$LN3@UTF8_valid:
; Line 135
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	call	_UTF8_char_validate
	add	esp, 8
	mov	DWORD PTR _curdata$[ebp], eax
$LN2@UTF8_valid:
; Line 136
	cmp	DWORD PTR _curdata$[ebp], 0
	je	SHORT $LN1@UTF8_valid
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	cmp	DWORD PTR _curdata$[ebp], edx
	jae	SHORT $LN1@UTF8_valid
; Line 137
	mov	eax, DWORD PTR _curdata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	call	_UTF8_char_validate
	add	esp, 8
	mov	DWORD PTR _curdata$[ebp], eax
	jmp	SHORT $LN2@UTF8_valid
$LN1@UTF8_valid:
; Line 139
	xor	edx, edx
	cmp	DWORD PTR _curdata$[ebp], 0
	setne	dl
	mov	DWORD PTR _rc$[ebp], edx
$exit$81502:
; Line 141
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	141					; 0000008dH
	push	OFFSET $SG81507
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 142
	mov	eax, DWORD PTR _rc$[ebp]
; Line 143
	mov	esp, ebp
	pop	ebp
	ret	0
_UTF8_validate ENDP
_TEXT	ENDS
PUBLIC	_UTF8_validateString
EXTRN	_strlen:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_string$ = 8						; size = 4
_UTF8_validateString PROC
; Line 152
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 153
	mov	DWORD PTR _rc$[ebp], 0
; Line 155
	push	3
	push	155					; 0000009bH
	push	OFFSET $SG81513
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 156
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	call	_UTF8_validate
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
; Line 157
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	157					; 0000009dH
	push	OFFSET $SG81514
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 158
	mov	eax, DWORD PTR _rc$[ebp]
; Line 159
	mov	esp, ebp
	pop	ebp
	ret	0
_UTF8_validateString ENDP
_TEXT	ENDS
END
