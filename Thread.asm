; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\Paho\org.eclipse.paho.mqtt.c\src\Thread.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_Log_levels:DWORD
$SG81459 DB	'Thread_start', 00H
	ORG $+3
$SG81463 DB	'Thread_start', 00H
	ORG $+3
$SG81468 DB	'Thread_create_mutex', 00H
$SG81471 DB	'Thread_create_mutex', 00H
$SG81486 DB	'Thread_destroy_mutex', 00H
	ORG $+3
$SG81487 DB	'Thread_destroy_mutex', 00H
	ORG $+3
$SG81493 DB	'Thread_create_sem', 00H
	ORG $+2
$SG81496 DB	'Thread_create_sem', 00H
	ORG $+2
$SG81503 DB	'Thread_wait_sem', 00H
$SG81504 DB	'Thread_wait_sem', 00H
$SG81513 DB	'Thread_post_sem', 00H
$SG81515 DB	'Thread_post_sem', 00H
$SG81520 DB	'Thread_destroy_sem', 00H
	ORG $+1
$SG81521 DB	'Thread_destroy_sem', 00H
_DATA	ENDS
PUBLIC	_Thread_start
EXTRN	_StackTrace_exit:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	_StackTrace_entry:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_thread$ = -4						; size = 4
_fn$ = 8						; size = 4
_parameter$ = 12					; size = 4
_Thread_start PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\thread.c
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 59
	mov	DWORD PTR _thread$[ebp], 0
; Line 65
	push	3
	push	65					; 00000041H
	push	OFFSET $SG81459
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 67
	push	0
	push	0
	mov	eax, DWORD PTR _parameter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fn$[ebp]
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
	mov	DWORD PTR _thread$[ebp], eax
; Line 75
	push	3
	push	0
	push	75					; 0000004bH
	push	OFFSET $SG81463
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 76
	mov	eax, DWORD PTR _thread$[ebp]
; Line 77
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_start ENDP
_TEXT	ENDS
PUBLIC	_Thread_create_mutex
EXTRN	__imp__CreateMutexA@12:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_mutex$ = -8						; size = 4
_rc$ = -4						; size = 4
_Thread_create_mutex PROC
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 86
	mov	DWORD PTR _mutex$[ebp], 0
; Line 87
	mov	DWORD PTR _rc$[ebp], 0
; Line 89
	push	3
	push	89					; 00000059H
	push	OFFSET $SG81468
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 91
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateMutexA@12
	mov	DWORD PTR _mutex$[ebp], eax
; Line 96
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	96					; 00000060H
	push	OFFSET $SG81471
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 97
	mov	eax, DWORD PTR _mutex$[ebp]
; Line 98
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_create_mutex ENDP
_TEXT	ENDS
PUBLIC	_Thread_lock_mutex
EXTRN	__imp__WaitForSingleObject@8:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_mutex$ = 8						; size = 4
_Thread_lock_mutex PROC
; Line 107
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 108
	mov	DWORD PTR _rc$[ebp], -1
; Line 113
	push	-1
	mov	eax, DWORD PTR _mutex$[ebp]
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	mov	DWORD PTR _rc$[ebp], eax
; Line 118
	mov	eax, DWORD PTR _rc$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_lock_mutex ENDP
_TEXT	ENDS
PUBLIC	_Thread_unlock_mutex
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__ReleaseMutex@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_mutex$ = 8						; size = 4
_Thread_unlock_mutex PROC
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 129
	mov	DWORD PTR _rc$[ebp], -1
; Line 134
	mov	eax, DWORD PTR _mutex$[ebp]
	push	eax
	call	DWORD PTR __imp__ReleaseMutex@4
	test	eax, eax
	jne	SHORT $LN2@Thread_unl
; Line 135
	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _rc$[ebp], eax
; Line 136
	jmp	SHORT $LN1@Thread_unl
$LN2@Thread_unl:
; Line 137
	mov	DWORD PTR _rc$[ebp], 0
$LN1@Thread_unl:
; Line 142
	mov	eax, DWORD PTR _rc$[ebp]
; Line 143
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_unlock_mutex ENDP
_TEXT	ENDS
PUBLIC	_Thread_destroy_mutex
EXTRN	__imp__CloseHandle@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_mutex$ = 8						; size = 4
_Thread_destroy_mutex PROC
; Line 151
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 152
	mov	DWORD PTR _rc$[ebp], 0
; Line 154
	push	3
	push	154					; 0000009aH
	push	OFFSET $SG81486
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 156
	mov	eax, DWORD PTR _mutex$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	mov	DWORD PTR _rc$[ebp], eax
; Line 161
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	161					; 000000a1H
	push	OFFSET $SG81487
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 162
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_destroy_mutex ENDP
_TEXT	ENDS
PUBLIC	_Thread_getid
EXTRN	__imp__GetCurrentThreadId@0:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_Thread_getid PROC
; Line 170
	push	ebp
	mov	ebp, esp
; Line 172
	call	DWORD PTR __imp__GetCurrentThreadId@0
; Line 176
	pop	ebp
	ret	0
_Thread_getid ENDP
_TEXT	ENDS
PUBLIC	_Thread_create_sem
EXTRN	__imp__CreateEventA@16:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_sem$ = -8						; size = 4
_rc$ = -4						; size = 4
_Thread_create_sem PROC
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 199
	mov	DWORD PTR _sem$[ebp], 0
; Line 200
	mov	DWORD PTR _rc$[ebp], 0
; Line 202
	push	3
	push	202					; 000000caH
	push	OFFSET $SG81493
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 209
	push	0
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateEventA@16
	mov	DWORD PTR _sem$[ebp], eax
; Line 235
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	235					; 000000ebH
	push	OFFSET $SG81496
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 236
	mov	eax, DWORD PTR _sem$[ebp]
; Line 237
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_create_sem ENDP
_TEXT	ENDS
PUBLIC	_Thread_wait_sem
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_sem$ = 8						; size = 4
_timeout$ = 12						; size = 4
_Thread_wait_sem PROC
; Line 247
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 251
	mov	DWORD PTR _rc$[ebp], -1
; Line 263
	push	3
	push	263					; 00000107H
	push	OFFSET $SG81503
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 265
	mov	eax, DWORD PTR _timeout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sem$[ebp]
	push	ecx
	call	DWORD PTR __imp__WaitForSingleObject@8
	mov	DWORD PTR _rc$[ebp], eax
; Line 284
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	284					; 0000011cH
	push	OFFSET $SG81504
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 285
	mov	eax, DWORD PTR _rc$[ebp]
; Line 286
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_wait_sem ENDP
_TEXT	ENDS
PUBLIC	_Thread_check_sem
; Function compile flags: /Odtp
_TEXT	SEGMENT
_sem$ = 8						; size = 4
_Thread_check_sem PROC
; Line 295
	push	ebp
	mov	ebp, esp
; Line 297
	push	0
	mov	eax, DWORD PTR _sem$[ebp]
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 303
	pop	ebp
	ret	0
_Thread_check_sem ENDP
_TEXT	ENDS
PUBLIC	_Thread_post_sem
EXTRN	__imp__SetEvent@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_sem$ = 8						; size = 4
_Thread_post_sem PROC
; Line 312
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 313
	mov	DWORD PTR _rc$[ebp], 0
; Line 315
	push	3
	push	315					; 0000013bH
	push	OFFSET $SG81513
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 317
	mov	eax, DWORD PTR _sem$[ebp]
	push	eax
	call	DWORD PTR __imp__SetEvent@4
	test	eax, eax
	jne	SHORT $LN1@Thread_pos
; Line 318
	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _rc$[ebp], eax
$LN1@Thread_pos:
; Line 324
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	324					; 00000144H
	push	OFFSET $SG81515
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 325
	mov	eax, DWORD PTR _rc$[ebp]
; Line 326
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_post_sem ENDP
_TEXT	ENDS
PUBLIC	_Thread_destroy_sem
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_sem$ = 8						; size = 4
_Thread_destroy_sem PROC
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 335
	mov	DWORD PTR _rc$[ebp], 0
; Line 337
	push	3
	push	337					; 00000151H
	push	OFFSET $SG81520
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 339
	mov	eax, DWORD PTR _sem$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	mov	DWORD PTR _rc$[ebp], eax
; Line 357
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	357					; 00000165H
	push	OFFSET $SG81521
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 358
	mov	eax, DWORD PTR _rc$[ebp]
; Line 359
	mov	esp, ebp
	pop	ebp
	ret	0
_Thread_destroy_sem ENDP
_TEXT	ENDS
END
