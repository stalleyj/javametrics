; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\Paho\org.eclipse.paho.mqtt.c\src\MQTTProtocolOut.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_Log_levels:DWORD
$SG84478 DB	'MQTTProtocol_addressPort', 00H
	ORG $+3
$SG84484 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolOut.c', 00H
	ORG $+2
$SG84488 DB	'MQTTProtocol_addressPort', 00H
	ORG $+3
$SG84499 DB	'MQTTProtocol_connect', 00H
	ORG $+3
$SG84508 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolOut.c', 00H
	ORG $+2
$SG84509 DB	'MQTTProtocol_connect', 00H
	ORG $+3
$SG84518 DB	'MQTTProtocol_handlePingresps', 00H
	ORG $+3
$SG84521 DB	'MQTTProtocol_handlePingresps', 00H
	ORG $+3
$SG84532 DB	'MQTTProtocol_subscribe', 00H
	ORG $+1
$SG84533 DB	'MQTTProtocol_subscribe', 00H
	ORG $+1
$SG84544 DB	'MQTTProtocol_handleSubacks', 00H
	ORG $+1
$SG84547 DB	'MQTTProtocol_handleSubacks', 00H
	ORG $+1
$SG84556 DB	'MQTTProtocol_unsubscribe', 00H
	ORG $+3
$SG84557 DB	'MQTTProtocol_unsubscribe', 00H
	ORG $+3
$SG84568 DB	'MQTTProtocol_handleUnsubacks', 00H
	ORG $+3
$SG84571 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolOut.c', 00H
	ORG $+2
$SG84572 DB	'MQTTProtocol_handleUnsubacks', 00H
_DATA	ENDS
PUBLIC	_MQTTProtocol_addressPort
EXTRN	_StackTrace_exit:PROC
EXTRN	_strlen:PROC
EXTRN	_MQTTStrncpy:PROC
EXTRN	__imp__atoi:PROC
EXTRN	_mymalloc:PROC
EXTRN	_StackTrace_entry:PROC
EXTRN	__imp__strrchr:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_addr_len$84483 = -16					; size = 4
_colon_pos$ = -12					; size = 4
_buf$ = -8						; size = 4
_len$ = -4						; size = 4
_uri$ = 8						; size = 4
_port$ = 12						; size = 4
_MQTTProtocol_addressPort PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttprotocolout.c
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 46
	push	58					; 0000003aH
	mov	eax, DWORD PTR _uri$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	mov	DWORD PTR _colon_pos$[ebp], eax
; Line 47
	mov	ecx, DWORD PTR _uri$[ebp]
	mov	DWORD PTR _buf$[ebp], ecx
; Line 50
	push	3
	push	50					; 00000032H
	push	OFFSET $SG84478
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 51
	mov	edx, DWORD PTR _uri$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 91					; 0000005bH
	jne	SHORT $LN5@MQTTProtoc
; Line 53
	push	93					; 0000005dH
	mov	ecx, DWORD PTR _uri$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	DWORD PTR _colon_pos$[ebp], eax
	jae	SHORT $LN5@MQTTProtoc
; Line 54
	mov	DWORD PTR _colon_pos$[ebp], 0
$LN5@MQTTProtoc:
; Line 57
	cmp	DWORD PTR _colon_pos$[ebp], 0
	je	SHORT $LN3@MQTTProtoc
; Line 59
	mov	edx, DWORD PTR _colon_pos$[ebp]
	sub	edx, DWORD PTR _uri$[ebp]
	mov	DWORD PTR _addr_len$84483[ebp], edx
; Line 60
	mov	eax, DWORD PTR _addr_len$84483[ebp]
	add	eax, 1
	push	eax
	push	60					; 0000003cH
	push	OFFSET $SG84484
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$[ebp], eax
; Line 61
	mov	ecx, DWORD PTR _colon_pos$[ebp]
	add	ecx, 1
	push	ecx
	call	DWORD PTR __imp__atoi
	add	esp, 4
	mov	edx, DWORD PTR _port$[ebp]
	mov	DWORD PTR [edx], eax
; Line 62
	mov	eax, DWORD PTR _addr_len$84483[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _uri$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_MQTTStrncpy
	add	esp, 12					; 0000000cH
; Line 64
	jmp	SHORT $LN2@MQTTProtoc
$LN3@MQTTProtoc:
; Line 65
	mov	eax, DWORD PTR _port$[ebp]
	mov	DWORD PTR [eax], 1883			; 0000075bH
$LN2@MQTTProtoc:
; Line 67
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 68
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	movsx	eax, BYTE PTR [edx-1]
	cmp	eax, 93					; 0000005dH
	jne	SHORT $LN1@MQTTProtoc
; Line 69
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx-1], 0
$LN1@MQTTProtoc:
; Line 71
	push	3
	push	0
	push	71					; 00000047H
	push	OFFSET $SG84488
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 72
	mov	eax, DWORD PTR _buf$[ebp]
; Line 73
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_addressPort ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_connect
EXTRN	_myfree:PROC
EXTRN	_MQTTPacket_send_connect:PROC
EXTRN	_Socket_new:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_addr$ = -12						; size = 4
_rc$ = -8						; size = 4
_port$ = -4						; size = 4
_ip_address$ = 8					; size = 4
_aClient$ = 12						; size = 4
_MQTTVersion$ = 16					; size = 4
_MQTTProtocol_connect PROC
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 93
	push	3
	push	93					; 0000005dH
	push	OFFSET $SG84499
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 94
	mov	eax, DWORD PTR _aClient$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	or	ecx, 4
	mov	edx, DWORD PTR _aClient$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 96
	lea	eax, DWORD PTR _port$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ip_address$[ebp]
	push	ecx
	call	_MQTTProtocol_addressPort
	add	esp, 8
	mov	DWORD PTR _addr$[ebp], eax
; Line 97
	mov	edx, DWORD PTR _aClient$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _port$[ebp]
	push	eax
	mov	ecx, DWORD PTR _addr$[ebp]
	push	ecx
	call	_Socket_new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
; Line 98
	cmp	DWORD PTR _rc$[ebp], 10036		; 00002734H
	je	SHORT $LN7@MQTTProtoc@2
	cmp	DWORD PTR _rc$[ebp], 10035		; 00002733H
	jne	SHORT $LN8@MQTTProtoc@2
$LN7@MQTTProtoc@2:
; Line 99
	mov	edx, DWORD PTR _aClient$[ebp]
	mov	eax, DWORD PTR [edx+12]
	and	eax, -241				; ffffff0fH
	or	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _aClient$[ebp]
	mov	DWORD PTR [ecx+12], eax
	jmp	SHORT $LN6@MQTTProtoc@2
$LN8@MQTTProtoc@2:
; Line 100
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN6@MQTTProtoc@2
; Line 116
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN6@MQTTProtoc@2
; Line 119
	mov	edx, DWORD PTR _MQTTVersion$[ebp]
	push	edx
	mov	eax, DWORD PTR _aClient$[ebp]
	push	eax
	call	_MQTTPacket_send_connect
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN3@MQTTProtoc@2
; Line 120
	mov	ecx, DWORD PTR _aClient$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, -241				; ffffff0fH
	or	edx, 48					; 00000030H
	mov	eax, DWORD PTR _aClient$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 121
	jmp	SHORT $LN6@MQTTProtoc@2
$LN3@MQTTProtoc@2:
; Line 122
	mov	ecx, DWORD PTR _aClient$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, -241				; ffffff0fH
	mov	eax, DWORD PTR _aClient$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN6@MQTTProtoc@2:
; Line 125
	mov	ecx, DWORD PTR _addr$[ebp]
	cmp	ecx, DWORD PTR _ip_address$[ebp]
	je	SHORT $LN1@MQTTProtoc@2
; Line 126
	mov	edx, DWORD PTR _addr$[ebp]
	push	edx
	push	126					; 0000007eH
	push	OFFSET $SG84508
	call	_myfree
	add	esp, 12					; 0000000cH
$LN1@MQTTProtoc@2:
; Line 128
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	128					; 00000080H
	push	OFFSET $SG84509
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 129
	mov	eax, DWORD PTR _rc$[ebp]
; Line 130
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_connect ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_handlePingresps
EXTRN	_Log:PROC
EXTRN	_ListFindItem:PROC
EXTRN	_bstate:DWORD
EXTRN	_clientSocketCompare:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_client$ = -8						; size = 4
_rc$ = -4						; size = 4
_pack$ = 8						; size = 4
_sock$ = 12						; size = 4
_MQTTProtocol_handlePingresps PROC
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 141
	mov	DWORD PTR _client$[ebp], 0
; Line 142
	mov	DWORD PTR _rc$[ebp], 0
; Line 144
	push	3
	push	144					; 00000090H
	push	OFFSET $SG84518
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 145
	push	OFFSET _clientSocketCompare
	lea	eax, DWORD PTR _sock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bstate
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp], eax
; Line 146
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sock$[ebp]
	push	eax
	push	0
	push	21					; 00000015H
	push	4
	call	_Log
	add	esp, 20					; 00000014H
; Line 147
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, -9					; fffffff7H
	mov	eax, DWORD PTR _client$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 148
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	148					; 00000094H
	push	OFFSET $SG84521
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 149
	mov	eax, DWORD PTR _rc$[ebp]
; Line 150
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_handlePingresps ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_subscribe
EXTRN	_MQTTPacket_send_subscribe:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_client$ = 8						; size = 4
_topics$ = 12						; size = 4
_qoss$ = 16						; size = 4
_msgID$ = 20						; size = 4
_MQTTProtocol_subscribe PROC
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 162
	mov	DWORD PTR _rc$[ebp], 0
; Line 164
	push	3
	push	164					; 000000a4H
	push	OFFSET $SG84532
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 166
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	push	0
	mov	eax, DWORD PTR _msgID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _qoss$[ebp]
	push	ecx
	mov	edx, DWORD PTR _topics$[ebp]
	push	edx
	call	_MQTTPacket_send_subscribe
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rc$[ebp], eax
; Line 167
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	167					; 000000a7H
	push	OFFSET $SG84533
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 168
	mov	eax, DWORD PTR _rc$[ebp]
; Line 169
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_subscribe ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_handleSubacks
EXTRN	_MQTTPacket_freeSuback:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_client$ = -12						; size = 4
_suback$ = -8						; size = 4
_rc$ = -4						; size = 4
_pack$ = 8						; size = 4
_sock$ = 12						; size = 4
_MQTTProtocol_handleSubacks PROC
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 180
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR _suback$[ebp], eax
; Line 181
	mov	DWORD PTR _client$[ebp], 0
; Line 182
	mov	DWORD PTR _rc$[ebp], 0
; Line 184
	push	3
	push	184					; 000000b8H
	push	OFFSET $SG84544
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 185
	push	OFFSET _clientSocketCompare
	lea	ecx, DWORD PTR _sock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bstate
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp], ecx
; Line 186
	mov	edx, DWORD PTR _suback$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sock$[ebp]
	push	eax
	push	0
	push	23					; 00000017H
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 187
	mov	ecx, DWORD PTR _suback$[ebp]
	push	ecx
	call	_MQTTPacket_freeSuback
	add	esp, 4
; Line 188
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	188					; 000000bcH
	push	OFFSET $SG84547
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 189
	mov	eax, DWORD PTR _rc$[ebp]
; Line 190
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_handleSubacks ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_unsubscribe
EXTRN	_MQTTPacket_send_unsubscribe:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_client$ = 8						; size = 4
_topics$ = 12						; size = 4
_msgID$ = 16						; size = 4
_MQTTProtocol_unsubscribe PROC
; Line 200
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 201
	mov	DWORD PTR _rc$[ebp], 0
; Line 203
	push	3
	push	203					; 000000cbH
	push	OFFSET $SG84556
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 205
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	push	0
	mov	eax, DWORD PTR _msgID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _topics$[ebp]
	push	ecx
	call	_MQTTPacket_send_unsubscribe
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax
; Line 206
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	206					; 000000ceH
	push	OFFSET $SG84557
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 207
	mov	eax, DWORD PTR _rc$[ebp]
; Line 208
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_unsubscribe ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_handleUnsubacks
; Function compile flags: /Odtp
_TEXT	SEGMENT
_client$ = -12						; size = 4
_unsuback$ = -8						; size = 4
_rc$ = -4						; size = 4
_pack$ = 8						; size = 4
_sock$ = 12						; size = 4
_MQTTProtocol_handleUnsubacks PROC
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 219
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR _unsuback$[ebp], eax
; Line 220
	mov	DWORD PTR _client$[ebp], 0
; Line 221
	mov	DWORD PTR _rc$[ebp], 0
; Line 223
	push	3
	push	223					; 000000dfH
	push	OFFSET $SG84568
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 224
	push	OFFSET _clientSocketCompare
	lea	ecx, DWORD PTR _sock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bstate
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp], ecx
; Line 225
	mov	edx, DWORD PTR _unsuback$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sock$[ebp]
	push	eax
	push	0
	push	24					; 00000018H
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 226
	mov	ecx, DWORD PTR _unsuback$[ebp]
	push	ecx
	push	226					; 000000e2H
	push	OFFSET $SG84571
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 227
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	227					; 000000e3H
	push	OFFSET $SG84572
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 228
	mov	eax, DWORD PTR _rc$[ebp]
; Line 229
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_handleUnsubacks ENDP
_TEXT	ENDS
END
