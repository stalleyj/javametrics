; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\Paho\org.eclipse.paho.mqtt.c\src\MQTTProtocolClient.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_Log_levels:DWORD
$SG84662 DB	'MQTTProtocol_assignMsgId', 00H
	ORG $+3
$SG84669 DB	'MQTTProtocol_assignMsgId', 00H
	ORG $+3
$SG84679 DB	'MQTTProtocol_storeQoS0', 00H
	ORG $+1
$SG84681 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84686 DB	'Error updating write', 00H
	ORG $+3
$SG84688 DB	'MQTTProtocol_storeQoS0', 00H
	ORG $+1
$SG84700 DB	'MQTTProtocol_startPublishCommon', 00H
$SG84702 DB	'MQTTProtocol_startPublishCommon', 00H
$SG84716 DB	'MQTTProtocol_startPublish', 00H
	ORG $+2
$SG84718 DB	'MQTTProtocol_startPublish', 00H
	ORG $+2
$SG84730 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84731 DB	'MQTTProtocol_createMessage', 00H
	ORG $+1
$SG84741 DB	'MQTTProtocol_createMessage', 00H
	ORG $+1
$SG84749 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84750 DB	'MQTTProtocol_storePublication', 00H
	ORG $+2
$SG84753 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84755 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84757 DB	'MQTTProtocol_storePublication', 00H
	ORG $+2
$SG84761 DB	'MQTTProtocol_removePublication', 00H
	ORG $+1
$SG84763 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84764 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84766 DB	'MQTTProtocol_removePublication', 00H
	ORG $+1
$SG84779 DB	'MQTTProtocol_handlePublishes', 00H
	ORG $+3
$SG84792 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84802 DB	'MQTTProtocol_handlePublishes', 00H
	ORG $+3
$SG84813 DB	'MQTTProtocol_handlePubacks', 00H
	ORG $+1
$SG84819 DB	'PUBACK', 00H
	ORG $+1
$SG84825 DB	'PUBACK', 00H
	ORG $+1
$SG84828 DB	'PUBACK', 00H
	ORG $+1
$SG84829 DB	's-', 00H
	ORG $+1
$SG84830 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84831 DB	'MQTTProtocol_handlePubacks', 00H
	ORG $+1
$SG84842 DB	'MQTTProtocol_handlePubrecs', 00H
	ORG $+1
$SG84850 DB	'PUBREC', 00H
	ORG $+1
$SG84857 DB	'PUBREC', 00H
	ORG $+1
$SG84862 DB	'PUBREC', 00H
	ORG $+1
$SG84864 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84865 DB	'MQTTProtocol_handlePubrecs', 00H
	ORG $+1
$SG84876 DB	'MQTTProtocol_handlePubrels', 00H
	ORG $+1
$SG84883 DB	'PUBREL', 00H
	ORG $+1
$SG84890 DB	'PUBREL', 00H
	ORG $+1
$SG84894 DB	'PUBREL', 00H
	ORG $+1
$SG84897 DB	'r-', 00H
	ORG $+1
$SG84898 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84899 DB	'MQTTProtocol_handlePubrels', 00H
	ORG $+1
$SG84910 DB	'MQTTProtocol_handlePubcomps', 00H
$SG84917 DB	'PUBCOMP', 00H
$SG84923 DB	'PUBCOMP', 00H
$SG84927 DB	'PUBCOMP', 00H
$SG84930 DB	'PUBCOMP', 00H
$SG84931 DB	's-', 00H
	ORG $+1
$SG84932 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG84933 DB	'MQTTProtocol_handlePubcomps', 00H
$SG84939 DB	'MQTTProtocol_keepalive', 00H
	ORG $+1
$SG84981 DB	'PUBLISH', 00H
$SG85006 DB	'MQTTProtocol_retry', 00H
	ORG $+1
$SG84950 DB	'Error sending PINGREQ for client %s on socket %d, discon'
	DB	'necting', 00H
$SG84953 DB	'PINGRESP not received in keepalive interval for client %'
	DB	's on socket %d, disconnecting', 00H
	ORG $+2
$SG84955 DB	'MQTTProtocol_keepalive', 00H
	ORG $+1
$SG84966 DB	'MQTTProtocol_retries', 00H
	ORG $+3
$SG84990 DB	'PUBREL', 00H
	ORG $+1
$SG84996 DB	'MQTTProtocol_retries', 00H
	ORG $+3
$SG85017 DB	'MQTTProtocol_retry', 00H
	ORG $+1
$SG85021 DB	'MQTTProtocol_freeClient', 00H
$SG85022 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG85024 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG85025 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG85026 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
	ORG $+3
$SG85028 DB	'MQTTProtocol_freeClient', 00H
$SG85034 DB	'MQTTProtocol_emptyMessageList', 00H
	ORG $+2
$SG85041 DB	'MQTTProtocol_emptyMessageList', 00H
	ORG $+2
$SG85045 DB	'MQTTProtocol_freeMessageList', 00H
	ORG $+3
$SG85047 DB	'MQTTProtocol_freeMessageList', 00H
	ORG $+3
$SG85057 DB	'MQTTStrncpy', 00H
$SG85059 DB	'the src string is truncated', 00H
$SG85064 DB	'MQTTStrncpy', 00H
$SG85070 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTProtocolClient.c'
	DB	00H
_DATA	ENDS
PUBLIC	_messageIDCompare
; Function compile flags: /Odtp
_TEXT	SEGMENT
_msg$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_messageIDCompare PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttprotocolclient.c
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 58
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _msg$[ebp], eax
; Line 59
	mov	ecx, DWORD PTR _msg$[ebp]
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	eax, ecx
; Line 60
	mov	esp, ebp
	pop	ebp
	ret	0
_messageIDCompare ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_assignMsgId
EXTRN	_StackTrace_exit:PROC
EXTRN	_ListFindItem:PROC
EXTRN	_StackTrace_entry:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv79 = -16						; size = 4
tv70 = -12						; size = 4
_msgid$ = -8						; size = 4
_start_msgid$ = -4					; size = 4
_client$ = 8						; size = 4
_MQTTProtocol_assignMsgId PROC
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 71
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _start_msgid$[ebp], ecx
; Line 72
	mov	edx, DWORD PTR _start_msgid$[ebp]
	mov	DWORD PTR _msgid$[ebp], edx
; Line 74
	push	3
	push	74					; 0000004aH
	push	OFFSET $SG84662
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 75
	cmp	DWORD PTR _msgid$[ebp], 65535		; 0000ffffH
	jne	SHORT $LN7@MQTTProtoc
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN8@MQTTProtoc
$LN7@MQTTProtoc:
	mov	eax, DWORD PTR _msgid$[ebp]
	add	eax, 1
	mov	DWORD PTR tv70[ebp], eax
$LN8@MQTTProtoc:
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _msgid$[ebp], ecx
$LN4@MQTTProtoc:
; Line 76
	push	OFFSET _messageIDCompare
	lea	edx, DWORD PTR _msgid$[ebp]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@MQTTProtoc
; Line 78
	cmp	DWORD PTR _msgid$[ebp], 65535		; 0000ffffH
	jne	SHORT $LN9@MQTTProtoc
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN10@MQTTProtoc
$LN9@MQTTProtoc:
	mov	edx, DWORD PTR _msgid$[ebp]
	add	edx, 1
	mov	DWORD PTR tv79[ebp], edx
$LN10@MQTTProtoc:
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR _msgid$[ebp], eax
; Line 79
	mov	ecx, DWORD PTR _msgid$[ebp]
	cmp	ecx, DWORD PTR _start_msgid$[ebp]
	jne	SHORT $LN2@MQTTProtoc
; Line 81
	mov	DWORD PTR _msgid$[ebp], 0
; Line 82
	jmp	SHORT $LN3@MQTTProtoc
$LN2@MQTTProtoc:
; Line 84
	jmp	SHORT $LN4@MQTTProtoc
$LN3@MQTTProtoc:
; Line 85
	cmp	DWORD PTR _msgid$[ebp], 0
	je	SHORT $LN1@MQTTProtoc
; Line 86
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR _msgid$[ebp]
	mov	DWORD PTR [edx+40], eax
$LN1@MQTTProtoc:
; Line 87
	push	3
	lea	ecx, DWORD PTR _msgid$[ebp]
	push	ecx
	push	87					; 00000057H
	push	OFFSET $SG84669
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 88
	mov	eax, DWORD PTR _msgid$[ebp]
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_assignMsgId ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_storePublication
PUBLIC	_MQTTProtocol_storeQoS0
EXTRN	_SocketBuffer_updateWrite:PROC
EXTRN	_ListAppend:PROC
EXTRN	_state:BYTE
EXTRN	_Log:PROC
EXTRN	_mymalloc:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_pw$ = -8						; size = 4
_len$ = -4						; size = 4
_pubclient$ = 8						; size = 4
_publish$ = 12						; size = 4
_MQTTProtocol_storeQoS0 PROC
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 95
	mov	DWORD PTR _pw$[ebp], 0
; Line 97
	push	3
	push	97					; 00000061H
	push	OFFSET $SG84679
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 99
	push	8
	push	99					; 00000063H
	push	OFFSET $SG84681
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pw$[ebp], eax
; Line 100
	push	0
	push	12					; 0000000cH
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
; Line 101
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _publish$[ebp]
	push	ecx
	call	_MQTTProtocol_storePublication
	add	esp, 8
	mov	edx, DWORD PTR _pw$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 102
	mov	eax, DWORD PTR _pw$[ebp]
	mov	ecx, DWORD PTR _pubclient$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], edx
; Line 103
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pw$[ebp]
	push	ecx
	push	OFFSET _state+28
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 106
	mov	edx, DWORD PTR _pw$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pw$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pw$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_SocketBuffer_updateWrite
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@MQTTProtoc@2
; Line 107
	push	OFFSET $SG84686
	push	0
	push	6
	call	_Log
	add	esp, 12					; 0000000cH
$LN1@MQTTProtoc@2:
; Line 108
	push	3
	push	0
	push	108					; 0000006cH
	push	OFFSET $SG84688
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 109
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_storeQoS0 ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_startPublishCommon
EXTRN	_MQTTPacket_send_publish:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_pubclient$ = 8						; size = 4
_publish$ = 12						; size = 4
_qos$ = 16						; size = 4
_retained$ = 20						; size = 4
_MQTTProtocol_startPublishCommon PROC
; Line 121
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 122
	mov	DWORD PTR _rc$[ebp], 0
; Line 124
	push	3
	push	124					; 0000007cH
	push	OFFSET $SG84700
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 125
	mov	eax, DWORD PTR _pubclient$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pubclient$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _retained$[ebp]
	push	eax
	mov	ecx, DWORD PTR _qos$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _publish$[ebp]
	push	edx
	call	_MQTTPacket_send_publish
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rc$[ebp], eax
; Line 126
	cmp	DWORD PTR _qos$[ebp], 0
	jne	SHORT $LN1@MQTTProtoc@3
	cmp	DWORD PTR _rc$[ebp], -22		; ffffffeaH
	jne	SHORT $LN1@MQTTProtoc@3
; Line 127
	mov	eax, DWORD PTR _publish$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pubclient$[ebp]
	push	ecx
	call	_MQTTProtocol_storeQoS0
	add	esp, 8
$LN1@MQTTProtoc@3:
; Line 128
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	128					; 00000080H
	push	OFFSET $SG84702
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 129
	mov	eax, DWORD PTR _rc$[ebp]
; Line 130
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_startPublishCommon ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_createMessage
PUBLIC	_MQTTProtocol_startPublish
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -28						; size = 4
_p$ = -24						; size = 24
_pubclient$ = 8						; size = 4
_publish$ = 12						; size = 4
_qos$ = 16						; size = 4
_retained$ = 20						; size = 4
_mm$ = 24						; size = 4
_MQTTProtocol_startPublish PROC
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 144
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _p$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _p$[ebp+12], edx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _p$[ebp+16], ecx
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR _p$[ebp+20], edx
; Line 145
	mov	DWORD PTR _rc$[ebp], 0
; Line 147
	push	3
	push	147					; 00000093H
	push	OFFSET $SG84716
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 148
	cmp	DWORD PTR _qos$[ebp], 0
	jle	SHORT $LN1@MQTTProtoc@4
; Line 150
	mov	eax, DWORD PTR _retained$[ebp]
	push	eax
	mov	ecx, DWORD PTR _qos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mm$[ebp]
	push	edx
	mov	eax, DWORD PTR _publish$[ebp]
	push	eax
	call	_MQTTProtocol_createMessage
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 151
	mov	edx, DWORD PTR _mm$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _mm$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pubclient$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 154
	mov	eax, DWORD PTR _mm$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _p$[ebp+16], eax
; Line 155
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp+4], ecx
$LN1@MQTTProtoc@4:
; Line 157
	mov	edx, DWORD PTR _retained$[ebp]
	push	edx
	mov	eax, DWORD PTR _qos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pubclient$[ebp]
	push	edx
	call	_MQTTProtocol_startPublishCommon
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
; Line 158
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	158					; 0000009eH
	push	OFFSET $SG84718
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 159
	mov	eax, DWORD PTR _rc$[ebp]
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_startPublish ENDP
; Function compile flags: /Odtp
_len1$84737 = -8					; size = 4
_m$ = -4						; size = 4
_publish$ = 8						; size = 4
_mm$ = 12						; size = 4
_qos$ = 16						; size = 4
_retained$ = 20						; size = 4
_MQTTProtocol_createMessage PROC
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 173
	push	32					; 00000020H
	push	173					; 000000adH
	push	OFFSET $SG84730
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _m$[ebp], eax
; Line 175
	push	3
	push	175					; 000000afH
	push	OFFSET $SG84731
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 176
	mov	eax, DWORD PTR _m$[ebp]
	mov	DWORD PTR [eax+28], 32			; 00000020H
; Line 177
	mov	ecx, DWORD PTR _mm$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@MQTTProtoc@5
	mov	edx, DWORD PTR _mm$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN4@MQTTProtoc@5
$LN3@MQTTProtoc@5:
; Line 180
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	edx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 181
	lea	eax, DWORD PTR _len1$84737[ebp]
	push	eax
	mov	ecx, DWORD PTR _publish$[ebp]
	push	ecx
	call	_MQTTProtocol_storePublication
	add	esp, 8
	mov	edx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 182
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, DWORD PTR _len1$84737[ebp]
	mov	edx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [edx+28], ecx
; Line 184
	jmp	SHORT $LN2@MQTTProtoc@5
$LN4@MQTTProtoc@5:
; Line 186
	mov	eax, DWORD PTR _mm$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+16], eax
; Line 187
	mov	edx, DWORD PTR _mm$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
$LN2@MQTTProtoc@5:
; Line 189
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
; Line 190
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR _qos$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 191
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR _retained$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 192
	mov	ecx, DWORD PTR _m$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	_time
	add	esp, 4
; Line 193
	cmp	DWORD PTR _qos$[ebp], 2
	jne	SHORT $LN1@MQTTProtoc@5
; Line 194
	mov	edx, DWORD PTR _m$[ebp]
	mov	BYTE PTR [edx+24], 5
$LN1@MQTTProtoc@5:
; Line 195
	push	3
	push	0
	push	195					; 000000c3H
	push	OFFSET $SG84741
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 196
	mov	eax, DWORD PTR _m$[ebp]
; Line 197
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_createMessage ENDP
_TEXT	ENDS
EXTRN	__imp___time64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 132
	push	ebp
	mov	ebp, esp
; Line 133
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
; Line 134
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	_Heap_findItem:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p$ = -4						; size = 4
_publish$ = 8						; size = 4
_len$ = 12						; size = 4
_MQTTProtocol_storePublication PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttprotocolclient.c
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 208
	push	20					; 00000014H
	push	208					; 000000d0H
	push	OFFSET $SG84749
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp], eax
; Line 210
	push	3
	push	210					; 000000d2H
	push	OFFSET $SG84750
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 211
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+16], 1
; Line 213
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 214
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_Heap_findItem
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@MQTTProtoc@6
; Line 215
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx], eax
; Line 216
	jmp	SHORT $LN1@MQTTProtoc@6
$LN2@MQTTProtoc@6:
; Line 218
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	218					; 000000daH
	push	OFFSET $SG84753
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 219
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_strcpy
	add	esp, 8
$LN1@MQTTProtoc@6:
; Line 221
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 223
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
; Line 224
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+12], edx
; Line 225
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	225					; 000000e1H
	push	OFFSET $SG84755
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 226
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 227
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _publish$[ebp]
	add	ecx, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 229
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	OFFSET _state
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 230
	push	3
	push	0
	push	230					; 000000e6H
	push	OFFSET $SG84757
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 231
	mov	eax, DWORD PTR _p$[ebp]
; Line 232
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_storePublication ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_removePublication
EXTRN	_ListRemove:PROC
EXTRN	_myfree:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv69 = -4						; size = 4
_p$ = 8							; size = 4
_MQTTProtocol_removePublication PROC
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 240
	push	3
	push	240					; 000000f0H
	push	OFFSET $SG84761
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 241
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR [edx+16], eax
	cmp	DWORD PTR tv69[ebp], 0
	jne	SHORT $LN1@MQTTProtoc@7
; Line 243
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	243					; 000000f3H
	push	OFFSET $SG84763
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 244
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	244					; 000000f4H
	push	OFFSET $SG84764
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 245
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	push	OFFSET _state
	call	_ListRemove
	add	esp, 8
$LN1@MQTTProtoc@7:
; Line 247
	push	3
	push	0
	push	247					; 000000f7H
	push	OFFSET $SG84766
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_removePublication ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_handlePublishes
EXTRN	_MQTTPacket_freePublish:PROC
EXTRN	_MQTTPacket_send_pubrec:PROC
EXTRN	_ListInsert:PROC
EXTRN	_MQTTPacket_send_puback:PROC
EXTRN	_Protocol_processPublication:PROC
EXTRN	_bstate:DWORD
EXTRN	_clientSocketCompare:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv78 = -40						; size = 4
_msg$84796 = -36					; size = 4
_m$84790 = -32						; size = 4
_len$84787 = -28					; size = 4
_listElem$84788 = -24					; size = 4
_p$84793 = -20						; size = 4
_client$ = -16						; size = 4
_clientid$ = -12					; size = 4
_publish$ = -8						; size = 4
_rc$ = -4						; size = 4
_pack$ = 8						; size = 4
_sock$ = 12						; size = 4
_MQTTProtocol_handlePublishes PROC
; Line 257
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
; Line 258
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR _publish$[ebp], eax
; Line 259
	mov	DWORD PTR _client$[ebp], 0
; Line 260
	mov	DWORD PTR _clientid$[ebp], 0
; Line 261
	mov	DWORD PTR _rc$[ebp], 0
; Line 263
	push	3
	push	263					; 00000107H
	push	OFFSET $SG84779
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 264
	push	OFFSET _clientSocketCompare
	lea	ecx, DWORD PTR _sock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bstate
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp], ecx
; Line 265
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _clientid$[ebp], eax
; Line 267
	mov	ecx, DWORD PTR _publish$[ebp]
	cmp	DWORD PTR [ecx+20], 20			; 00000014H
	jle	SHORT $LN10@MQTTProtoc@8
	mov	DWORD PTR tv78[ebp], 20			; 00000014H
	jmp	SHORT $LN11@MQTTProtoc@8
$LN10@MQTTProtoc@8:
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR tv78[ebp], eax
$LN11@MQTTProtoc@8:
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR tv78[ebp]
	push	eax
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 1
	push	edx
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 1
	and	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _clientid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sock$[ebp]
	push	edx
	push	0
	push	11					; 0000000bH
	push	4
	call	_Log
	add	esp, 40					; 00000028H
; Line 269
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 1
	and	ecx, 3
	jne	SHORT $LN7@MQTTProtoc@8
; Line 270
	mov	edx, DWORD PTR _client$[ebp]
	push	edx
	mov	eax, DWORD PTR _publish$[ebp]
	push	eax
	call	_Protocol_processPublication
	add	esp, 8
	jmp	$LN6@MQTTProtoc@8
$LN7@MQTTProtoc@8:
; Line 271
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 1
	and	edx, 3
	cmp	edx, 1
	jne	SHORT $LN5@MQTTProtoc@8
; Line 274
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_MQTTPacket_send_puback
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
; Line 276
	mov	edx, DWORD PTR _client$[ebp]
	push	edx
	mov	eax, DWORD PTR _publish$[ebp]
	push	eax
	call	_Protocol_processPublication
	add	esp, 8
	jmp	$LN6@MQTTProtoc@8
$LN5@MQTTProtoc@8:
; Line 278
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 1
	and	edx, 3
	cmp	edx, 2
	jne	$LN6@MQTTProtoc@8
; Line 282
	mov	DWORD PTR _listElem$84788[ebp], 0
; Line 283
	push	32					; 00000020H
	push	283					; 0000011bH
	push	OFFSET $SG84792
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _m$84790[ebp], eax
; Line 284
	lea	eax, DWORD PTR _len$84787[ebp]
	push	eax
	mov	ecx, DWORD PTR _publish$[ebp]
	push	ecx
	call	_MQTTProtocol_storePublication
	add	esp, 8
	mov	DWORD PTR _p$84793[ebp], eax
; Line 285
	mov	edx, DWORD PTR _m$84790[ebp]
	mov	eax, DWORD PTR _p$84793[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 286
	mov	ecx, DWORD PTR _m$84790[ebp]
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+8], eax
; Line 287
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 1
	and	edx, 3
	mov	eax, DWORD PTR _m$84790[ebp]
	mov	DWORD PTR [eax], edx
; Line 288
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 1
	mov	eax, DWORD PTR _m$84790[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 289
	mov	ecx, DWORD PTR _m$84790[ebp]
	mov	BYTE PTR [ecx+24], 6
; Line 290
	push	OFFSET _messageIDCompare
	mov	edx, DWORD PTR _m$84790[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _listElem$84788[ebp], eax
	cmp	DWORD PTR _listElem$84788[ebp], 0
	je	SHORT $LN2@MQTTProtoc@8
; Line 292
	mov	edx, DWORD PTR _listElem$84788[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _msg$84796[ebp], eax
; Line 293
	mov	ecx, DWORD PTR _msg$84796[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_MQTTProtocol_removePublication
	add	esp, 4
; Line 294
	mov	eax, DWORD PTR _listElem$84788[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$84787[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _m$84790[ebp]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_ListInsert
	add	esp, 16					; 00000010H
; Line 295
	mov	edx, DWORD PTR _msg$84796[ebp]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_ListRemove
	add	esp, 8
; Line 296
	jmp	SHORT $LN1@MQTTProtoc@8
$LN2@MQTTProtoc@8:
; Line 297
	mov	edx, DWORD PTR _len$84787[ebp]
	add	edx, 32					; 00000020H
	push	edx
	mov	eax, DWORD PTR _m$84790[ebp]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_ListAppend
	add	esp, 12					; 0000000cH
$LN1@MQTTProtoc@8:
; Line 298
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_MQTTPacket_send_pubrec
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
; Line 299
	mov	edx, DWORD PTR _publish$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN6@MQTTProtoc@8:
; Line 301
	mov	eax, DWORD PTR _publish$[ebp]
	push	eax
	call	_MQTTPacket_freePublish
	add	esp, 4
; Line 302
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	302					; 0000012eH
	push	OFFSET $SG84802
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 303
	mov	eax, DWORD PTR _rc$[ebp]
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_handlePublishes ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_handlePubacks
EXTRN	_MQTTPersistence_remove:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$84821 = -16						; size = 4
_client$ = -12						; size = 4
_puback$ = -8						; size = 4
_rc$ = -4						; size = 4
_pack$ = 8						; size = 4
_sock$ = 12						; size = 4
_MQTTProtocol_handlePubacks PROC
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 314
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR _puback$[ebp], eax
; Line 315
	mov	DWORD PTR _client$[ebp], 0
; Line 316
	mov	DWORD PTR _rc$[ebp], 0
; Line 318
	push	3
	push	318					; 0000013eH
	push	OFFSET $SG84813
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 319
	push	OFFSET _clientSocketCompare
	lea	ecx, DWORD PTR _sock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bstate
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp], ecx
; Line 320
	mov	edx, DWORD PTR _puback$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sock$[ebp]
	push	eax
	push	0
	push	14					; 0000000eH
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 323
	push	OFFSET _messageIDCompare
	mov	ecx, DWORD PTR _puback$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+64]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@MQTTProtoc@9
; Line 324
	mov	ecx, DWORD PTR _puback$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG84819
	push	0
	push	3
	push	3
	call	_Log
	add	esp, 24					; 00000018H
; Line 325
	jmp	$LN3@MQTTProtoc@9
$LN4@MQTTProtoc@9:
; Line 327
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _m$84821[ebp], edx
; Line 328
	mov	eax, DWORD PTR _m$84821[ebp]
	cmp	DWORD PTR [eax], 1
	je	SHORT $LN2@MQTTProtoc@9
; Line 329
	mov	ecx, DWORD PTR _m$84821[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _puback$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG84825
	push	0
	push	4
	push	3
	call	_Log
	add	esp, 28					; 0000001cH
; Line 330
	jmp	SHORT $LN3@MQTTProtoc@9
$LN2@MQTTProtoc@9:
; Line 332
	mov	ecx, DWORD PTR _puback$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG84828
	push	0
	push	6
	push	3
	call	_Log
	add	esp, 24					; 00000018H
; Line 334
	mov	edx, DWORD PTR _puback$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _m$84821[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84829
	mov	eax, DWORD PTR _client$[ebp]
	push	eax
	call	_MQTTPersistence_remove
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
; Line 336
	mov	ecx, DWORD PTR _m$84821[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_MQTTProtocol_removePublication
	add	esp, 4
; Line 337
	mov	eax, DWORD PTR _m$84821[ebp]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_ListRemove
	add	esp, 8
$LN3@MQTTProtoc@9:
; Line 340
	mov	eax, DWORD PTR _pack$[ebp]
	push	eax
	push	340					; 00000154H
	push	OFFSET $SG84830
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 341
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	341					; 00000155H
	push	OFFSET $SG84831
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 342
	mov	eax, DWORD PTR _rc$[ebp]
; Line 343
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_handlePubacks ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_handlePubrecs
EXTRN	_MQTTPacket_send_pubrel:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$84852 = -16						; size = 4
_client$ = -12						; size = 4
_pubrec$ = -8						; size = 4
_rc$ = -4						; size = 4
_pack$ = 8						; size = 4
_sock$ = 12						; size = 4
_MQTTProtocol_handlePubrecs PROC
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 354
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR _pubrec$[ebp], eax
; Line 355
	mov	DWORD PTR _client$[ebp], 0
; Line 356
	mov	DWORD PTR _rc$[ebp], 0
; Line 358
	push	3
	push	358					; 00000166H
	push	OFFSET $SG84842
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 359
	push	OFFSET _clientSocketCompare
	lea	ecx, DWORD PTR _sock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bstate
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp], ecx
; Line 360
	mov	edx, DWORD PTR _pubrec$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sock$[ebp]
	push	eax
	push	0
	push	15					; 0000000fH
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 363
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR [edx+8], 0
; Line 364
	push	OFFSET _messageIDCompare
	mov	eax, DWORD PTR _pubrec$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@MQTTProtoc@10
; Line 366
	mov	eax, DWORD PTR _pubrec$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 3
	and	ecx, 1
	jne	SHORT $LN8@MQTTProtoc@10
; Line 367
	mov	edx, DWORD PTR _pubrec$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84850
	push	0
	push	3
	push	3
	call	_Log
	add	esp, 24					; 00000018H
$LN8@MQTTProtoc@10:
; Line 369
	jmp	$LN7@MQTTProtoc@10
$LN9@MQTTProtoc@10:
; Line 371
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _m$84852[ebp], eax
; Line 372
	mov	ecx, DWORD PTR _m$84852[ebp]
	cmp	DWORD PTR [ecx], 2
	je	SHORT $LN6@MQTTProtoc@10
; Line 374
	mov	edx, DWORD PTR _pubrec$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 3
	and	eax, 1
	jne	SHORT $LN5@MQTTProtoc@10
; Line 375
	mov	ecx, DWORD PTR _m$84852[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pubrec$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG84857
	push	0
	push	4
	push	3
	call	_Log
	add	esp, 28					; 0000001cH
$LN5@MQTTProtoc@10:
; Line 377
	jmp	SHORT $LN7@MQTTProtoc@10
$LN6@MQTTProtoc@10:
	mov	ecx, DWORD PTR _m$84852[ebp]
	movsx	edx, BYTE PTR [ecx+24]
	cmp	edx, 5
	je	SHORT $LN3@MQTTProtoc@10
; Line 379
	mov	eax, DWORD PTR _pubrec$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 3
	and	ecx, 1
	jne	SHORT $LN2@MQTTProtoc@10
; Line 380
	mov	edx, DWORD PTR _pubrec$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84862
	push	0
	push	5
	push	3
	call	_Log
	add	esp, 24					; 00000018H
$LN2@MQTTProtoc@10:
; Line 382
	jmp	SHORT $LN7@MQTTProtoc@10
$LN3@MQTTProtoc@10:
; Line 384
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	push	0
	mov	eax, DWORD PTR _pubrec$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_MQTTPacket_send_pubrel
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
; Line 385
	mov	edx, DWORD PTR _m$84852[ebp]
	mov	BYTE PTR [edx+24], 7
; Line 386
	mov	eax, DWORD PTR _m$84852[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_time
	add	esp, 4
$LN7@MQTTProtoc@10:
; Line 389
	mov	ecx, DWORD PTR _pack$[ebp]
	push	ecx
	push	389					; 00000185H
	push	OFFSET $SG84864
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 390
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	390					; 00000186H
	push	OFFSET $SG84865
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 391
	mov	eax, DWORD PTR _rc$[ebp]
; Line 392
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_handlePubrecs ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_handlePubrels
EXTRN	_MQTTPacket_send_pubcomp:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_publish$84896 = -40					; size = 24
_m$84886 = -16						; size = 4
_client$ = -12						; size = 4
_pubrel$ = -8						; size = 4
_rc$ = -4						; size = 4
_pack$ = 8						; size = 4
_sock$ = 12						; size = 4
_MQTTProtocol_handlePubrels PROC
; Line 402
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
; Line 403
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR _pubrel$[ebp], eax
; Line 404
	mov	DWORD PTR _client$[ebp], 0
; Line 405
	mov	DWORD PTR _rc$[ebp], 0
; Line 407
	push	3
	push	407					; 00000197H
	push	OFFSET $SG84876
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 408
	push	OFFSET _clientSocketCompare
	lea	ecx, DWORD PTR _sock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bstate
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp], ecx
; Line 409
	mov	edx, DWORD PTR _pubrel$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sock$[ebp]
	push	eax
	push	0
	push	17					; 00000011H
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 412
	push	OFFSET _messageIDCompare
	mov	ecx, DWORD PTR _pubrel$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@MQTTProtoc@11
; Line 414
	mov	ecx, DWORD PTR _pubrel$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 3
	and	edx, 1
	jne	SHORT $LN7@MQTTProtoc@11
; Line 415
	mov	eax, DWORD PTR _pubrel$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG84883
	push	0
	push	3
	push	3
	call	_Log
	add	esp, 24					; 00000018H
; Line 416
	jmp	SHORT $LN6@MQTTProtoc@11
$LN7@MQTTProtoc@11:
; Line 418
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _pubrel$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_MQTTPacket_send_pubcomp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
$LN6@MQTTProtoc@11:
; Line 420
	jmp	$LN5@MQTTProtoc@11
$LN8@MQTTProtoc@11:
; Line 422
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _m$84886[ebp], eax
; Line 423
	mov	ecx, DWORD PTR _m$84886[ebp]
	cmp	DWORD PTR [ecx], 2
	je	SHORT $LN4@MQTTProtoc@11
; Line 424
	mov	edx, DWORD PTR _m$84886[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pubrel$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG84890
	push	0
	push	4
	push	3
	call	_Log
	add	esp, 28					; 0000001cH
	jmp	$LN5@MQTTProtoc@11
$LN4@MQTTProtoc@11:
; Line 425
	mov	edx, DWORD PTR _m$84886[ebp]
	movsx	eax, BYTE PTR [edx+24]
	cmp	eax, 6
	je	SHORT $LN2@MQTTProtoc@11
; Line 426
	mov	ecx, DWORD PTR _pubrel$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG84894
	push	0
	push	5
	push	3
	call	_Log
	add	esp, 24					; 00000018H
; Line 427
	jmp	$LN5@MQTTProtoc@11
$LN2@MQTTProtoc@11:
; Line 432
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	edx, DWORD PTR _pubrel$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_MQTTPacket_send_pubcomp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
; Line 433
	mov	ecx, DWORD PTR _m$84886[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 3
	shl	edx, 1
	mov	eax, DWORD PTR _publish$84896[ebp]
	and	eax, -7					; fffffff9H
	or	eax, edx
	mov	DWORD PTR _publish$84896[ebp], eax
; Line 434
	mov	ecx, DWORD PTR _m$84886[ebp]
	mov	edx, DWORD PTR [ecx+4]
	and	edx, 1
	mov	eax, DWORD PTR _publish$84896[ebp]
	and	eax, -2					; fffffffeH
	or	eax, edx
	mov	DWORD PTR _publish$84896[ebp], eax
; Line 435
	mov	ecx, DWORD PTR _m$84886[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _publish$84896[ebp+12], edx
; Line 436
	mov	eax, DWORD PTR _m$84886[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _publish$84896[ebp+4], edx
; Line 437
	mov	eax, DWORD PTR _m$84886[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _publish$84896[ebp+8], edx
; Line 438
	mov	eax, DWORD PTR _m$84886[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _publish$84896[ebp+16], edx
; Line 439
	mov	eax, DWORD PTR _m$84886[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _publish$84896[ebp+20], edx
; Line 440
	mov	eax, DWORD PTR _client$[ebp]
	push	eax
	lea	ecx, DWORD PTR _publish$84896[ebp]
	push	ecx
	call	_Protocol_processPublication
	add	esp, 8
; Line 442
	mov	edx, DWORD PTR _pubrel$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _m$84886[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84897
	mov	eax, DWORD PTR _client$[ebp]
	push	eax
	call	_MQTTPersistence_remove
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR _rc$[ebp], eax
; Line 444
	mov	ecx, DWORD PTR _m$84886[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	OFFSET _state
	call	_ListRemove
	add	esp, 8
; Line 445
	mov	eax, DWORD PTR _m$84886[ebp]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_ListRemove
	add	esp, 8
; Line 446
	mov	eax, DWORD PTR _state+20
	add	eax, 1
	mov	DWORD PTR _state+20, eax
$LN5@MQTTProtoc@11:
; Line 449
	mov	ecx, DWORD PTR _pack$[ebp]
	push	ecx
	push	449					; 000001c1H
	push	OFFSET $SG84898
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 450
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	450					; 000001c2H
	push	OFFSET $SG84899
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 451
	mov	eax, DWORD PTR _rc$[ebp]
; Line 452
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_handlePubrels ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_handlePubcomps
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$84919 = -16						; size = 4
_pubcomp$ = -12						; size = 4
_client$ = -8						; size = 4
_rc$ = -4						; size = 4
_pack$ = 8						; size = 4
_sock$ = 12						; size = 4
_MQTTProtocol_handlePubcomps PROC
; Line 462
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 463
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR _pubcomp$[ebp], eax
; Line 464
	mov	DWORD PTR _client$[ebp], 0
; Line 465
	mov	DWORD PTR _rc$[ebp], 0
; Line 467
	push	3
	push	467					; 000001d3H
	push	OFFSET $SG84910
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 468
	push	OFFSET _clientSocketCompare
	lea	ecx, DWORD PTR _sock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bstate
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$[ebp], ecx
; Line 469
	mov	edx, DWORD PTR _pubcomp$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _sock$[ebp]
	push	eax
	push	0
	push	19					; 00000013H
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 472
	push	OFFSET _messageIDCompare
	mov	ecx, DWORD PTR _pubcomp$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+64]
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@MQTTProtoc@12
; Line 474
	mov	ecx, DWORD PTR _pubcomp$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 3
	and	edx, 1
	jne	SHORT $LN6@MQTTProtoc@12
; Line 475
	mov	eax, DWORD PTR _pubcomp$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG84917
	push	0
	push	3
	push	3
	call	_Log
	add	esp, 24					; 00000018H
$LN6@MQTTProtoc@12:
; Line 477
	jmp	$LN5@MQTTProtoc@12
$LN7@MQTTProtoc@12:
; Line 479
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _m$84919[ebp], ecx
; Line 480
	mov	edx, DWORD PTR _m$84919[ebp]
	cmp	DWORD PTR [edx], 2
	je	SHORT $LN4@MQTTProtoc@12
; Line 481
	mov	eax, DWORD PTR _m$84919[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pubcomp$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84923
	push	0
	push	4
	push	3
	call	_Log
	add	esp, 28					; 0000001cH
; Line 482
	jmp	$LN5@MQTTProtoc@12
$LN4@MQTTProtoc@12:
; Line 484
	mov	eax, DWORD PTR _m$84919[ebp]
	movsx	ecx, BYTE PTR [eax+24]
	cmp	ecx, 7
	je	SHORT $LN2@MQTTProtoc@12
; Line 485
	mov	edx, DWORD PTR _pubcomp$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84927
	push	0
	push	5
	push	3
	call	_Log
	add	esp, 24					; 00000018H
; Line 486
	jmp	SHORT $LN5@MQTTProtoc@12
$LN2@MQTTProtoc@12:
; Line 488
	mov	eax, DWORD PTR _pubcomp$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG84930
	push	0
	push	6
	push	3
	call	_Log
	add	esp, 24					; 00000018H
; Line 490
	mov	ecx, DWORD PTR _pubcomp$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _m$84919[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG84931
	mov	edx, DWORD PTR _client$[ebp]
	push	edx
	call	_MQTTPersistence_remove
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
; Line 492
	mov	eax, DWORD PTR _m$84919[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_MQTTProtocol_removePublication
	add	esp, 4
; Line 493
	mov	edx, DWORD PTR _m$84919[ebp]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_ListRemove
	add	esp, 8
; Line 494
	mov	edx, DWORD PTR _state+24
	add	edx, 1
	mov	DWORD PTR _state+24, edx
$LN5@MQTTProtoc@12:
; Line 498
	mov	eax, DWORD PTR _pack$[ebp]
	push	eax
	push	498					; 000001f2H
	push	OFFSET $SG84932
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 499
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	499					; 000001f3H
	push	OFFSET $SG84933
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 500
	mov	eax, DWORD PTR _rc$[ebp]
; Line 501
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_handlePubcomps ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_keepalive
EXTRN	_MQTTProtocol_closeSession:PROC
EXTRN	_MQTTPacket_send_pingreq:PROC
EXTRN	_Socket_noPendingWrites:PROC
EXTRN	_ListNextElement:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp
_TEXT	SEGMENT
_client$84943 = -8					; size = 4
_current$ = -4						; size = 4
_now$ = 8						; size = 8
_MQTTProtocol_keepalive PROC
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 510
	mov	DWORD PTR _current$[ebp], 0
; Line 512
	push	3
	push	512					; 00000200H
	push	OFFSET $SG84939
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 513
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bstate
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ListNextElement
	add	esp, 8
$LN9@MQTTProtoc@13:
; Line 514
	cmp	DWORD PTR _current$[ebp], 0
	je	$LN8@MQTTProtoc@13
; Line 516
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$84943[ebp], ecx
; Line 517
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _bstate
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ListNextElement
	add	esp, 8
; Line 520
	mov	edx, DWORD PTR _client$84943[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 1
	and	eax, 1
	je	$LN1@MQTTProtoc@13
	mov	ecx, DWORD PTR _client$84943[ebp]
	cmp	DWORD PTR [ecx+44], 0
	jle	$LN1@MQTTProtoc@13
	mov	edx, DWORD PTR _client$84943[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	push	ecx
	mov	edx, DWORD PTR _now$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _now$[ebp]
	push	eax
	call	_difftime
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _client$84943[ebp]
	fild	DWORD PTR [ecx+44]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jnp	SHORT $LN6@MQTTProtoc@13
	mov	edx, DWORD PTR _client$84943[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	push	ecx
	mov	edx, DWORD PTR _now$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _now$[ebp]
	push	eax
	call	_difftime
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _client$84943[ebp]
	fild	DWORD PTR [ecx+44]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	$LN1@MQTTProtoc@13
$LN6@MQTTProtoc@13:
; Line 522
	mov	edx, DWORD PTR _client$84943[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 3
	and	eax, 1
	jne	SHORT $LN5@MQTTProtoc@13
; Line 524
	mov	ecx, DWORD PTR _client$84943[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_Socket_noPendingWrites
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@MQTTProtoc@13
; Line 526
	mov	eax, DWORD PTR _client$84943[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$84943[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	_MQTTPacket_send_pingreq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@MQTTProtoc@13
; Line 528
	mov	eax, DWORD PTR _client$84943[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _client$84943[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG84950
	push	-1
	push	4
	call	_Log
	add	esp, 20					; 00000014H
; Line 529
	push	1
	mov	ecx, DWORD PTR _client$84943[ebp]
	push	ecx
	call	_MQTTProtocol_closeSession
	add	esp, 8
; Line 531
	jmp	SHORT $LN2@MQTTProtoc@13
$LN3@MQTTProtoc@13:
; Line 533
	mov	edx, DWORD PTR _client$84943[ebp]
	mov	eax, DWORD PTR _now$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	ecx, DWORD PTR _now$[ebp+4]
	mov	DWORD PTR [edx+28], ecx
; Line 534
	mov	edx, DWORD PTR _client$84943[ebp]
	mov	eax, DWORD PTR [edx+12]
	or	eax, 8
	mov	ecx, DWORD PTR _client$84943[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN2@MQTTProtoc@13:
; Line 538
	jmp	SHORT $LN1@MQTTProtoc@13
$LN5@MQTTProtoc@13:
; Line 540
	mov	edx, DWORD PTR _client$84943[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _client$84943[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84953
	push	-1
	push	4
	call	_Log
	add	esp, 20					; 00000014H
; Line 541
	push	1
	mov	eax, DWORD PTR _client$84943[ebp]
	push	eax
	call	_MQTTProtocol_closeSession
	add	esp, 8
$LN1@MQTTProtoc@13:
; Line 544
	jmp	$LN9@MQTTProtoc@13
$LN8@MQTTProtoc@13:
; Line 545
	push	3
	push	0
	push	545					; 00000221H
	push	OFFSET $SG84955
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 546
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_keepalive ENDP
_TEXT	ENDS
EXTRN	__imp___difftime64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Time1$ = 8						; size = 8
__Time2$ = 16						; size = 8
_difftime PROC
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 83
	push	ebp
	mov	ebp, esp
; Line 84
	mov	eax, DWORD PTR __Time2$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Time2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Time1$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Time1$[ebp]
	push	eax
	call	DWORD PTR __imp___difftime64
	add	esp, 16					; 00000010H
; Line 85
	pop	ebp
	ret	0
_difftime ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_retries
EXTRN	_Socket_getpeer:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv129 = -40						; size = 4
_publish$84978 = -36					; size = 24
_rc$84979 = -12						; size = 4
_m$84972 = -8						; size = 4
_outcurrent$ = -4					; size = 4
_now$ = 8						; size = 8
_client$ = 16						; size = 4
_regardless$ = 20					; size = 4
_MQTTProtocol_retries PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttprotocolclient.c
; Line 556
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
; Line 557
	mov	DWORD PTR _outcurrent$[ebp], 0
; Line 559
	push	3
	push	559					; 0000022fH
	push	OFFSET $SG84966
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 561
	cmp	DWORD PTR _regardless$[ebp], 0
	jne	SHORT $LN14@MQTTProtoc@14
	mov	eax, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jg	SHORT $LN14@MQTTProtoc@14
; Line 562
	jmp	$exit$84968
$LN14@MQTTProtoc@14:
; Line 566
	cmp	DWORD PTR _client$[ebp], 0
	je	$exit$84968
	lea	ecx, DWORD PTR _outcurrent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+64]
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	$exit$84968
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	and	edx, 1
	je	$exit$84968
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 2
	and	ecx, 1
	je	$exit$84968
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_Socket_noPendingWrites
	add	esp, 4
	test	eax, eax
	je	$exit$84968
; Line 568
	mov	ecx, DWORD PTR _outcurrent$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _m$84972[ebp], edx
; Line 569
	cmp	DWORD PTR _regardless$[ebp], 0
	jne	SHORT $LN10@MQTTProtoc@14
	mov	eax, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [eax+48], 10			; 0000000aH
	jle	SHORT $LN17@MQTTProtoc@14
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN18@MQTTProtoc@14
$LN17@MQTTProtoc@14:
	mov	DWORD PTR tv129[ebp], 10		; 0000000aH
$LN18@MQTTProtoc@14:
	mov	eax, DWORD PTR _m$84972[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	push	edx
	mov	eax, DWORD PTR _now$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _now$[ebp]
	push	ecx
	call	_difftime
	add	esp, 16					; 00000010H
	fild	DWORD PTR tv129[ebp]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	$LN1@MQTTProtoc@14
$LN10@MQTTProtoc@14:
; Line 571
	mov	edx, DWORD PTR _m$84972[ebp]
	cmp	DWORD PTR [edx], 1
	je	SHORT $LN8@MQTTProtoc@14
	mov	eax, DWORD PTR _m$84972[ebp]
	cmp	DWORD PTR [eax], 2
	jne	$LN9@MQTTProtoc@14
	mov	ecx, DWORD PTR _m$84972[ebp]
	movsx	edx, BYTE PTR [ecx+24]
	cmp	edx, 5
	jne	$LN9@MQTTProtoc@14
$LN8@MQTTProtoc@14:
; Line 576
	mov	eax, DWORD PTR _m$84972[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84981
	push	0
	push	7
	push	3
	call	_Log
	add	esp, 28					; 0000001cH
; Line 577
	mov	eax, DWORD PTR _m$84972[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _publish$84978[ebp+12], ecx
; Line 578
	mov	edx, DWORD PTR _m$84972[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _publish$84978[ebp+4], ecx
; Line 579
	mov	edx, DWORD PTR _m$84972[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _publish$84978[ebp+16], ecx
; Line 580
	mov	edx, DWORD PTR _m$84972[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _publish$84978[ebp+20], ecx
; Line 581
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	edx, DWORD PTR _m$84972[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _m$84972[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	1
	lea	eax, DWORD PTR _publish$84978[ebp]
	push	eax
	call	_MQTTPacket_send_publish
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rc$84979[ebp], eax
; Line 582
	cmp	DWORD PTR _rc$84979[ebp], -1
	jne	SHORT $LN7@MQTTProtoc@14
; Line 584
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, -5					; fffffffbH
	mov	eax, DWORD PTR _client$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 586
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_Socket_getpeer
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	push	29					; 0000001dH
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 587
	push	1
	mov	ecx, DWORD PTR _client$[ebp]
	push	ecx
	call	_MQTTProtocol_closeSession
	add	esp, 8
; Line 588
	mov	DWORD PTR _client$[ebp], 0
; Line 590
	jmp	SHORT $LN6@MQTTProtoc@14
$LN7@MQTTProtoc@14:
; Line 592
	mov	edx, DWORD PTR _m$84972[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN5@MQTTProtoc@14
	cmp	DWORD PTR _rc$84979[ebp], -22		; ffffffeaH
	jne	SHORT $LN5@MQTTProtoc@14
; Line 593
	lea	eax, DWORD PTR _publish$84978[ebp]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	push	ecx
	call	_MQTTProtocol_storeQoS0
	add	esp, 8
$LN5@MQTTProtoc@14:
; Line 594
	mov	edx, DWORD PTR _m$84972[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	_time
	add	esp, 4
$LN6@MQTTProtoc@14:
; Line 595
	jmp	$LN1@MQTTProtoc@14
$LN9@MQTTProtoc@14:
; Line 597
	mov	eax, DWORD PTR _m$84972[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN1@MQTTProtoc@14
	mov	ecx, DWORD PTR _m$84972[ebp]
	movsx	edx, BYTE PTR [ecx+24]
	cmp	edx, 7
	jne	$LN1@MQTTProtoc@14
; Line 599
	mov	eax, DWORD PTR _m$84972[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG84990
	push	0
	push	7
	push	3
	call	_Log
	add	esp, 28					; 0000001cH
; Line 600
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	push	0
	mov	eax, DWORD PTR _m$84972[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MQTTPacket_send_pubrel
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@MQTTProtoc@14
; Line 602
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+12]
	and	eax, -5					; fffffffbH
	mov	ecx, DWORD PTR _client$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 604
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_Socket_getpeer
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	push	29					; 0000001dH
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 605
	push	1
	mov	edx, DWORD PTR _client$[ebp]
	push	edx
	call	_MQTTProtocol_closeSession
	add	esp, 8
; Line 606
	mov	DWORD PTR _client$[ebp], 0
; Line 608
	jmp	SHORT $LN1@MQTTProtoc@14
$LN2@MQTTProtoc@14:
; Line 609
	mov	eax, DWORD PTR _m$84972[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_time
	add	esp, 4
$LN1@MQTTProtoc@14:
; Line 613
	jmp	$LN14@MQTTProtoc@14
$exit$84968:
; Line 615
	push	3
	push	0
	push	615					; 00000267H
	push	OFFSET $SG84996
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 616
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_retries ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_retry
; Function compile flags: /Odtp
_TEXT	SEGMENT
_client$85010 = -8					; size = 4
_current$ = -4						; size = 4
_now$ = 8						; size = 8
_doRetry$ = 16						; size = 4
_regardless$ = 20					; size = 4
_MQTTProtocol_retry PROC
; Line 626
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 627
	mov	DWORD PTR _current$[ebp], 0
; Line 629
	push	3
	push	629					; 00000275H
	push	OFFSET $SG85006
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 630
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bstate
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ListNextElement
	add	esp, 8
$LN6@MQTTProtoc@15:
; Line 632
	cmp	DWORD PTR _current$[ebp], 0
	je	$LN5@MQTTProtoc@15
; Line 634
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _client$85010[ebp], ecx
; Line 635
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _bstate
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ListNextElement
	add	esp, 8
; Line 636
	mov	edx, DWORD PTR _client$85010[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 1
	and	eax, 1
	jne	SHORT $LN4@MQTTProtoc@15
; Line 637
	jmp	SHORT $LN6@MQTTProtoc@15
$LN4@MQTTProtoc@15:
; Line 638
	mov	ecx, DWORD PTR _client$85010[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	and	edx, 1
	jne	SHORT $LN3@MQTTProtoc@15
; Line 640
	push	1
	mov	eax, DWORD PTR _client$85010[ebp]
	push	eax
	call	_MQTTProtocol_closeSession
	add	esp, 8
; Line 641
	jmp	SHORT $LN6@MQTTProtoc@15
$LN3@MQTTProtoc@15:
; Line 643
	mov	ecx, DWORD PTR _client$85010[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_Socket_noPendingWrites
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@MQTTProtoc@15
; Line 644
	jmp	SHORT $LN6@MQTTProtoc@15
$LN2@MQTTProtoc@15:
; Line 645
	cmp	DWORD PTR _doRetry$[ebp], 0
	je	SHORT $LN1@MQTTProtoc@15
; Line 646
	mov	eax, DWORD PTR _regardless$[ebp]
	push	eax
	mov	ecx, DWORD PTR _client$85010[ebp]
	push	ecx
	mov	edx, DWORD PTR _now$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _now$[ebp]
	push	eax
	call	_MQTTProtocol_retries
	add	esp, 16					; 00000010H
$LN1@MQTTProtoc@15:
; Line 647
	jmp	$LN6@MQTTProtoc@15
$LN5@MQTTProtoc@15:
; Line 648
	push	3
	push	0
	push	648					; 00000288H
	push	OFFSET $SG85017
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 649
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_retry ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_freeMessageList
PUBLIC	_MQTTProtocol_freeClient
EXTRN	_ListFree:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_client$ = 8						; size = 4
_MQTTProtocol_freeClient PROC
; Line 657
	push	ebp
	mov	ebp, esp
; Line 658
	push	3
	push	658					; 00000292H
	push	OFFSET $SG85021
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 660
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_MQTTProtocol_freeMessageList
	add	esp, 4
; Line 661
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_MQTTProtocol_freeMessageList
	add	esp, 4
; Line 662
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	push	edx
	call	_ListFree
	add	esp, 4
; Line 663
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	663					; 00000297H
	push	OFFSET $SG85022
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 664
	mov	edx, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [edx+56], 0
	je	SHORT $LN1@MQTTProtoc@16
; Line 666
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	666					; 0000029aH
	push	OFFSET $SG85024
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 667
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	667					; 0000029bH
	push	OFFSET $SG85025
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 668
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	push	668					; 0000029cH
	push	OFFSET $SG85026
	call	_myfree
	add	esp, 12					; 0000000cH
$LN1@MQTTProtoc@16:
; Line 687
	push	3
	push	0
	push	687					; 000002afH
	push	OFFSET $SG85028
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 688
	pop	ebp
	ret	0
_MQTTProtocol_freeClient ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_emptyMessageList
EXTRN	_ListEmpty:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$85038 = -8						; size = 4
_current$ = -4						; size = 4
_msgList$ = 8						; size = 4
_MQTTProtocol_emptyMessageList PROC
; Line 696
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 697
	mov	DWORD PTR _current$[ebp], 0
; Line 699
	push	3
	push	699					; 000002bbH
	push	OFFSET $SG85034
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
$LN2@MQTTProtoc@17:
; Line 700
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msgList$[ebp]
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@MQTTProtoc@17
; Line 702
	mov	edx, DWORD PTR _current$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _m$85038[ebp], eax
; Line 703
	mov	ecx, DWORD PTR _m$85038[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_MQTTProtocol_removePublication
	add	esp, 4
; Line 704
	jmp	SHORT $LN2@MQTTProtoc@17
$LN1@MQTTProtoc@17:
; Line 705
	mov	eax, DWORD PTR _msgList$[ebp]
	push	eax
	call	_ListEmpty
	add	esp, 4
; Line 706
	push	3
	push	0
	push	706					; 000002c2H
	push	OFFSET $SG85041
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 707
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_emptyMessageList ENDP
; Function compile flags: /Odtp
_msgList$ = 8						; size = 4
_MQTTProtocol_freeMessageList PROC
; Line 715
	push	ebp
	mov	ebp, esp
; Line 716
	push	3
	push	716					; 000002ccH
	push	OFFSET $SG85045
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 717
	mov	eax, DWORD PTR _msgList$[ebp]
	push	eax
	call	_MQTTProtocol_emptyMessageList
	add	esp, 4
; Line 718
	mov	ecx, DWORD PTR _msgList$[ebp]
	push	ecx
	call	_ListFree
	add	esp, 4
; Line 719
	push	3
	push	0
	push	719					; 000002cfH
	push	OFFSET $SG85047
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 720
	pop	ebp
	ret	0
_MQTTProtocol_freeMessageList ENDP
_TEXT	ENDS
PUBLIC	_MQTTStrncpy
; Function compile flags: /Odtp
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_count$ = -4						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_dest_size$ = 16					; size = 4
_MQTTStrncpy PROC
; Line 732
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 733
	mov	eax, DWORD PTR _dest_size$[ebp]
	mov	DWORD PTR _count$[ebp], eax
; Line 734
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 736
	push	3
	push	736					; 000002e0H
	push	OFFSET $SG85057
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 737
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _dest_size$[ebp], eax
	jae	SHORT $LN2@MQTTStrncp
; Line 738
	push	OFFSET $SG85059
	push	-1
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
$LN2@MQTTStrncp:
; Line 741
	cmp	DWORD PTR _count$[ebp], 1
	jbe	SHORT $LN1@MQTTStrncp
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _temp$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _temp$[ebp]
	add	edx, 1
	mov	DWORD PTR _temp$[ebp], edx
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, 1
	mov	DWORD PTR _src$[ebp], eax
	test	ecx, ecx
	je	SHORT $LN1@MQTTStrncp
; Line 742
	mov	ecx, DWORD PTR _count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _count$[ebp], ecx
	jmp	SHORT $LN2@MQTTStrncp
$LN1@MQTTStrncp:
; Line 744
	mov	edx, DWORD PTR _temp$[ebp]
	mov	BYTE PTR [edx], 0
; Line 746
	push	3
	push	0
	push	746					; 000002eaH
	push	OFFSET $SG85064
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 747
	mov	eax, DWORD PTR _dest$[ebp]
; Line 748
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTStrncpy ENDP
_TEXT	ENDS
PUBLIC	_MQTTStrdup
; Function compile flags: /Odtp
_TEXT	SEGMENT
_mlen$ = -8						; size = 4
_temp$ = -4						; size = 4
_src$ = 8						; size = 4
_MQTTStrdup PROC
; Line 757
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 758
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _mlen$[ebp], eax
; Line 759
	mov	ecx, DWORD PTR _mlen$[ebp]
	push	ecx
	push	759					; 000002f7H
	push	OFFSET $SG85070
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _temp$[ebp], eax
; Line 760
	mov	edx, DWORD PTR _mlen$[ebp]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	call	_MQTTStrncpy
	add	esp, 12					; 0000000cH
; Line 761
	mov	eax, DWORD PTR _temp$[ebp]
; Line 762
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTStrdup ENDP
_TEXT	ENDS
END
