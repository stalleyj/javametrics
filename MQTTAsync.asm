; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\Paho\org.eclipse.paho.mqtt.c\src\MQTTAsync.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_client_timestamp_eye
PUBLIC	_client_version_eye
PUBLIC	_bstate
PUBLIC	_sendThread_state
PUBLIC	_receiveThread_state
_DATA	SEGMENT
COMM	_state:BYTE:030H
COMM	_Log_levels:DWORD
_DATA	ENDS
_BSS	SEGMENT
_sendThread_state DD 01H DUP (?)
_receiveThread_state DD 01H DUP (?)
_sendThread_id DD 01H DUP (?)
_receiveThread_id DD 01H DUP (?)
_mqttasync_mutex DD 01H DUP (?)
_mqttcommand_mutex DD 01H DUP (?)
_send_sem DD	01H DUP (?)
_initialized DD	01H DUP (?)
_handles DD	01H DUP (?)
_tostop	DD	01H DUP (?)
_commands DD	01H DUP (?)
	ALIGN	8

?last@?1??MQTTAsync_checkTimeouts@@9@9 DQ 01H DUP (?)	; `MQTTAsync_checkTimeouts'::`2'::last
?last@?1??MQTTAsync_retry@@9@9 DQ 01H DUP (?)		; `MQTTAsync_retry'::`2'::last
?nosockets_count@?1??MQTTAsync_cycle@@9@9 DD 01H DUP (?) ; `MQTTAsync_cycle'::`2'::nosockets_count
_BSS	ENDS
_DATA	SEGMENT
$SG84908 DB	'MQTTAsyncV3_Timestamp ##MQTTCLIENT_BUILD_TAG##', 00H
	ORG $+1
_client_timestamp_eye DD FLAT:$SG84908
$SG84910 DB	'MQTTAsyncV3_Version ##MQTTCLIENT_VERSION_TAG##', 00H
	ORG $+1
_client_version_eye DD FLAT:$SG84910
$SG84913 DB	'##MQTTCLIENT_VERSION_TAG##', 00H
	ORG $+1
_ClientState DD	FLAT:$SG84913
	DD	00H
_bstate	DD	FLAT:_ClientState
$SG84948 DB	'DLL process attach', 00H
	ORG $+1
$SG84964 DB	'DLL thread attach', 00H
	ORG $+2
$SG84966 DB	'DLL thread detach', 00H
	ORG $+2
$SG84968 DB	'DLL process detach', 00H
	ORG $+1
$SG85097 DB	'MQTTAsync_sleep', 00H
$SG85099 DB	'MQTTAsync_sleep', 00H
$SG85115 DB	'Error %s locking mutex', 00H
	ORG $+1
$SG85122 DB	'Error %s unlocking mutex', 00H
	ORG $+3
$SG85130 DB	'MQTTAsync_checkConn', 00H
$SG85131 DB	'MQTTAsync_checkConn', 00H
$SG85146 DB	'MQTTAsync_create', 00H
	ORG $+3
$SG85156 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85159 DB	'tcp://', 00H
	ORG $+1
$SG85160 DB	'tcp://', 00H
	ORG $+1
$SG85161 DB	'tcp://', 00H
	ORG $+1
$SG85164 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85170 DB	'MQTTAsync_create', 00H
	ORG $+3
$SG85174 DB	'MQTTAsync_terminate', 00H
$SG85184 DB	'MQTTAsync_terminate', 00H
$SG85191 DB	'MQTTAsync_unpersistCommand', 00H
	ORG $+1
$SG85192 DB	'c-', 00H
	ORG $+1
$SG85193 DB	'%s%d', 00H
	ORG $+3
$SG85195 DB	'Error %d removing command from persistence', 00H
	ORG $+1
$SG85196 DB	'MQTTAsync_unpersistCommand', 00H
	ORG $+1
$SG85212 DB	'MQTTAsync_persistCommand', 00H
	ORG $+3
$SG85220 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85222 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85226 DB	'c-', 00H
	ORG $+1
$SG85227 DB	'%s%d', 00H
	ORG $+3
$SG85231 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85233 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85237 DB	'c-', 00H
	ORG $+1
$SG85238 DB	'%s%d', 00H
	ORG $+3
$SG85242 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85244 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85245 DB	'c-', 00H
	ORG $+1
$SG85246 DB	'%s%d', 00H
	ORG $+3
$SG85250 DB	'Error persisting command, rc %d', 00H
$SG85252 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85254 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85255 DB	'MQTTAsync_persistCommand', 00H
	ORG $+3
$SG85269 DB	'MQTTAsync_restoreCommand', 00H
	ORG $+3
$SG85271 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85287 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85297 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85299 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85302 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85308 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85311 DB	'MQTTAsync_restoreCommand', 00H
	ORG $+3
$SG85324 DB	'MQTTAsync_insertInOrder', 00H
$SG85334 DB	'MQTTAsync_insertInOrder', 00H
$SG85344 DB	'MQTTAsync_restoreCommands', 00H
	ORG $+2
$SG85353 DB	'c-', 00H
	ORG $+1
$SG85354 DB	'c-', 00H
	ORG $+1
$SG85360 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85362 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85365 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85366 DB	'%d commands restored for client %s', 00H
	ORG $+1
$SG85367 DB	'MQTTAsync_restoreCommands', 00H
	ORG $+2
$SG85375 DB	'MQTTAsync_addCommand', 00H
	ORG $+3
$SG85388 DB	'MQTTAsync_addCommand', 00H
	ORG $+3
$SG85396 DB	'MQTTAsync_checkDisconnect', 00H
	ORG $+2
$SG85401 DB	'Calling connectionLost for client %s', 00H
	ORG $+3
$SG85405 DB	'Calling disconnect complete for client %s', 00H
	ORG $+2
$SG85408 DB	'MQTTAsync_checkDisconnect', 00H
	ORG $+2
$SG85411 DB	'MQTTProtocol_checkPendingWrites', 00H
$SG85422 DB	'MQTTProtocol_checkPendingWrites', 00H
$SG85432 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85434 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85443 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85444 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85445 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85452 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85453 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85457 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85458 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85462 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85468 DB	'MQTTAsync_writeComplete', 00H
$SG85486 DB	'Calling publish success for client %s', 00H
	ORG $+2
$SG85489 DB	'MQTTAsync_writeComplete', 00H
$SG85499 DB	'MQTTAsync_processCommand', 00H
	ORG $+3
$SG85525 DB	'tcp://', 00H
	ORG $+1
$SG85526 DB	'tcp://', 00H
	ORG $+1
$SG85527 DB	'tcp://', 00H
	ORG $+1
$SG85533 DB	'Connecting to serverURI %s with MQTT version %d', 00H
$SG85559 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85564 DB	'Calling publish success for client %s', 00H
	ORG $+2
$SG85569 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85591 DB	'Connect failed, more to try', 00H
$SG85594 DB	'Calling command failure for client %s', 00H
	ORG $+2
$SG85598 DB	'MQTTAsync_processCommand', 00H
	ORG $+3
$SG85606 DB	'MQTTAsync_checkTimeouts', 00H
$SG85622 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85624 DB	'Connect failed with timeout, more to try', 00H
	ORG $+3
$SG85627 DB	'Calling connect failure for client %s', 00H
	ORG $+2
$SG85638 DB	'Calling %s failure for client %s', 00H
	ORG $+3
$SG85644 DB	'MQTTAsync_checkTimeouts', 00H
$SG85649 DB	'MQTTAsync_sendThread', 00H
	ORG $+3
$SG85660 DB	'Error %d waiting for semaphore', 00H
	ORG $+1
$SG85662 DB	'MQTTAsync_sendThread', 00H
	ORG $+3
$SG85667 DB	'MQTTAsync_emptyMessageQueue', 00H
$SG85676 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85677 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85678 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85680 DB	'MQTTAsync_emptyMessageQueue', 00H
$SG85690 DB	'MQTTAsync_removeResponsesAndCommands', 00H
	ORG $+3
$SG85698 DB	'%d responses removed for client %s', 00H
	ORG $+1
$SG85705 DB	'%d commands removed for client %s', 00H
	ORG $+2
$SG85707 DB	'MQTTAsync_removeResponsesAndCommands', 00H
	ORG $+3
$SG85712 DB	'MQTTAsync_destroy', 00H
	ORG $+2
$SG85723 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85725 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85727 DB	'free error', 00H
	ORG $+1
$SG85731 DB	'MQTTAsync_destroy', 00H
	ORG $+2
$SG85735 DB	'MQTTAsync_freeMessage', 00H
	ORG $+2
$SG85736 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85737 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85740 DB	'MQTTAsync_freeMessage', 00H
	ORG $+2
$SG85744 DB	'MQTTAsync_free', 00H
	ORG $+1
$SG85745 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85747 DB	'MQTTAsync_free', 00H
	ORG $+1
$SG85755 DB	'MQTTAsync_completeConnection', 00H
	ORG $+3
$SG85772 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85774 DB	'MQTTAsync_completeConnection', 00H
	ORG $+3
$SG85780 DB	'MQTTAsync_receiveThread', 00H
$SG85794 DB	'Could not find client corresponding to socket %d', 00H
	ORG $+3
$SG85798 DB	'Client structure was NULL for socket %d - removing socke'
	DB	't', 00H
	ORG $+2
$SG85800 DB	'Error from MQTTAsync_cycle() - removing socket %d', 00H
	ORG $+2
$SG85823 DB	'Connect succeeded to %s', 00H
$SG85835 DB	'Connect failed, more to try', 00H
$SG85815 DB	'False returned from messageArrived for client %s, messag'
	DB	'e remains on queue', 00H
	ORG $+1
$SG85826 DB	'Calling connect success for client %s', 00H
	ORG $+2
$SG85833 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85839 DB	'CONNACK return code', 00H
$SG85840 DB	'Calling connect failure for client %s', 00H
	ORG $+2
$SG85855 DB	'Subscribe command not removed from command list', 00H
$SG85861 DB	'Calling subscribe failure for client %s', 00H
$SG85875 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85880 DB	'Calling subscribe success for client %s', 00H
$SG85882 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG85896 DB	'Unsubscribe command not removed from command list', 00H
	ORG $+2
$SG85898 DB	'Calling unsubscribe success for client %s', 00H
	ORG $+2
$SG85903 DB	'MQTTAsync_receiveThread', 00H
$SG85906 DB	'MQTTAsync_stop', 00H
	ORG $+1
$SG85921 DB	'Conn_count is %d', 00H
	ORG $+3
$SG85928 DB	'sleeping', 00H
	ORG $+3
$SG85929 DB	'MQTTAsync_stop', 00H
	ORG $+1
$SG85943 DB	'MQTTAsync_setCallbacks', 00H
	ORG $+1
$SG85949 DB	'MQTTAsync_setCallbacks', 00H
	ORG $+1
$SG85953 DB	'MQTTAsync_closeOnly', 00H
$SG85957 DB	'MQTTAsync_closeOnly', 00H
$SG85961 DB	'MQTTAsync_closeSession', 00H
	ORG $+1
$SG85964 DB	'MQTTAsync_closeSession', 00H
	ORG $+1
$SG85980 DB	'MQTTAsync_cleanSession', 00H
	ORG $+1
$SG85986 DB	'cleanSession: did not find client structure in handles l'
	DB	'ist', 00H
$SG85987 DB	'MQTTAsync_cleanSession', 00H
	ORG $+1
$SG85998 DB	'Calling messageArrived for client %s, queue depth %d', 00H
	ORG $+3
$SG86008 DB	'Protocol_processPublication', 00H
$SG86010 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86013 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86021 DB	'processPublication: did not find client structure in han'
	DB	'dles list', 00H
	ORG $+2
$SG86029 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86034 DB	'Protocol_processPublication', 00H
$SG86043 DB	'MQTTAsync_connect', 00H
	ORG $+2
$SG86049 DB	'MQTC', 00H
	ORG $+3
$SG86053 DB	'MQTW', 00H
	ORG $+3
$SG86059 DB	'MQTS', 00H
	ORG $+3
$SG86069 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86070 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86071 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86075 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86077 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86083 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86087 DB	'MQTTAsync_connect', 00H
	ORG $+2
$SG86099 DB	'MQTTAsync_disconnect1', 00H
	ORG $+2
$SG86107 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86110 DB	'MQTTAsync_disconnect1', 00H
	ORG $+2
$SG86136 DB	'MQTTAsync_isConnected', 00H
	ORG $+2
$SG86138 DB	'MQTTAsync_isConnected', 00H
	ORG $+2
$SG86156 DB	'MQTTAsync_assignMsgId', 00H
	ORG $+2
$SG86165 DB	'MQTTAsync_assignMsgId', 00H
	ORG $+2
$SG86182 DB	'MQTTAsync_subscribeMany', 00H
$SG86197 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86201 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86203 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86207 DB	'MQTTAsync_subscribeMany', 00H
$SG86220 DB	'MQTTAsync_subscribe', 00H
$SG86221 DB	'MQTTAsync_subscribe', 00H
$SG86236 DB	'MQTTAsync_unsubscribeMany', 00H
	ORG $+2
$SG86249 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86253 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86257 DB	'MQTTAsync_unsubscribeMany', 00H
	ORG $+2
$SG86268 DB	'MQTTAsync_unsubscribe', 00H
	ORG $+2
$SG86269 DB	'MQTTAsync_unsubscribe', 00H
	ORG $+2
$SG86289 DB	'MQTTAsync_send', 00H
	ORG $+1
$SG86306 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86309 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86310 DB	'MQTTAsync_send', 00H
	ORG $+1
$SG86321 DB	'MQTTAsync_sendMessage', 00H
	ORG $+2
$SG86327 DB	'MQTM', 00H
	ORG $+3
$SG86328 DB	'MQTTAsync_sendMessage', 00H
	ORG $+2
$SG86335 DB	'MQTTAsync_retry', 00H
$SG86339 DB	'MQTTAsync_retry', 00H
$SG86345 DB	'MQTTAsync_connecting', 00H
	ORG $+3
$SG86360 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86362 DB	'Connect failed, more to try', 00H
$SG86365 DB	'Calling connect failure for client %s', 00H
	ORG $+2
$SG86367 DB	'MQTTAsync_connecting', 00H
	ORG $+3
$SG86382 DB	'MQTTAsync_cycle', 00H
$SG86399 DB	'CONNECT sent but MQTTPacket_Factory has returned SOCKET_'
	DB	'ERROR', 00H
	ORG $+2
$SG86403 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86405 DB	'Connect failed, more to try', 00H
$SG86408 DB	'Calling connect failure for client %s', 00H
	ORG $+2
$SG86420 DB	'PUBCOMP or PUBACK received for no client, msgid %d', 00H
	ORG $+1
$SG86425 DB	'Calling deliveryComplete for client %s, msgid %d', 00H
	ORG $+3
$SG86433 DB	'Publish command not removed from command list', 00H
	ORG $+2
$SG86436 DB	'Calling publish success for client %s', 00H
	ORG $+2
$SG86446 DB	'MQTTAsync_cycle', 00H
$SG86467 DB	'MQTTAsync_getPendingTokens', 00H
	ORG $+1
$SG86480 DB	'../Paho/org.eclipse.paho.mqtt.c/src/MQTTAsync.c', 00H
$SG86495 DB	'MQTTAsync_getPendingTokens', 00H
	ORG $+1
$SG86505 DB	'MQTTAsync_isComplete', 00H
	ORG $+3
$SG86524 DB	'MQTTAsync_isComplete', 00H
	ORG $+3
$SG86536 DB	'MQTTAsync_waitForCompletion', 00H
$SG86548 DB	'MQTTAsync_waitForCompletion', 00H
$SG86561 DB	'Product name', 00H
	ORG $+3
$SG86562 DB	'Paho Asynchronous MQTT C Client Library', 00H
$SG86563 DB	'Version', 00H
$SG86564 DB	'##MQTTCLIENT_VERSION_TAG##', 00H
	ORG $+1
$SG86565 DB	'Build level', 00H
$SG86566 DB	'##MQTTCLIENT_BUILD_TAG##', 00H
_DATA	ENDS
PUBLIC	_DllMain@12
EXTRN	_log_mutex:DWORD
EXTRN	_heap_mutex:DWORD
EXTRN	_stack_mutex:DWORD
EXTRN	__imp__CreateEventA@16:PROC
EXTRN	__imp__CreateMutexA@12:PROC
EXTRN	_Log:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = -4						; size = 4
_hModule$ = 8						; size = 4
_ul_reason_for_call$ = 12				; size = 4
_lpReserved$ = 16					; size = 4
_DllMain@12 PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttasync.c
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 94
	mov	eax, DWORD PTR _ul_reason_for_call$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	$LN6@DllMain
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN10@DllMain[ecx*4]
$LN5@DllMain:
; Line 97
	push	OFFSET $SG84948
	push	-1
	push	1
	call	_Log
	add	esp, 12					; 0000000cH
; Line 98
	cmp	DWORD PTR _mqttasync_mutex, 0
	jne	SHORT $LN3@DllMain
; Line 100
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateMutexA@12
	mov	DWORD PTR _mqttasync_mutex, eax
; Line 101
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateMutexA@12
	mov	DWORD PTR _mqttcommand_mutex, eax
; Line 107
	push	0
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateEventA@16
	mov	DWORD PTR _send_sem, eax
; Line 108
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateMutexA@12
	mov	DWORD PTR _stack_mutex, eax
; Line 109
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateMutexA@12
	mov	DWORD PTR _heap_mutex, eax
; Line 110
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateMutexA@12
	mov	DWORD PTR _log_mutex, eax
$LN3@DllMain:
; Line 113
	push	OFFSET $SG84964
	push	-1
	push	1
	call	_Log
	add	esp, 12					; 0000000cH
$LN2@DllMain:
; Line 115
	push	OFFSET $SG84966
	push	-1
	push	1
	call	_Log
	add	esp, 12					; 0000000cH
$LN1@DllMain:
; Line 117
	push	OFFSET $SG84968
	push	-1
	push	1
	call	_Log
	add	esp, 12					; 0000000cH
$LN6@DllMain:
; Line 119
	mov	eax, 1
; Line 120
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN10@DllMain:
	DD	$LN1@DllMain
	DD	$LN5@DllMain
	DD	$LN3@DllMain
	DD	$LN2@DllMain
_DllMain@12 ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_start_clock
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_MQTTAsync_start_clock PROC
; Line 162
	push	ebp
	mov	ebp, esp
; Line 163
	call	DWORD PTR __imp__GetTickCount@0
; Line 164
	pop	ebp
	ret	0
_MQTTAsync_start_clock ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_elapsed
; Function compile flags: /Odtp
_TEXT	SEGMENT
_milliseconds$ = 8					; size = 4
_MQTTAsync_elapsed PROC
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	call	DWORD PTR __imp__GetTickCount@0
	sub	eax, DWORD PTR _milliseconds$[ebp]
; Line 188
	pop	ebp
	ret	0
_MQTTAsync_elapsed ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_sleep
EXTRN	_StackTrace_exit:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	_StackTrace_entry:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_milliseconds$ = 8					; size = 4
_MQTTAsync_sleep PROC
; Line 304
	push	ebp
	mov	ebp, esp
; Line 305
	push	3
	push	305					; 00000131H
	push	OFFSET $SG85097
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 307
	mov	eax, DWORD PTR _milliseconds$[ebp]
	push	eax
	call	DWORD PTR __imp__Sleep@4
; Line 311
	push	3
	push	0
	push	311					; 00000137H
	push	OFFSET $SG85099
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 312
	pop	ebp
	ret	0
_MQTTAsync_sleep ENDP
_TEXT	ENDS
PUBLIC	_clientSockCompare
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_clientSockCompare PROC
; Line 322
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 323
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 324
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax]
	sete	dl
	mov	eax, edx
; Line 325
	mov	esp, ebp
	pop	ebp
	ret	0
_clientSockCompare ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_lock_mutex
EXTRN	__imp__strerror:PROC
EXTRN	_Thread_lock_mutex:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_amutex$ = 8						; size = 4
_MQTTAsync_lock_mutex PROC
; Line 329
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 330
	mov	eax, DWORD PTR _amutex$[ebp]
	push	eax
	call	_Thread_lock_mutex
	add	esp, 4
	mov	DWORD PTR _rc$[ebp], eax
; Line 331
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN2@MQTTAsync_
; Line 332
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	call	DWORD PTR __imp__strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG85115
	push	0
	push	5
	call	_Log
	add	esp, 16					; 00000010H
$LN2@MQTTAsync_:
; Line 333
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_lock_mutex ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_unlock_mutex
EXTRN	_Thread_unlock_mutex:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_amutex$ = 8						; size = 4
_MQTTAsync_unlock_mutex PROC
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 338
	mov	eax, DWORD PTR _amutex$[ebp]
	push	eax
	call	_Thread_unlock_mutex
	add	esp, 4
	mov	DWORD PTR _rc$[ebp], eax
; Line 339
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN2@MQTTAsync_@2
; Line 340
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	call	DWORD PTR __imp__strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG85122
	push	0
	push	5
	call	_Log
	add	esp, 16					; 00000010H
$LN2@MQTTAsync_@2:
; Line 341
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_unlock_mutex ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_checkConn
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv75 = -8						; size = 4
_rc$ = -4						; size = 4
_command$ = 8						; size = 4
_client$ = 12						; size = 4
_MQTTAsync_checkConn PROC
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 348
	push	3
	push	348					; 0000015cH
	push	OFFSET $SG85130
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 350
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [eax+36]
	cmp	edx, DWORD PTR [ecx+28]
	jl	SHORT $LN4@MQTTAsync_@3
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax+40], 4
	jne	SHORT $LN3@MQTTAsync_@3
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx+88], 0
	je	SHORT $LN4@MQTTAsync_@3
$LN3@MQTTAsync_@3:
	mov	DWORD PTR tv75[ebp], 0
	jmp	SHORT $LN5@MQTTAsync_@3
$LN4@MQTTAsync_@3:
	mov	DWORD PTR tv75[ebp], 1
$LN5@MQTTAsync_@3:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR _rc$[ebp], eax
; Line 351
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	351					; 0000015fH
	push	OFFSET $SG85131
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 352
	mov	eax, DWORD PTR _rc$[ebp]
; Line 353
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_checkConn ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_restoreCommands
PUBLIC	_MQTTAsync_writeComplete
PUBLIC	_MQTTAsync_getVersionInfo
PUBLIC	_MQTTAsync_create
EXTRN	_MQTTPersistence_restoreMessageQueue:PROC
EXTRN	_MQTTPersistence_initialize:PROC
EXTRN	_MQTTPersistence_create:PROC
EXTRN	_ListAppend:PROC
EXTRN	_MQTTStrdup:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memset:PROC
EXTRN	_mymalloc:PROC
EXTRN	_Socket_setWriteCompleteCallback:PROC
EXTRN	_Socket_outInitialize:PROC
EXTRN	_ListInitialize:PROC
EXTRN	_Log_initialize:PROC
EXTRN	_Heap_initialize:PROC
EXTRN	_UTF8_validateString:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_serverURI$ = 12					; size = 4
_clientId$ = 16						; size = 4
_persistence_type$ = 20					; size = 4
_persistence_context$ = 24				; size = 4
_MQTTAsync_create PROC
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 359
	mov	DWORD PTR _rc$[ebp], 0
; Line 360
	mov	DWORD PTR _m$[ebp], 0
; Line 362
	push	3
	push	362					; 0000016aH
	push	OFFSET $SG85146
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 363
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 365
	cmp	DWORD PTR _serverURI$[ebp], 0
	je	SHORT $LN6@MQTTAsync_@4
	cmp	DWORD PTR _clientId$[ebp], 0
	jne	SHORT $LN7@MQTTAsync_@4
$LN6@MQTTAsync_@4:
; Line 367
	mov	DWORD PTR _rc$[ebp], -6			; fffffffaH
; Line 368
	jmp	$exit$85151
$LN7@MQTTAsync_@4:
; Line 371
	mov	ecx, DWORD PTR _clientId$[ebp]
	push	ecx
	call	_UTF8_validateString
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@MQTTAsync_@4
; Line 373
	mov	DWORD PTR _rc$[ebp], -5			; fffffffbH
; Line 374
	jmp	$exit$85151
$LN5@MQTTAsync_@4:
; Line 377
	cmp	DWORD PTR _initialized, 0
	jne	SHORT $LN4@MQTTAsync_@4
; Line 380
	call	_Heap_initialize
; Line 382
	call	_MQTTAsync_getVersionInfo
	push	eax
	call	_Log_initialize
	add	esp, 4
; Line 383
	call	_ListInitialize
	mov	edx, DWORD PTR _bstate
	mov	DWORD PTR [edx+4], eax
; Line 384
	call	_Socket_outInitialize
; Line 385
	push	OFFSET _MQTTAsync_writeComplete
	call	_Socket_setWriteCompleteCallback
	add	esp, 4
; Line 386
	call	_ListInitialize
	mov	DWORD PTR _handles, eax
; Line 387
	call	_ListInitialize
	mov	DWORD PTR _commands, eax
; Line 391
	mov	DWORD PTR _initialized, 1
$LN4@MQTTAsync_@4:
; Line 393
	push	132					; 00000084H
	push	393					; 00000189H
	push	OFFSET $SG85156
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _m$[ebp], eax
; Line 394
	mov	eax, DWORD PTR _handle$[ebp]
	mov	ecx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 395
	push	132					; 00000084H
	push	0
	mov	edx, DWORD PTR _m$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 396
	push	OFFSET $SG85159
	call	_strlen
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _serverURI$[ebp]
	push	eax
	push	OFFSET $SG85160
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@MQTTAsync_@4
; Line 397
	push	OFFSET $SG85161
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _serverURI$[ebp]
	mov	DWORD PTR _serverURI$[ebp], eax
$LN3@MQTTAsync_@4:
; Line 405
	mov	ecx, DWORD PTR _serverURI$[ebp]
	push	ecx
	call	_MQTTStrdup
	add	esp, 4
	mov	edx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [edx], eax
; Line 406
	call	_ListInitialize
	mov	ecx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [ecx+120], eax
; Line 407
	push	132					; 00000084H
	mov	edx, DWORD PTR _m$[ebp]
	push	edx
	mov	eax, DWORD PTR _handles
	push	eax
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 409
	push	96					; 00000060H
	push	409					; 00000199H
	push	OFFSET $SG85164
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 410
	push	96					; 00000060H
	push	0
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 411
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _m$[ebp]
	mov	DWORD PTR [edx+84], eax
; Line 412
	call	_ListInitialize
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+64], eax
; Line 413
	call	_ListInitialize
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+60], eax
; Line 414
	call	_ListInitialize
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+68], eax
; Line 415
	mov	eax, DWORD PTR _clientId$[ebp]
	push	eax
	call	_MQTTStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx], eax
; Line 418
	mov	eax, DWORD PTR _persistence_context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _persistence_type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 80					; 00000050H
	push	eax
	call	_MQTTPersistence_create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
; Line 419
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN2@MQTTAsync_@4
; Line 421
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MQTTPersistence_initialize
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
; Line 422
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN2@MQTTAsync_@4
; Line 424
	mov	edx, DWORD PTR _m$[ebp]
	push	edx
	call	_MQTTAsync_restoreCommands
	add	esp, 4
; Line 425
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MQTTPersistence_restoreMessageQueue
	add	esp, 4
$LN2@MQTTAsync_@4:
; Line 429
	push	156					; 0000009cH
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _bstate
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ListAppend
	add	esp, 12					; 0000000cH
$exit$85151:
; Line 432
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 433
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	433					; 000001b1H
	push	OFFSET $SG85170
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 434
	mov	eax, DWORD PTR _rc$[ebp]
; Line 435
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_create ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_freeCommand1
PUBLIC	_MQTTAsync_stop
PUBLIC	_MQTTAsync_terminate
EXTRN	_Log_terminate:PROC
EXTRN	_Heap_terminate:PROC
EXTRN	_Socket_outTerminate:PROC
EXTRN	_ListNextElement:PROC
EXTRN	_ListFree:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_elem$85176 = -4					; size = 4
_MQTTAsync_terminate PROC
; Line 439
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 440
	push	3
	push	440					; 000001b8H
	push	OFFSET $SG85174
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 441
	call	_MQTTAsync_stop
; Line 442
	cmp	DWORD PTR _initialized, 0
	je	$LN3@MQTTAsync_@5
; Line 444
	mov	DWORD PTR _elem$85176[ebp], 0
; Line 445
	mov	eax, DWORD PTR _bstate
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ListFree
	add	esp, 4
; Line 446
	mov	edx, DWORD PTR _handles
	push	edx
	call	_ListFree
	add	esp, 4
$LN2@MQTTAsync_@5:
; Line 447
	lea	eax, DWORD PTR _elem$85176[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@MQTTAsync_@5
; Line 448
	mov	edx, DWORD PTR _elem$85176[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTAsync_freeCommand1
	add	esp, 4
	jmp	SHORT $LN2@MQTTAsync_@5
$LN1@MQTTAsync_@5:
; Line 449
	mov	ecx, DWORD PTR _commands
	push	ecx
	call	_ListFree
	add	esp, 4
; Line 450
	mov	DWORD PTR _handles, 0
; Line 451
	call	_Socket_outTerminate
; Line 456
	call	_Heap_terminate
; Line 458
	call	_Log_terminate
; Line 459
	mov	DWORD PTR _initialized, 0
$LN3@MQTTAsync_@5:
; Line 461
	push	3
	push	0
	push	461					; 000001cdH
	push	OFFSET $SG85184
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 462
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_terminate ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_MQTTAsync_unpersistCommand
EXTRN	__imp__sprintf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_key$ = -20						; size = 9
__$ArrayPad$ = -8					; size = 4
_rc$ = -4						; size = 4
_qcmd$ = 8						; size = 4
_MQTTAsync_unpersistCommand PROC
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 468
	mov	DWORD PTR _rc$[ebp], 0
; Line 471
	push	3
	push	471					; 000001d7H
	push	OFFSET $SG85191
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR _qcmd$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	push	OFFSET $SG85192
	push	OFFSET $SG85193
	lea	edx, DWORD PTR _key$[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
; Line 473
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _qcmd$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR _qcmd$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN1@MQTTAsync_@6
; Line 474
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	OFFSET $SG85195
	push	0
	push	5
	call	_Log
	add	esp, 16					; 00000010H
$LN1@MQTTAsync_@6:
; Line 475
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	475					; 000001dbH
	push	OFFSET $SG85196
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 476
	mov	eax, DWORD PTR _rc$[ebp]
; Line 477
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_unpersistCommand ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_MQTTAsync_persistCommand
EXTRN	_myfree:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv275 = -64						; size = 4
tv212 = -60						; size = 4
tv159 = -56						; size = 4
tv68 = -52						; size = 4
_lens$ = -48						; size = 4
_bufindex$ = -44					; size = 4
_bufs$ = -40						; size = 4
_key$ = -36						; size = 9
__$ArrayPad$ = -24					; size = 4
_nbufs$ = -20						; size = 4
_command$ = -16						; size = 4
_i$ = -12						; size = 4
_rc$ = -8						; size = 4
_aclient$ = -4						; size = 4
_qcmd$ = 8						; size = 4
_MQTTAsync_persistCommand PROC
; Line 481
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
; Line 482
	mov	DWORD PTR _rc$[ebp], 0
; Line 483
	mov	eax, DWORD PTR _qcmd$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _aclient$[ebp], ecx
; Line 484
	mov	edx, DWORD PTR _qcmd$[ebp]
	mov	DWORD PTR _command$[ebp], edx
; Line 485
	mov	DWORD PTR _lens$[ebp], 0
; Line 486
	mov	DWORD PTR _bufs$[ebp], 0
; Line 487
	mov	DWORD PTR _bufindex$[ebp], 0
	mov	DWORD PTR _nbufs$[ebp], 0
; Line 490
	push	3
	push	490					; 000001eaH
	push	OFFSET $SG85212
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 491
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], ecx
	cmp	DWORD PTR tv68[ebp], 3
	je	$LN5@MQTTAsync_@7
	cmp	DWORD PTR tv68[ebp], 8
	je	SHORT $LN13@MQTTAsync_@7
	cmp	DWORD PTR tv68[ebp], 10			; 0000000aH
	je	$LN9@MQTTAsync_@7
	jmp	$LN14@MQTTAsync_@7
$LN13@MQTTAsync_@7:
; Line 494
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+24]
	lea	ecx, DWORD PTR [eax+eax+3]
	mov	DWORD PTR _nbufs$[ebp], ecx
; Line 496
	mov	edx, DWORD PTR _nbufs$[ebp]
	shl	edx, 2
	push	edx
	push	496					; 000001f0H
	push	OFFSET $SG85220
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _lens$[ebp], eax
; Line 497
	mov	eax, DWORD PTR _nbufs$[ebp]
	shl	eax, 2
	push	eax
	push	497					; 000001f1H
	push	OFFSET $SG85222
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bufs$[ebp], eax
; Line 499
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _bufs$[ebp]
	mov	eax, DWORD PTR _command$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 500
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [edx+ecx*4], 4
	mov	eax, DWORD PTR _bufindex$[ebp]
	add	eax, 1
	mov	DWORD PTR _bufindex$[ebp], eax
; Line 502
	mov	ecx, DWORD PTR _command$[ebp]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 503
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [edx+ecx*4], 4
	mov	eax, DWORD PTR _bufindex$[ebp]
	add	eax, 1
	mov	DWORD PTR _bufindex$[ebp], eax
; Line 505
	mov	ecx, DWORD PTR _command$[ebp]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 506
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [edx+ecx*4], 4
	mov	eax, DWORD PTR _bufindex$[ebp]
	add	eax, 1
	mov	DWORD PTR _bufindex$[ebp], eax
; Line 508
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@MQTTAsync_@7
$LN11@MQTTAsync_@7:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN12@MQTTAsync_@7:
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx+24]
	jge	SHORT $LN10@MQTTAsync_@7
; Line 510
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _bufindex$[ebp]
	mov	ecx, DWORD PTR _bufs$[ebp]
	mov	esi, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [edx+esi*4]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 511
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	eax, DWORD PTR _bufindex$[ebp]
	add	eax, 1
	mov	DWORD PTR _bufindex$[ebp], eax
; Line 512
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 513
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [edx+ecx*4], 4
	mov	eax, DWORD PTR _bufindex$[ebp]
	add	eax, 1
	mov	DWORD PTR _bufindex$[ebp], eax
; Line 514
	jmp	SHORT $LN11@MQTTAsync_@7
$LN10@MQTTAsync_@7:
; Line 515
	mov	ecx, DWORD PTR _aclient$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	add	edx, 1
	mov	DWORD PTR tv159[ebp], edx
	mov	eax, DWORD PTR _aclient$[ebp]
	mov	ecx, DWORD PTR tv159[ebp]
	mov	DWORD PTR [eax+124], ecx
	mov	edx, DWORD PTR tv159[ebp]
	push	edx
	push	OFFSET $SG85226
	push	OFFSET $SG85227
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
; Line 516
	jmp	$LN14@MQTTAsync_@7
$LN9@MQTTAsync_@7:
; Line 519
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 3
	mov	DWORD PTR _nbufs$[ebp], edx
; Line 521
	mov	eax, DWORD PTR _nbufs$[ebp]
	shl	eax, 2
	push	eax
	push	521					; 00000209H
	push	OFFSET $SG85231
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _lens$[ebp], eax
; Line 522
	mov	ecx, DWORD PTR _nbufs$[ebp]
	shl	ecx, 2
	push	ecx
	push	522					; 0000020aH
	push	OFFSET $SG85233
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bufs$[ebp], eax
; Line 524
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _bufs$[ebp]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 525
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [eax+edx*4], 4
	mov	ecx, DWORD PTR _bufindex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bufindex$[ebp], ecx
; Line 527
	mov	edx, DWORD PTR _command$[ebp]
	add	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _bufindex$[ebp]
	mov	ecx, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 528
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [eax+edx*4], 4
	mov	ecx, DWORD PTR _bufindex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bufindex$[ebp], ecx
; Line 530
	mov	edx, DWORD PTR _command$[ebp]
	add	edx, 24					; 00000018H
	mov	eax, DWORD PTR _bufindex$[ebp]
	mov	ecx, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 531
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [eax+edx*4], 4
	mov	ecx, DWORD PTR _bufindex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bufindex$[ebp], ecx
; Line 533
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@MQTTAsync_@7
$LN7@MQTTAsync_@7:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN8@MQTTAsync_@7:
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jge	SHORT $LN6@MQTTAsync_@7
; Line 535
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _bufs$[ebp]
	mov	esi, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [eax+esi*4]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 536
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	ecx, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	edx, DWORD PTR _bufindex$[ebp]
	add	edx, 1
	mov	DWORD PTR _bufindex$[ebp], edx
; Line 537
	jmp	SHORT $LN7@MQTTAsync_@7
$LN6@MQTTAsync_@7:
; Line 538
	mov	eax, DWORD PTR _aclient$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, 1
	mov	DWORD PTR tv212[ebp], ecx
	mov	edx, DWORD PTR _aclient$[ebp]
	mov	eax, DWORD PTR tv212[ebp]
	mov	DWORD PTR [edx+124], eax
	mov	ecx, DWORD PTR tv212[ebp]
	push	ecx
	push	OFFSET $SG85237
	push	OFFSET $SG85238
	lea	edx, DWORD PTR _key$[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
; Line 539
	jmp	$LN14@MQTTAsync_@7
$LN5@MQTTAsync_@7:
; Line 542
	mov	DWORD PTR _nbufs$[ebp], 7
; Line 544
	mov	eax, DWORD PTR _nbufs$[ebp]
	shl	eax, 2
	push	eax
	push	544					; 00000220H
	push	OFFSET $SG85242
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _lens$[ebp], eax
; Line 545
	mov	ecx, DWORD PTR _nbufs$[ebp]
	shl	ecx, 2
	push	ecx
	push	545					; 00000221H
	push	OFFSET $SG85244
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bufs$[ebp], eax
; Line 547
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _bufs$[ebp]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 548
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [eax+edx*4], 4
	mov	ecx, DWORD PTR _bufindex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bufindex$[ebp], ecx
; Line 550
	mov	edx, DWORD PTR _command$[ebp]
	add	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _bufindex$[ebp]
	mov	ecx, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 551
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [eax+edx*4], 4
	mov	ecx, DWORD PTR _bufindex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bufindex$[ebp], ecx
; Line 553
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _bufs$[ebp]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 554
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	eax, DWORD PTR _bufindex$[ebp]
	add	eax, 1
	mov	DWORD PTR _bufindex$[ebp], eax
; Line 556
	mov	ecx, DWORD PTR _command$[ebp]
	add	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 557
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [edx+ecx*4], 4
	mov	eax, DWORD PTR _bufindex$[ebp]
	add	eax, 1
	mov	DWORD PTR _bufindex$[ebp], eax
; Line 559
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _bufs$[ebp]
	mov	eax, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 560
	mov	ecx, DWORD PTR _bufindex$[ebp]
	mov	edx, DWORD PTR _lens$[ebp]
	mov	eax, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	ecx, DWORD PTR _bufindex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bufindex$[ebp], ecx
; Line 562
	mov	edx, DWORD PTR _command$[ebp]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _bufindex$[ebp]
	mov	ecx, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 563
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [eax+edx*4], 4
	mov	ecx, DWORD PTR _bufindex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bufindex$[ebp], ecx
; Line 565
	mov	edx, DWORD PTR _command$[ebp]
	add	edx, 40					; 00000028H
	mov	eax, DWORD PTR _bufindex$[ebp]
	mov	ecx, DWORD PTR _bufs$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 566
	mov	edx, DWORD PTR _bufindex$[ebp]
	mov	eax, DWORD PTR _lens$[ebp]
	mov	DWORD PTR [eax+edx*4], 4
	mov	ecx, DWORD PTR _bufindex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _bufindex$[ebp], ecx
; Line 568
	mov	edx, DWORD PTR _aclient$[ebp]
	mov	eax, DWORD PTR [edx+124]
	add	eax, 1
	mov	DWORD PTR tv275[ebp], eax
	mov	ecx, DWORD PTR _aclient$[ebp]
	mov	edx, DWORD PTR tv275[ebp]
	mov	DWORD PTR [ecx+124], edx
	mov	eax, DWORD PTR tv275[ebp]
	push	eax
	push	OFFSET $SG85245
	push	OFFSET $SG85246
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
$LN14@MQTTAsync_@7:
; Line 571
	cmp	DWORD PTR _nbufs$[ebp], 0
	jle	SHORT $LN4@MQTTAsync_@7
; Line 573
	mov	edx, DWORD PTR _lens$[ebp]
	push	edx
	mov	eax, DWORD PTR _bufs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nbufs$[ebp]
	push	ecx
	lea	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _aclient$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	eax, DWORD PTR _aclient$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN3@MQTTAsync_@7
; Line 574
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	OFFSET $SG85250
	push	0
	push	5
	call	_Log
	add	esp, 16					; 00000010H
$LN3@MQTTAsync_@7:
; Line 575
	mov	edx, DWORD PTR _qcmd$[ebp]
	mov	eax, DWORD PTR _aclient$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR [edx+48], ecx
$LN4@MQTTAsync_@7:
; Line 577
	cmp	DWORD PTR _lens$[ebp], 0
	je	SHORT $LN2@MQTTAsync_@7
; Line 578
	mov	edx, DWORD PTR _lens$[ebp]
	push	edx
	push	578					; 00000242H
	push	OFFSET $SG85252
	call	_myfree
	add	esp, 12					; 0000000cH
$LN2@MQTTAsync_@7:
; Line 579
	cmp	DWORD PTR _bufs$[ebp], 0
	je	SHORT $LN1@MQTTAsync_@7
; Line 580
	mov	eax, DWORD PTR _bufs$[ebp]
	push	eax
	push	580					; 00000244H
	push	OFFSET $SG85254
	call	_myfree
	add	esp, 12					; 0000000cH
$LN1@MQTTAsync_@7:
; Line 581
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	581					; 00000245H
	push	OFFSET $SG85255
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 582
	mov	eax, DWORD PTR _rc$[ebp]
; Line 583
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_persistCommand ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_restoreCommand
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv77 = -28						; size = 4
_data_size$85296 = -24					; size = 4
_data_size$ = -20					; size = 4
_ptr$ = -16						; size = 4
_command$ = -12						; size = 4
_qcommand$ = -8						; size = 4
_i$ = -4						; size = 4
_buffer$ = 8						; size = 4
_buflen$ = 12						; size = 4
_MQTTAsync_restoreCommand PROC
; Line 587
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 588
	mov	DWORD PTR _command$[ebp], 0
; Line 589
	mov	DWORD PTR _qcommand$[ebp], 0
; Line 590
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax
; Line 593
	push	3
	push	593					; 00000251H
	push	OFFSET $SG85269
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 594
	push	52					; 00000034H
	push	594					; 00000252H
	push	OFFSET $SG85271
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _qcommand$[ebp], eax
; Line 595
	push	52					; 00000034H
	push	0
	mov	ecx, DWORD PTR _qcommand$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 596
	mov	edx, DWORD PTR _qcommand$[ebp]
	mov	DWORD PTR _command$[ebp], edx
; Line 598
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 599
	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 4
	mov	DWORD PTR _ptr$[ebp], eax
; Line 601
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+12], eax
; Line 602
	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 4
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 604
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv77[ebp], eax
	cmp	DWORD PTR tv77[ebp], 3
	je	$LN2@MQTTAsync_@8
	cmp	DWORD PTR tv77[ebp], 8
	je	SHORT $LN10@MQTTAsync_@8
	cmp	DWORD PTR tv77[ebp], 10			; 0000000aH
	je	$LN6@MQTTAsync_@8
	jmp	$LN1@MQTTAsync_@8
$LN10@MQTTAsync_@8:
; Line 607
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+24], eax
; Line 608
	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 4
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 610
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@MQTTAsync_@8
$LN8@MQTTAsync_@8:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN9@MQTTAsync_@8:
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jge	SHORT $LN7@MQTTAsync_@8
; Line 612
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _data_size$[ebp], eax
; Line 614
	mov	eax, DWORD PTR _data_size$[ebp]
	push	eax
	push	614					; 00000266H
	push	OFFSET $SG85287
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 615
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 616
	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, DWORD PTR _data_size$[ebp]
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 618
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 619
	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 4
	mov	DWORD PTR _ptr$[ebp], eax
; Line 620
	jmp	$LN8@MQTTAsync_@8
$LN7@MQTTAsync_@8:
; Line 621
	jmp	$LN11@MQTTAsync_@8
$LN6@MQTTAsync_@8:
; Line 624
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+24], eax
; Line 625
	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 4
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 627
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@MQTTAsync_@8
$LN4@MQTTAsync_@8:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN5@MQTTAsync_@8:
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jge	SHORT $LN3@MQTTAsync_@8
; Line 629
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _data_size$85296[ebp], eax
; Line 631
	mov	eax, DWORD PTR _data_size$85296[ebp]
	push	eax
	push	631					; 00000277H
	push	OFFSET $SG85297
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 632
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 633
	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, DWORD PTR _data_size$85296[ebp]
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 634
	jmp	SHORT $LN4@MQTTAsync_@8
$LN3@MQTTAsync_@8:
; Line 635
	jmp	$LN11@MQTTAsync_@8
$LN2@MQTTAsync_@8:
; Line 638
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _data_size$[ebp], eax
; Line 639
	mov	eax, DWORD PTR _data_size$[ebp]
	push	eax
	push	639					; 0000027fH
	push	OFFSET $SG85299
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 640
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 641
	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, DWORD PTR _data_size$[ebp]
	mov	DWORD PTR _ptr$[ebp], edx
; Line 643
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+28], edx
; Line 644
	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 4
	mov	DWORD PTR _ptr$[ebp], eax
; Line 646
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _data_size$[ebp], edx
; Line 647
	mov	eax, DWORD PTR _data_size$[ebp]
	push	eax
	push	647					; 00000287H
	push	OFFSET $SG85302
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 648
	mov	edx, DWORD PTR _data_size$[ebp]
	push	edx
	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 649
	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, DWORD PTR _data_size$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax
; Line 651
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+36], eax
; Line 652
	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 4
	mov	DWORD PTR _ptr$[ebp], ecx
; Line 654
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+40], ecx
; Line 655
	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 4
	mov	DWORD PTR _ptr$[ebp], edx
; Line 656
	jmp	SHORT $LN11@MQTTAsync_@8
$LN1@MQTTAsync_@8:
; Line 659
	mov	eax, DWORD PTR _qcommand$[ebp]
	push	eax
	push	659					; 00000293H
	push	OFFSET $SG85308
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 660
	mov	DWORD PTR _qcommand$[ebp], 0
$LN11@MQTTAsync_@8:
; Line 664
	push	3
	push	0
	push	664					; 00000298H
	push	OFFSET $SG85311
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 665
	mov	eax, DWORD PTR _qcommand$[ebp]
; Line 666
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_restoreCommand ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_insertInOrder
EXTRN	_ListInsert:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_index$ = -8						; size = 4
_current$ = -4						; size = 4
_list$ = 8						; size = 4
_content$ = 12						; size = 4
_size$ = 16						; size = 4
_MQTTAsync_insertInOrder PROC
; Line 670
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 671
	mov	DWORD PTR _index$[ebp], 0
; Line 672
	mov	DWORD PTR _current$[ebp], 0
; Line 674
	push	3
	push	674					; 000002a2H
	push	OFFSET $SG85324
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
$LN3@MQTTAsync_@9:
; Line 675
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@MQTTAsync_@9
	cmp	DWORD PTR _index$[ebp], 0
	jne	SHORT $LN2@MQTTAsync_@9
; Line 677
	mov	edx, DWORD PTR _current$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _content$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	cmp	edx, DWORD PTR [eax+48]
	jae	SHORT $LN1@MQTTAsync_@9
; Line 678
	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _index$[ebp], eax
$LN1@MQTTAsync_@9:
; Line 679
	jmp	SHORT $LN3@MQTTAsync_@9
$LN2@MQTTAsync_@9:
; Line 681
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	_ListInsert
	add	esp, 16					; 00000010H
; Line 682
	push	3
	push	0
	push	682					; 000002aaH
	push	OFFSET $SG85334
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 683
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_insertInOrder ENDP
_TEXT	ENDS
EXTRN	_MQTTPersistence_insertInOrder:PROC
EXTRN	__imp__atoi:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv155 = -40						; size = 4
_cmd$85357 = -36					; size = 4
_buffer$85349 = -32					; size = 4
_buflen$85351 = -28					; size = 4
_nkeys$ = -24						; size = 4
_c$ = -20						; size = 4
_commands_restored$ = -16				; size = 4
_msgkeys$ = -12						; size = 4
_i$ = -8						; size = 4
_rc$ = -4						; size = 4
_client$ = 8						; size = 4
_MQTTAsync_restoreCommands PROC
; Line 687
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
; Line 688
	mov	DWORD PTR _rc$[ebp], 0
; Line 691
	mov	DWORD PTR _i$[ebp], 0
; Line 692
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _c$[ebp], ecx
; Line 693
	mov	DWORD PTR _commands_restored$[ebp], 0
; Line 695
	push	3
	push	695					; 000002b7H
	push	OFFSET $SG85344
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 696
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	$LN9@MQTTAsync_@10
	lea	eax, DWORD PTR _nkeys$[ebp]
	push	eax
	lea	ecx, DWORD PTR _msgkeys$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
	cmp	DWORD PTR _rc$[ebp], 0
	jne	$LN9@MQTTAsync_@10
$LN8@MQTTAsync_@10:
; Line 698
	cmp	DWORD PTR _rc$[ebp], 0
	jne	$LN7@MQTTAsync_@10
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nkeys$[ebp]
	jge	$LN7@MQTTAsync_@10
; Line 700
	mov	DWORD PTR _buffer$85349[ebp], 0
; Line 703
	push	OFFSET $SG85353
	call	_strlen
	add	esp, 4
	push	eax
	push	OFFSET $SG85354
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _msgkeys$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN6@MQTTAsync_@10
	jmp	$LN5@MQTTAsync_@10
$LN6@MQTTAsync_@10:
; Line 705
	lea	edx, DWORD PTR _buflen$85351[ebp]
	push	edx
	lea	eax, DWORD PTR _buffer$85349[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _msgkeys$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
	cmp	DWORD PTR _rc$[ebp], 0
	jne	$LN5@MQTTAsync_@10
; Line 707
	mov	eax, DWORD PTR _buflen$85351[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$85349[ebp]
	push	ecx
	call	_MQTTAsync_restoreCommand
	add	esp, 8
	mov	DWORD PTR _cmd$85357[ebp], eax
; Line 709
	cmp	DWORD PTR _cmd$85357[ebp], 0
	je	$LN5@MQTTAsync_@10
; Line 711
	mov	edx, DWORD PTR _cmd$85357[ebp]
	mov	eax, DWORD PTR _client$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 712
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _msgkeys$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	add	eax, 2
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	mov	ecx, DWORD PTR _cmd$85357[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 713
	push	52					; 00000034H
	mov	edx, DWORD PTR _cmd$85357[ebp]
	push	edx
	mov	eax, DWORD PTR _commands
	push	eax
	call	_MQTTPersistence_insertInOrder
	add	esp, 12					; 0000000cH
; Line 714
	mov	ecx, DWORD PTR _buffer$85349[ebp]
	push	ecx
	push	714					; 000002caH
	push	OFFSET $SG85360
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 715
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR _cmd$85357[ebp]
	mov	ecx, DWORD PTR [edx+124]
	cmp	ecx, DWORD PTR [eax+48]
	jbe	SHORT $LN12@MQTTAsync_@10
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN13@MQTTAsync_@10
$LN12@MQTTAsync_@10:
	mov	ecx, DWORD PTR _cmd$85357[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR tv155[ebp], edx
$LN13@MQTTAsync_@10:
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR tv155[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 716
	mov	edx, DWORD PTR _commands_restored$[ebp]
	add	edx, 1
	mov	DWORD PTR _commands_restored$[ebp], edx
$LN5@MQTTAsync_@10:
; Line 719
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _msgkeys$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	je	SHORT $LN2@MQTTAsync_@10
; Line 720
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _msgkeys$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	push	720					; 000002d0H
	push	OFFSET $SG85362
	call	_myfree
	add	esp, 12					; 0000000cH
$LN2@MQTTAsync_@10:
; Line 721
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 722
	jmp	$LN8@MQTTAsync_@10
$LN7@MQTTAsync_@10:
; Line 723
	cmp	DWORD PTR _msgkeys$[ebp], 0
	je	SHORT $LN9@MQTTAsync_@10
; Line 724
	mov	eax, DWORD PTR _msgkeys$[ebp]
	push	eax
	push	724					; 000002d4H
	push	OFFSET $SG85365
	call	_myfree
	add	esp, 12					; 0000000cH
$LN9@MQTTAsync_@10:
; Line 726
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _commands_restored$[ebp]
	push	eax
	push	OFFSET $SG85366
	push	-1
	push	3
	call	_Log
	add	esp, 20					; 00000014H
; Line 727
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	727					; 000002d7H
	push	OFFSET $SG85367
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 728
	mov	eax, DWORD PTR _rc$[ebp]
; Line 729
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_restoreCommands ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_freeCommand
PUBLIC	_MQTTAsync_addCommand
EXTRN	_Thread_post_sem:PROC
EXTRN	_Thread_check_sem:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_head$85378 = -8					; size = 4
_rc$ = -4						; size = 4
_command$ = 8						; size = 4
_command_size$ = 12					; size = 4
_MQTTAsync_addCommand PROC
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 735
	mov	DWORD PTR _rc$[ebp], 0
; Line 737
	push	3
	push	737					; 000002e1H
	push	OFFSET $SG85375
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 738
	mov	eax, DWORD PTR _mqttcommand_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 739
	call	_MQTTAsync_start_clock
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 741
	mov	edx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [edx], 1
	je	SHORT $LN7@MQTTAsync_@11
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax], 14			; 0000000eH
	jne	SHORT $LN8@MQTTAsync_@11
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN8@MQTTAsync_@11
$LN7@MQTTAsync_@11:
; Line 743
	mov	DWORD PTR _head$85378[ebp], 0
; Line 745
	mov	edx, DWORD PTR _commands
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN6@MQTTAsync_@11
; Line 746
	mov	eax, DWORD PTR _commands
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _head$85378[ebp], edx
$LN6@MQTTAsync_@11:
; Line 748
	cmp	DWORD PTR _head$85378[ebp], 0
	je	SHORT $LN5@MQTTAsync_@11
	mov	eax, DWORD PTR _head$85378[ebp]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [eax+44]
	cmp	edx, DWORD PTR [ecx+44]
	jne	SHORT $LN5@MQTTAsync_@11
	mov	eax, DWORD PTR _head$85378[ebp]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@MQTTAsync_@11
; Line 749
	mov	eax, DWORD PTR _command$[ebp]
	push	eax
	call	_MQTTAsync_freeCommand
	add	esp, 4
; Line 750
	jmp	SHORT $LN4@MQTTAsync_@11
$LN5@MQTTAsync_@11:
; Line 751
	mov	ecx, DWORD PTR _commands
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _command_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _command$[ebp]
	push	ecx
	mov	edx, DWORD PTR _commands
	push	edx
	call	_ListInsert
	add	esp, 16					; 00000010H
$LN4@MQTTAsync_@11:
; Line 753
	jmp	SHORT $LN3@MQTTAsync_@11
$LN8@MQTTAsync_@11:
; Line 755
	mov	eax, DWORD PTR _command_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _command$[ebp]
	push	ecx
	mov	edx, DWORD PTR _commands
	push	edx
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 757
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN3@MQTTAsync_@11
; Line 758
	mov	eax, DWORD PTR _command$[ebp]
	push	eax
	call	_MQTTAsync_persistCommand
	add	esp, 4
$LN3@MQTTAsync_@11:
; Line 761
	mov	ecx, DWORD PTR _mqttcommand_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 765
	mov	edx, DWORD PTR _send_sem
	push	edx
	call	_Thread_check_sem
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@MQTTAsync_@11
; Line 766
	mov	eax, DWORD PTR _send_sem
	push	eax
	call	_Thread_post_sem
	add	esp, 4
$LN1@MQTTAsync_@11:
; Line 768
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	768					; 00000300H
	push	OFFSET $SG85388
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 769
	mov	eax, DWORD PTR _rc$[ebp]
; Line 770
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_addCommand ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_closeSession
PUBLIC	_MQTTAsync_checkDisconnect
; Function compile flags: /Odtp
_TEXT	SEGMENT
_was_connected$85399 = -8				; size = 4
_m$ = -4						; size = 4
_handle$ = 8						; size = 4
_command$ = 12						; size = 4
_MQTTAsync_checkDisconnect PROC
; Line 774
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 775
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 777
	push	3
	push	777					; 00000309H
	push	OFFSET $SG85396
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 779
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+64]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN4@MQTTAsync_@12
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_MQTTAsync_elapsed
	add	esp, 4
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	eax, DWORD PTR [ecx+28]
	jl	$LN5@MQTTAsync_@12
$LN4@MQTTAsync_@12:
; Line 781
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 1
	and	ecx, 1
	mov	DWORD PTR _was_connected$85399[ebp], ecx
; Line 782
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTAsync_closeSession
	add	esp, 4
; Line 783
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN3@MQTTAsync_@12
	mov	edx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN3@MQTTAsync_@12
	cmp	DWORD PTR _was_connected$85399[ebp], 0
	je	SHORT $LN3@MQTTAsync_@12
; Line 785
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG85401
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 786
	push	0
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 8
	jmp	SHORT $LN5@MQTTAsync_@12
$LN3@MQTTAsync_@12:
; Line 788
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	jne	SHORT $LN5@MQTTAsync_@12
	mov	edx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN5@MQTTAsync_@12
; Line 790
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG85405
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 791
	push	0
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
$LN5@MQTTAsync_@12:
; Line 794
	push	3
	push	0
	push	794					; 0000031aH
	push	OFFSET $SG85408
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 795
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_checkDisconnect ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_checkPendingWrites
EXTRN	_ListRemove:PROC
EXTRN	_MQTTProtocol_removePublication:PROC
EXTRN	_Socket_noPendingWrites:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_le$85413 = -4						; size = 4
_MQTTProtocol_checkPendingWrites PROC
; Line 804
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 805
	push	3
	push	805					; 00000325H
	push	OFFSET $SG85411
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 806
	cmp	DWORD PTR _state+40, 0
	jle	SHORT $LN5@MQTTProtoc
; Line 808
	mov	eax, DWORD PTR _state+28
	mov	DWORD PTR _le$85413[ebp], eax
$LN4@MQTTProtoc:
; Line 809
	cmp	DWORD PTR _le$85413[ebp], 0
	je	SHORT $LN5@MQTTProtoc
; Line 811
	mov	ecx, DWORD PTR _le$85413[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_Socket_noPendingWrites
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@MQTTProtoc
; Line 813
	mov	ecx, DWORD PTR _le$85413[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_MQTTProtocol_removePublication
	add	esp, 4
; Line 814
	mov	ecx, DWORD PTR _le$85413[ebp]
	mov	DWORD PTR _state+36, ecx
; Line 815
	mov	edx, DWORD PTR _le$85413[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET _state+28
	call	_ListRemove
	add	esp, 8
; Line 816
	mov	ecx, DWORD PTR _state+36
	mov	DWORD PTR _le$85413[ebp], ecx
; Line 818
	jmp	SHORT $LN1@MQTTProtoc
$LN2@MQTTProtoc:
; Line 819
	lea	edx, DWORD PTR _le$85413[ebp]
	push	edx
	push	OFFSET _state+28
	call	_ListNextElement
	add	esp, 8
$LN1@MQTTProtoc:
; Line 820
	jmp	SHORT $LN4@MQTTProtoc
$LN5@MQTTProtoc:
; Line 822
	push	3
	push	0
	push	822					; 00000336H
	push	OFFSET $SG85422
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 823
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTProtocol_checkPendingWrites ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_freeConnect
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$85428 = -4						; size = 4
_command$ = 8						; size = 44
_MQTTAsync_freeConnect PROC
; Line 827
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 828
	cmp	DWORD PTR _command$[ebp], 1
	jne	SHORT $LN6@MQTTAsync_@13
; Line 832
	mov	DWORD PTR _i$85428[ebp], 0
	jmp	SHORT $LN4@MQTTAsync_@13
$LN3@MQTTAsync_@13:
	mov	eax, DWORD PTR _i$85428[ebp]
	add	eax, 1
	mov	DWORD PTR _i$85428[ebp], eax
$LN4@MQTTAsync_@13:
	mov	ecx, DWORD PTR _i$85428[ebp]
	cmp	ecx, DWORD PTR _command$[ebp+28]
	jge	SHORT $LN2@MQTTAsync_@13
; Line 833
	mov	edx, DWORD PTR _i$85428[ebp]
	mov	eax, DWORD PTR _command$[ebp+32]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	push	833					; 00000341H
	push	OFFSET $SG85432
	call	_myfree
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN3@MQTTAsync_@13
$LN2@MQTTAsync_@13:
; Line 834
	cmp	DWORD PTR _command$[ebp+32], 0
	je	SHORT $LN6@MQTTAsync_@13
; Line 835
	mov	edx, DWORD PTR _command$[ebp+32]
	push	edx
	push	835					; 00000343H
	push	OFFSET $SG85434
	call	_myfree
	add	esp, 12					; 0000000cH
$LN6@MQTTAsync_@13:
; Line 837
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_freeConnect ENDP
; Function compile flags: /Odtp
_i$85448 = -8						; size = 4
_i$85439 = -4						; size = 4
_command$ = 8						; size = 4
_MQTTAsync_freeCommand1 PROC
; Line 841
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 842
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax], 8
	jne	SHORT $LN12@MQTTAsync_@14
; Line 846
	mov	DWORD PTR _i$85439[ebp], 0
	jmp	SHORT $LN11@MQTTAsync_@14
$LN10@MQTTAsync_@14:
	mov	ecx, DWORD PTR _i$85439[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$85439[ebp], ecx
$LN11@MQTTAsync_@14:
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR _i$85439[ebp]
	cmp	eax, DWORD PTR [edx+24]
	jge	SHORT $LN9@MQTTAsync_@14
; Line 847
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _i$85439[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	push	847					; 0000034fH
	push	OFFSET $SG85443
	call	_myfree
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN10@MQTTAsync_@14
$LN9@MQTTAsync_@14:
; Line 849
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	push	849					; 00000351H
	push	OFFSET $SG85444
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 850
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	push	850					; 00000352H
	push	OFFSET $SG85445
	call	_myfree
	add	esp, 12					; 0000000cH
	jmp	$LN13@MQTTAsync_@14
$LN12@MQTTAsync_@14:
; Line 852
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax], 10			; 0000000aH
	jne	SHORT $LN7@MQTTAsync_@14
; Line 856
	mov	DWORD PTR _i$85448[ebp], 0
	jmp	SHORT $LN6@MQTTAsync_@14
$LN5@MQTTAsync_@14:
	mov	ecx, DWORD PTR _i$85448[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$85448[ebp], ecx
$LN6@MQTTAsync_@14:
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR _i$85448[ebp]
	cmp	eax, DWORD PTR [edx+24]
	jge	SHORT $LN4@MQTTAsync_@14
; Line 857
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _i$85448[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	push	857					; 00000359H
	push	OFFSET $SG85452
	call	_myfree
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@MQTTAsync_@14
$LN4@MQTTAsync_@14:
; Line 859
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	push	859					; 0000035bH
	push	OFFSET $SG85453
	call	_myfree
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN13@MQTTAsync_@14
$LN7@MQTTAsync_@14:
; Line 861
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx], 3
	jne	SHORT $LN13@MQTTAsync_@14
; Line 864
	mov	edx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	SHORT $LN1@MQTTAsync_@14
; Line 865
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	865					; 00000361H
	push	OFFSET $SG85457
	call	_myfree
	add	esp, 12					; 0000000cH
$LN1@MQTTAsync_@14:
; Line 866
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	push	866					; 00000362H
	push	OFFSET $SG85458
	call	_myfree
	add	esp, 12					; 0000000cH
$LN13@MQTTAsync_@14:
; Line 868
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_freeCommand1 ENDP
; Function compile flags: /Odtp
_command$ = 8						; size = 4
_MQTTAsync_freeCommand PROC
; Line 871
	push	ebp
	mov	ebp, esp
; Line 872
	mov	eax, DWORD PTR _command$[ebp]
	push	eax
	call	_MQTTAsync_freeCommand1
	add	esp, 4
; Line 873
	mov	ecx, DWORD PTR _command$[ebp]
	push	ecx
	push	873					; 00000369H
	push	OFFSET $SG85462
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 874
	pop	ebp
	ret	0
_MQTTAsync_freeCommand ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_ListDetach:PROC
EXTRN	_ListFindItem:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_data$85485 = -64					; size = 40
__$ArrayPad$ = -24					; size = 4
_com$85477 = -20					; size = 4
_cur_response$85474 = -16				; size = 4
_command$85476 = -12					; size = 4
_m$85471 = -8						; size = 4
_found$ = -4						; size = 4
_socket$ = 8						; size = 4
_MQTTAsync_writeComplete PROC
; Line 878
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 879
	mov	DWORD PTR _found$[ebp], 0
; Line 881
	push	3
	push	881					; 00000371H
	push	OFFSET $SG85468
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 884
	call	_MQTTProtocol_checkPendingWrites
; Line 887
	push	OFFSET _clientSockCompare
	lea	eax, DWORD PTR _socket$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handles
	push	ecx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _found$[ebp], eax
	cmp	DWORD PTR _found$[ebp], 0
	je	$LN6@MQTTAsync_@15
; Line 889
	mov	edx, DWORD PTR _found$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _m$85471[ebp], eax
; Line 891
	mov	ecx, DWORD PTR _m$85471[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 24					; 00000018H
	push	edx
	call	_time
	add	esp, 4
; Line 894
	mov	eax, DWORD PTR _m$85471[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	$LN6@MQTTAsync_@15
; Line 896
	mov	DWORD PTR _cur_response$85474[ebp], 0
; Line 897
	mov	ecx, DWORD PTR _m$85471[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR _command$85476[ebp], edx
; Line 898
	mov	DWORD PTR _com$85477[ebp], 0
$LN4@MQTTAsync_@15:
; Line 900
	lea	eax, DWORD PTR _cur_response$85474[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$85471[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@MQTTAsync_@15
; Line 902
	mov	eax, DWORD PTR _cur_response$85474[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _com$85477[ebp], ecx
; Line 903
	mov	edx, DWORD PTR _com$85477[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR _m$85471[ebp]
	mov	edx, DWORD PTR [eax+116]
	cmp	edx, DWORD PTR [ecx+116]
	jne	SHORT $LN2@MQTTAsync_@15
; Line 904
	jmp	SHORT $LN3@MQTTAsync_@15
$LN2@MQTTAsync_@15:
; Line 905
	jmp	SHORT $LN4@MQTTAsync_@15
$LN3@MQTTAsync_@15:
; Line 907
	cmp	DWORD PTR _cur_response$85474[ebp], 0
	je	SHORT $LN1@MQTTAsync_@15
	mov	eax, DWORD PTR _command$85476[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@MQTTAsync_@15
; Line 911
	mov	ecx, DWORD PTR _command$85476[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _data$85485[ebp], edx
; Line 912
	mov	eax, DWORD PTR _command$85476[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _data$85485[ebp+36], ecx
; Line 913
	mov	edx, DWORD PTR _command$85476[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR _data$85485[ebp+16], eax
; Line 914
	mov	ecx, DWORD PTR _command$85476[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _data$85485[ebp+12], edx
; Line 915
	mov	eax, DWORD PTR _command$85476[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _data$85485[ebp+20], ecx
; Line 916
	mov	edx, DWORD PTR _command$85476[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _data$85485[ebp+24], eax
; Line 917
	mov	ecx, DWORD PTR _m$85471[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG85486
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 918
	lea	ecx, DWORD PTR _data$85485[ebp]
	push	ecx
	mov	edx, DWORD PTR _command$85476[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _command$85476[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 8
$LN1@MQTTAsync_@15:
; Line 920
	mov	eax, DWORD PTR _m$85471[ebp]
	mov	DWORD PTR [eax+116], 0
; Line 922
	mov	ecx, DWORD PTR _com$85477[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$85471[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_ListDetach
	add	esp, 8
; Line 923
	mov	ecx, DWORD PTR _com$85477[ebp]
	push	ecx
	call	_MQTTAsync_freeCommand
	add	esp, 4
$LN6@MQTTAsync_@15:
; Line 926
	push	3
	push	0
	push	926					; 0000039eH
	push	OFFSET $SG85489
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 927
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_writeComplete ENDP
_TEXT	ENDS
EXTRN	__imp___time64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 132
	push	ebp
	mov	ebp, esp
; Line 133
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
; Line 134
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_disconnect_internal
PUBLIC	_MQTTAsync_disconnect
PUBLIC	__$ArrayPad$
PUBLIC	_MQTTAsync_processCommand
EXTRN	_MQTTProtocol_startPublish:PROC
EXTRN	_MQTTProtocol_unsubscribe:PROC
EXTRN	_MQTTProtocol_subscribe:PROC
EXTRN	_Socket_addPendingWrite:PROC
EXTRN	_MQTTProtocol_connect:PROC
EXTRN	_ListFreeNoContent:PROC
EXTRN	_ListFind:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_opts$85585 = -120					; size = 24
_data$85563 = -96					; size = 40
__$ArrayPad$ = -56					; size = 4
_msg$85554 = -52					; size = 4
_p$85556 = -48						; size = 4
_topics$85547 = -44					; size = 4
_i$85548 = -40						; size = 4
_qoss$85539 = -36					; size = 4
_topics$85538 = -32					; size = 4
_i$85540 = -28						; size = 4
_serverURI$85519 = -24					; size = 4
_cmd$85503 = -20					; size = 4
_cur_command$ = -16					; size = 4
_ignored_clients$ = -12					; size = 4
_command$ = -8						; size = 4
_rc$ = -4						; size = 4
_MQTTAsync_processCommand PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttasync.c
; Line 931
	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
; Line 932
	mov	DWORD PTR _rc$[ebp], 0
; Line 933
	mov	DWORD PTR _command$[ebp], 0
; Line 934
	mov	DWORD PTR _cur_command$[ebp], 0
; Line 935
	mov	DWORD PTR _ignored_clients$[ebp], 0
; Line 937
	push	3
	push	937					; 000003a9H
	push	OFFSET $SG85499
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 938
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 939
	mov	ecx, DWORD PTR _mqttcommand_mutex
	push	ecx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 945
	call	_ListInitialize
	mov	DWORD PTR _ignored_clients$[ebp], eax
$LN64@MQTTAsync_@16:
; Line 948
	lea	edx, DWORD PTR _cur_command$[ebp]
	push	edx
	mov	eax, DWORD PTR _commands
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	$LN63@MQTTAsync_@16
; Line 950
	mov	ecx, DWORD PTR _cur_command$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _cmd$85503[ebp], edx
; Line 952
	mov	eax, DWORD PTR _cmd$85503[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _ignored_clients$[ebp]
	push	edx
	call	_ListFind
	add	esp, 8
	test	eax, eax
	je	SHORT $LN62@MQTTAsync_@16
; Line 953
	jmp	SHORT $LN64@MQTTAsync_@16
$LN62@MQTTAsync_@16:
; Line 956
	mov	eax, DWORD PTR _cmd$85503[ebp]
	cmp	DWORD PTR [eax], 1
	je	SHORT $LN60@MQTTAsync_@16
	mov	ecx, DWORD PTR _cmd$85503[ebp]
	cmp	DWORD PTR [ecx], 14			; 0000000eH
	je	SHORT $LN60@MQTTAsync_@16
	mov	edx, DWORD PTR _cmd$85503[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	and	edx, 1
	je	SHORT $LN61@MQTTAsync_@16
	mov	eax, DWORD PTR _cmd$85503[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+12]
	shl	eax, 24					; 00000018H
	sar	eax, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN61@MQTTAsync_@16
	mov	ecx, DWORD PTR _cmd$85503[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_Socket_noPendingWrites
	add	esp, 4
	test	eax, eax
	je	SHORT $LN61@MQTTAsync_@16
$LN60@MQTTAsync_@16:
; Line 959
	mov	edx, DWORD PTR _cmd$85503[ebp]
	cmp	DWORD PTR [edx], 3
	je	SHORT $LN58@MQTTAsync_@16
	mov	eax, DWORD PTR _cmd$85503[ebp]
	cmp	DWORD PTR [eax], 8
	je	SHORT $LN58@MQTTAsync_@16
	mov	ecx, DWORD PTR _cmd$85503[ebp]
	cmp	DWORD PTR [ecx], 10			; 0000000aH
	jne	SHORT $LN59@MQTTAsync_@16
$LN58@MQTTAsync_@16:
	mov	edx, DWORD PTR _cmd$85503[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+64]
	cmp	DWORD PTR [edx+12], 65534		; 0000fffeH
	jl	SHORT $LN59@MQTTAsync_@16
; Line 961
	jmp	SHORT $LN61@MQTTAsync_@16
$LN59@MQTTAsync_@16:
; Line 963
	mov	eax, DWORD PTR _cmd$85503[ebp]
	mov	DWORD PTR _command$[ebp], eax
; Line 964
	jmp	SHORT $LN63@MQTTAsync_@16
$LN61@MQTTAsync_@16:
; Line 967
	push	4
	mov	ecx, DWORD PTR _cmd$85503[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR _ignored_clients$[ebp]
	push	eax
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 968
	jmp	$LN64@MQTTAsync_@16
$LN63@MQTTAsync_@16:
; Line 969
	mov	ecx, DWORD PTR _ignored_clients$[ebp]
	push	ecx
	call	_ListFreeNoContent
	add	esp, 4
; Line 970
	cmp	DWORD PTR _command$[ebp], 0
	je	SHORT $LN56@MQTTAsync_@16
; Line 972
	mov	edx, DWORD PTR _command$[ebp]
	push	edx
	mov	eax, DWORD PTR _commands
	push	eax
	call	_ListDetach
	add	esp, 8
; Line 974
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN56@MQTTAsync_@16
; Line 975
	mov	ecx, DWORD PTR _command$[ebp]
	push	ecx
	call	_MQTTAsync_unpersistCommand
	add	esp, 4
$LN56@MQTTAsync_@16:
; Line 978
	mov	edx, DWORD PTR _mqttcommand_mutex
	push	edx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 980
	cmp	DWORD PTR _command$[ebp], 0
	jne	SHORT $LN54@MQTTAsync_@16
; Line 981
	jmp	$exit$85514
$LN54@MQTTAsync_@16:
; Line 983
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax], 1
	jne	$LN53@MQTTAsync_@16
; Line 985
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 24					; 00000018H
	sar	ecx, 28					; 0000001cH
	test	ecx, ecx
	jne	SHORT $LN51@MQTTAsync_@16
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	and	edx, 1
	je	SHORT $LN52@MQTTAsync_@16
$LN51@MQTTAsync_@16:
; Line 986
	mov	DWORD PTR _rc$[ebp], 0
; Line 987
	jmp	$LN50@MQTTAsync_@16
$LN52@MQTTAsync_@16:
; Line 989
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _serverURI$85519[ebp], edx
; Line 991
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jle	$LN49@MQTTAsync_@16
; Line 993
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax+88], 0
	jne	SHORT $LN48@MQTTAsync_@16
; Line 995
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx+40], 3
	jne	SHORT $LN47@MQTTAsync_@16
; Line 997
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+36]
	add	eax, 1
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [ecx+36], eax
; Line 998
	mov	edx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [edx+40], 4
$LN47@MQTTAsync_@16:
; Line 1001
	jmp	SHORT $LN46@MQTTAsync_@16
$LN48@MQTTAsync_@16:
; Line 1002
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	edx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [edx+36], ecx
$LN46@MQTTAsync_@16:
; Line 1003
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _serverURI$85519[ebp], ecx
; Line 1005
	push	OFFSET $SG85525
	call	_strlen
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _serverURI$85519[ebp]
	push	edx
	push	OFFSET $SG85526
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN49@MQTTAsync_@16
; Line 1006
	push	OFFSET $SG85527
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _serverURI$85519[ebp]
	mov	DWORD PTR _serverURI$85519[ebp], eax
$LN49@MQTTAsync_@16:
; Line 1016
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx+88], 0
	jne	SHORT $LN44@MQTTAsync_@16
; Line 1018
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN43@MQTTAsync_@16
; Line 1019
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [ecx+40], 4
	jmp	SHORT $LN42@MQTTAsync_@16
$LN43@MQTTAsync_@16:
; Line 1020
	mov	edx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [edx+40], 4
	jne	SHORT $LN42@MQTTAsync_@16
; Line 1021
	mov	eax, DWORD PTR _command$[ebp]
	mov	DWORD PTR [eax+40], 3
$LN42@MQTTAsync_@16:
; Line 1023
	jmp	SHORT $LN40@MQTTAsync_@16
$LN44@MQTTAsync_@16:
; Line 1024
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [eax+88]
	mov	DWORD PTR [ecx+40], edx
$LN40@MQTTAsync_@16:
; Line 1026
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _serverURI$85519[ebp]
	push	edx
	push	OFFSET $SG85533
	push	-1
	push	3
	call	_Log
	add	esp, 20					; 00000014H
; Line 1030
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _serverURI$85519[ebp]
	push	edx
	call	_MQTTProtocol_connect
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
; Line 1032
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+12]
	shl	eax, 24					; 00000018H
	sar	eax, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN39@MQTTAsync_@16
; Line 1033
	mov	DWORD PTR _rc$[ebp], -1
$LN39@MQTTAsync_@16:
; Line 1039
	cmp	DWORD PTR _rc$[ebp], 10036		; 00002734H
	jne	SHORT $LN50@MQTTAsync_@16
; Line 1040
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_Socket_addPendingWrite
	add	esp, 4
$LN50@MQTTAsync_@16:
; Line 1041
	jmp	$LN37@MQTTAsync_@16
$LN53@MQTTAsync_@16:
; Line 1043
	mov	edx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [edx], 8
	jne	$LN36@MQTTAsync_@16
; Line 1045
	call	_ListInitialize
	mov	DWORD PTR _topics$85538[ebp], eax
; Line 1046
	call	_ListInitialize
	mov	DWORD PTR _qoss$85539[ebp], eax
; Line 1049
	mov	DWORD PTR _i$85540[ebp], 0
	jmp	SHORT $LN35@MQTTAsync_@16
$LN34@MQTTAsync_@16:
	mov	eax, DWORD PTR _i$85540[ebp]
	add	eax, 1
	mov	DWORD PTR _i$85540[ebp], eax
$LN35@MQTTAsync_@16:
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR _i$85540[ebp]
	cmp	edx, DWORD PTR [ecx+24]
	jge	SHORT $LN33@MQTTAsync_@16
; Line 1051
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _i$85540[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _i$85540[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _topics$85538[ebp]
	push	edx
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 1052
	push	4
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _i$85540[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _qoss$85539[ebp]
	push	ecx
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 1053
	jmp	SHORT $LN34@MQTTAsync_@16
$LN33@MQTTAsync_@16:
; Line 1054
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _qoss$85539[ebp]
	push	ecx
	mov	edx, DWORD PTR _topics$85538[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_MQTTProtocol_subscribe
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
; Line 1055
	mov	eax, DWORD PTR _topics$85538[ebp]
	push	eax
	call	_ListFreeNoContent
	add	esp, 4
; Line 1056
	mov	ecx, DWORD PTR _qoss$85539[ebp]
	push	ecx
	call	_ListFreeNoContent
	add	esp, 4
	jmp	$LN37@MQTTAsync_@16
$LN36@MQTTAsync_@16:
; Line 1058
	mov	edx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [edx], 10			; 0000000aH
	jne	$LN31@MQTTAsync_@16
; Line 1060
	call	_ListInitialize
	mov	DWORD PTR _topics$85547[ebp], eax
; Line 1063
	mov	DWORD PTR _i$85548[ebp], 0
	jmp	SHORT $LN30@MQTTAsync_@16
$LN29@MQTTAsync_@16:
	mov	eax, DWORD PTR _i$85548[ebp]
	add	eax, 1
	mov	DWORD PTR _i$85548[ebp], eax
$LN30@MQTTAsync_@16:
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR _i$85548[ebp]
	cmp	edx, DWORD PTR [ecx+24]
	jge	SHORT $LN28@MQTTAsync_@16
; Line 1064
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _i$85548[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _i$85548[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _topics$85547[ebp]
	push	edx
	call	_ListAppend
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN29@MQTTAsync_@16
$LN28@MQTTAsync_@16:
; Line 1066
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _topics$85547[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_MQTTProtocol_unsubscribe
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax
; Line 1067
	mov	eax, DWORD PTR _topics$85547[ebp]
	push	eax
	call	_ListFreeNoContent
	add	esp, 4
	jmp	$LN37@MQTTAsync_@16
$LN31@MQTTAsync_@16:
; Line 1069
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx], 3
	jne	$LN26@MQTTAsync_@16
; Line 1071
	mov	DWORD PTR _msg$85554[ebp], 0
; Line 1072
	mov	DWORD PTR _p$85556[ebp], 0
; Line 1074
	push	24					; 00000018H
	push	1074					; 00000432H
	push	OFFSET $SG85559
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$85556[ebp], eax
; Line 1076
	mov	edx, DWORD PTR _p$85556[ebp]
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx+16], ecx
; Line 1077
	mov	edx, DWORD PTR _p$85556[ebp]
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [edx+20], ecx
; Line 1078
	mov	edx, DWORD PTR _p$85556[ebp]
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+4], ecx
; Line 1079
	mov	edx, DWORD PTR _p$85556[ebp]
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], ecx
; Line 1081
	lea	edx, DWORD PTR _msg$85554[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _p$85556[ebp]
	push	ecx
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MQTTProtocol_startPublish
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax
; Line 1083
	mov	edx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [edx+36], 0
	jne	$LN25@MQTTAsync_@16
; Line 1085
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN24@MQTTAsync_@16
; Line 1087
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN23@MQTTAsync_@16
; Line 1091
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _data$85563[ebp], edx
; Line 1092
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _data$85563[ebp+36], ecx
; Line 1093
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR _data$85563[ebp+16], eax
; Line 1094
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _data$85563[ebp+12], edx
; Line 1095
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _data$85563[ebp+20], ecx
; Line 1096
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _data$85563[ebp+24], eax
; Line 1097
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG85564
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1098
	lea	edx, DWORD PTR _data$85563[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
$LN23@MQTTAsync_@16:
; Line 1101
	jmp	SHORT $LN22@MQTTAsync_@16
$LN24@MQTTAsync_@16:
; Line 1103
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 1104
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [eax+116], ecx
$LN22@MQTTAsync_@16:
; Line 1107
	jmp	SHORT $LN21@MQTTAsync_@16
$LN25@MQTTAsync_@16:
; Line 1108
	mov	edx, DWORD PTR _command$[ebp]
	mov	DWORD PTR [edx+24], 0
$LN21@MQTTAsync_@16:
; Line 1109
	mov	eax, DWORD PTR _p$85556[ebp]
	push	eax
	push	1109					; 00000455H
	push	OFFSET $SG85569
	call	_myfree
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN37@MQTTAsync_@16
$LN26@MQTTAsync_@16:
; Line 1111
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx], 14			; 0000000eH
	jne	SHORT $LN37@MQTTAsync_@16
; Line 1113
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 24					; 00000018H
	sar	edx, 28					; 0000001cH
	test	edx, edx
	jne	SHORT $LN17@MQTTAsync_@16
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 1
	and	eax, 1
	je	SHORT $LN37@MQTTAsync_@16
$LN17@MQTTAsync_@16:
; Line 1115
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, -241				; ffffff0fH
	or	ecx, 224				; 000000e0H
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+12], ecx
; Line 1116
	mov	eax, DWORD PTR _command$[ebp]
	push	eax
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	_MQTTAsync_checkDisconnect
	add	esp, 8
$LN37@MQTTAsync_@16:
; Line 1120
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN16@MQTTAsync_@16
	cmp	DWORD PTR _rc$[ebp], -1
	je	SHORT $LN16@MQTTAsync_@16
	cmp	DWORD PTR _rc$[ebp], -2			; fffffffeH
	je	SHORT $LN16@MQTTAsync_@16
; Line 1122
	mov	esi, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edi, DWORD PTR [ecx+44]
	add	edi, 28					; 0000001cH
	mov	ecx, 11					; 0000000bH
	rep movsd
; Line 1123
	mov	edx, DWORD PTR _command$[ebp]
	push	edx
	call	_MQTTAsync_freeCommand
	add	esp, 4
	jmp	$exit$85514
$LN16@MQTTAsync_@16:
; Line 1125
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax], 14			; 0000000eH
	jne	SHORT $LN14@MQTTAsync_@16
; Line 1127
	mov	esi, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edi, DWORD PTR [ecx+44]
	add	edi, 72					; 00000048H
	mov	ecx, 11					; 0000000bH
	rep movsd
; Line 1128
	mov	edx, DWORD PTR _command$[ebp]
	push	edx
	call	_MQTTAsync_freeCommand
	add	esp, 4
	jmp	$exit$85514
$LN14@MQTTAsync_@16:
; Line 1130
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax], 3
	jne	SHORT $LN12@MQTTAsync_@16
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	jne	SHORT $LN12@MQTTAsync_@16
; Line 1132
	cmp	DWORD PTR _rc$[ebp], -22		; ffffffeaH
	jne	SHORT $LN11@MQTTAsync_@16
; Line 1133
	push	4
	mov	edx, DWORD PTR _command$[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 1134
	jmp	SHORT $LN10@MQTTAsync_@16
$LN11@MQTTAsync_@16:
; Line 1135
	mov	eax, DWORD PTR _command$[ebp]
	push	eax
	call	_MQTTAsync_freeCommand
	add	esp, 4
$LN10@MQTTAsync_@16:
; Line 1137
	jmp	$exit$85514
$LN12@MQTTAsync_@16:
	cmp	DWORD PTR _rc$[ebp], -1
	je	SHORT $LN7@MQTTAsync_@16
	cmp	DWORD PTR _rc$[ebp], -2			; fffffffeH
	jne	$LN8@MQTTAsync_@16
$LN7@MQTTAsync_@16:
; Line 1139
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN6@MQTTAsync_@16
; Line 1141
	mov	BYTE PTR _opts$85585[ebp], 77		; 0000004dH
	mov	BYTE PTR _opts$85585[ebp+1], 81		; 00000051H
	mov	BYTE PTR _opts$85585[ebp+2], 84		; 00000054H
	mov	BYTE PTR _opts$85585[ebp+3], 68		; 00000044H
	mov	DWORD PTR _opts$85585[ebp+4], 0
	mov	DWORD PTR _opts$85585[ebp+8], 0
	mov	DWORD PTR _opts$85585[ebp+12], 0
	mov	DWORD PTR _opts$85585[ebp+16], 0
	mov	DWORD PTR _opts$85585[ebp+20], 0
; Line 1142
	lea	edx, DWORD PTR _opts$85585[ebp]
	push	edx
	mov	eax, DWORD PTR _command$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	_MQTTAsync_disconnect
	add	esp, 8
; Line 1144
	jmp	SHORT $LN5@MQTTAsync_@16
$LN6@MQTTAsync_@16:
; Line 1145
	push	0
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	_MQTTAsync_disconnect_internal
	add	esp, 8
$LN5@MQTTAsync_@16:
; Line 1147
	mov	ecx, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN4@MQTTAsync_@16
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR _command$[ebp]
	push	ecx
	call	_MQTTAsync_checkConn
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@MQTTAsync_@16
; Line 1149
	push	OFFSET $SG85591
	push	-1
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
; Line 1151
	push	20					; 00000014H
	mov	edx, DWORD PTR _command$[ebp]
	push	edx
	call	_MQTTAsync_addCommand
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
; Line 1153
	jmp	SHORT $LN3@MQTTAsync_@16
$LN4@MQTTAsync_@16:
; Line 1155
	mov	eax, DWORD PTR _command$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@MQTTAsync_@16
; Line 1157
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG85594
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1158
	push	0
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _command$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
$LN2@MQTTAsync_@16:
; Line 1160
	mov	esi, DWORD PTR _command$[ebp]
	sub	esp, 44					; 0000002cH
	mov	ecx, 11					; 0000000bH
	mov	edi, esp
	rep movsd
	call	_MQTTAsync_freeConnect
	add	esp, 44					; 0000002cH
; Line 1161
	mov	eax, DWORD PTR _command$[ebp]
	push	eax
	call	_MQTTAsync_freeCommand
	add	esp, 4
$LN3@MQTTAsync_@16:
; Line 1164
	jmp	SHORT $exit$85514
$LN8@MQTTAsync_@16:
; Line 1165
	push	4
	mov	ecx, DWORD PTR _command$[ebp]
	push	ecx
	mov	edx, DWORD PTR _command$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_ListAppend
	add	esp, 12					; 0000000cH
$exit$85514:
; Line 1168
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 1169
	push	3
	push	0
	push	1169					; 00000491H
	push	OFFSET $SG85598
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1170
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_processCommand ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_closeOnly
PUBLIC	__real@4008000000000000
PUBLIC	_MQTTAsync_checkTimeouts
EXTRN	_ListRemoveHead:PROC
EXTRN	_MQTTPacket_name:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
_com$85633 = -40					; size = 4
_conn$85620 = -36					; size = 4
_m$85616 = -32						; size = 4
_timed_out_count$85615 = -28				; size = 4
_cur_response$85612 = -24				; size = 4
_i$85614 = -20						; size = 4
_now$ = -16						; size = 8
_current$ = -4						; size = 4
_MQTTAsync_checkTimeouts PROC
; Line 1174
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
; Line 1175
	mov	DWORD PTR _current$[ebp], 0
; Line 1179
	push	3
	push	1179					; 0000049bH
	push	OFFSET $SG85606
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1180
	lea	eax, DWORD PTR _now$[ebp]
	push	eax
	call	_time
	add	esp, 4
; Line 1181
	mov	ecx, DWORD PTR ?last@?1??MQTTAsync_checkTimeouts@@9@9+4
	push	ecx
	mov	edx, DWORD PTR ?last@?1??MQTTAsync_checkTimeouts@@9@9
	push	edx
	mov	eax, DWORD PTR _now$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _now$[ebp]
	push	ecx
	call	_difftime
	add	esp, 16					; 00000010H
	fcomp	QWORD PTR __real@4008000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN16@MQTTAsync_@17
; Line 1182
	jmp	$exit$85608
$LN16@MQTTAsync_@17:
; Line 1184
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1185
	mov	eax, DWORD PTR _now$[ebp]
	mov	DWORD PTR ?last@?1??MQTTAsync_checkTimeouts@@9@9, eax
	mov	ecx, DWORD PTR _now$[ebp+4]
	mov	DWORD PTR ?last@?1??MQTTAsync_checkTimeouts@@9@9+4, ecx
$LN19@MQTTAsync_@17:
; Line 1186
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _handles
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	$LN14@MQTTAsync_@17
; Line 1188
	mov	DWORD PTR _cur_response$85612[ebp], 0
; Line 1189
	mov	DWORD PTR _i$85614[ebp], 0
; Line 1190
	mov	DWORD PTR _timed_out_count$85615[ebp], 0
; Line 1192
	mov	ecx, DWORD PTR _current$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _m$85616[ebp], edx
; Line 1195
	mov	eax, DWORD PTR _m$85616[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 24					; 00000018H
	sar	edx, 28					; 0000001cH
	test	edx, edx
	je	$LN13@MQTTAsync_@17
	mov	eax, DWORD PTR _m$85616[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	_MQTTAsync_elapsed
	add	esp, 4
	mov	edx, DWORD PTR _m$85616[ebp]
	mov	ecx, DWORD PTR [edx+52]
	imul	ecx, 1000				; 000003e8H
	cmp	eax, ecx
	jle	$LN13@MQTTAsync_@17
; Line 1197
	mov	edx, DWORD PTR _m$85616[ebp]
	push	edx
	mov	eax, DWORD PTR _m$85616[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	_MQTTAsync_checkConn
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@MQTTAsync_@17
; Line 1201
	mov	ecx, DWORD PTR _m$85616[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_MQTTAsync_closeOnly
	add	esp, 4
; Line 1203
	push	52					; 00000034H
	push	1203					; 000004b3H
	push	OFFSET $SG85622
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _conn$85620[ebp], eax
; Line 1204
	push	52					; 00000034H
	push	0
	mov	eax, DWORD PTR _conn$85620[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1205
	mov	ecx, DWORD PTR _conn$85620[ebp]
	mov	edx, DWORD PTR _m$85616[ebp]
	mov	DWORD PTR [ecx+44], edx
; Line 1206
	mov	esi, DWORD PTR _m$85616[ebp]
	add	esi, 28					; 0000001cH
	mov	ecx, 11					; 0000000bH
	mov	edi, DWORD PTR _conn$85620[ebp]
	rep movsd
; Line 1207
	push	OFFSET $SG85624
	push	-1
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
; Line 1208
	push	44					; 0000002cH
	mov	eax, DWORD PTR _conn$85620[ebp]
	push	eax
	call	_MQTTAsync_addCommand
	add	esp, 8
; Line 1210
	jmp	SHORT $LN10@MQTTAsync_@17
$LN12@MQTTAsync_@17:
; Line 1212
	mov	ecx, DWORD PTR _m$85616[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_MQTTAsync_closeSession
	add	esp, 4
; Line 1213
	mov	esi, DWORD PTR _m$85616[ebp]
	add	esi, 28					; 0000001cH
	sub	esp, 44					; 0000002cH
	mov	ecx, 11					; 0000000bH
	mov	edi, esp
	rep movsd
	call	_MQTTAsync_freeConnect
	add	esp, 44					; 0000002cH
; Line 1214
	mov	eax, DWORD PTR _m$85616[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN10@MQTTAsync_@17
; Line 1216
	mov	ecx, DWORD PTR _m$85616[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG85627
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1217
	push	0
	mov	ecx, DWORD PTR _m$85616[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR _m$85616[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	ecx
	add	esp, 8
$LN10@MQTTAsync_@17:
; Line 1220
	jmp	$LN19@MQTTAsync_@17
$LN13@MQTTAsync_@17:
; Line 1224
	mov	edx, DWORD PTR _m$85616[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 24					; 00000018H
	sar	ecx, 28					; 0000001cH
	cmp	ecx, -2					; fffffffeH
	jne	SHORT $LN9@MQTTAsync_@17
; Line 1225
	mov	edx, DWORD PTR _m$85616[ebp]
	add	edx, 72					; 00000048H
	push	edx
	mov	eax, DWORD PTR _m$85616[ebp]
	push	eax
	call	_MQTTAsync_checkDisconnect
	add	esp, 8
$LN9@MQTTAsync_@17:
; Line 1227
	mov	DWORD PTR _timed_out_count$85615[ebp], 0
$LN8@MQTTAsync_@17:
; Line 1229
	lea	ecx, DWORD PTR _cur_response$85612[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$85616[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@MQTTAsync_@17
; Line 1231
	mov	ecx, DWORD PTR _cur_response$85612[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _com$85633[ebp], edx
; Line 1233
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN6@MQTTAsync_@17
; Line 1234
	jmp	SHORT $LN7@MQTTAsync_@17
; Line 1235
	jmp	SHORT $LN5@MQTTAsync_@17
$LN6@MQTTAsync_@17:
; Line 1237
	mov	ecx, DWORD PTR _com$85633[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN4@MQTTAsync_@17
; Line 1240
	mov	edx, DWORD PTR _m$85616[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _com$85633[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_MQTTPacket_name
	add	esp, 4
	push	eax
	push	OFFSET $SG85638
	push	-1
	push	3
	call	_Log
	add	esp, 20					; 00000014H
; Line 1241
	push	0
	mov	ecx, DWORD PTR _com$85633[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _com$85633[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 8
$LN4@MQTTAsync_@17:
; Line 1243
	mov	edx, DWORD PTR _timed_out_count$85615[ebp]
	add	edx, 1
	mov	DWORD PTR _timed_out_count$85615[ebp], edx
$LN5@MQTTAsync_@17:
; Line 1245
	jmp	SHORT $LN8@MQTTAsync_@17
$LN7@MQTTAsync_@17:
; Line 1246
	mov	DWORD PTR _i$85614[ebp], 0
	jmp	SHORT $LN3@MQTTAsync_@17
$LN2@MQTTAsync_@17:
	mov	eax, DWORD PTR _i$85614[ebp]
	add	eax, 1
	mov	DWORD PTR _i$85614[ebp], eax
$LN3@MQTTAsync_@17:
	mov	ecx, DWORD PTR _i$85614[ebp]
	cmp	ecx, DWORD PTR _timed_out_count$85615[ebp]
	jge	SHORT $LN1@MQTTAsync_@17
; Line 1247
	mov	edx, DWORD PTR _m$85616[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_ListRemoveHead
	add	esp, 4
	jmp	SHORT $LN2@MQTTAsync_@17
$LN1@MQTTAsync_@17:
; Line 1248
	jmp	$LN19@MQTTAsync_@17
$LN14@MQTTAsync_@17:
; Line 1249
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
$exit$85608:
; Line 1251
	push	3
	push	0
	push	1251					; 000004e3H
	push	OFFSET $SG85644
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1252
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_checkTimeouts ENDP
_TEXT	ENDS
EXTRN	__imp___difftime64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Time1$ = 8						; size = 8
__Time2$ = 16						; size = 8
_difftime PROC
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 83
	push	ebp
	mov	ebp, esp
; Line 84
	mov	eax, DWORD PTR __Time2$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Time2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Time1$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Time1$[ebp]
	push	eax
	call	DWORD PTR __imp___difftime64
	add	esp, 16					; 00000010H
; Line 85
	pop	ebp
	ret	0
_difftime ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_sendThread@4
EXTRN	_Thread_wait_sem:PROC
EXTRN	_Thread_getid:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_before$85657 = -8					; size = 4
_rc$85653 = -4						; size = 4
_n$ = 8							; size = 4
_MQTTAsync_sendThread@4 PROC
; File c:\workspaces\newagent2\paho\org.eclipse.paho.mqtt.c\src\mqttasync.c
; Line 1256
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1257
	push	3
	push	1257					; 000004e9H
	push	OFFSET $SG85649
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1258
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1259
	mov	DWORD PTR _sendThread_state, 2
; Line 1260
	call	_Thread_getid
	mov	DWORD PTR _sendThread_id, eax
; Line 1261
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
$LN6@MQTTAsync_@18:
; Line 1262
	cmp	DWORD PTR _tostop, 0
	jne	SHORT $LN5@MQTTAsync_@18
$LN4@MQTTAsync_@18:
; Line 1266
	mov	edx, DWORD PTR _commands
	cmp	DWORD PTR [edx+12], 0
	jle	SHORT $LN3@MQTTAsync_@18
; Line 1268
	mov	eax, DWORD PTR _commands
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _before$85657[ebp], ecx
; Line 1269
	call	_MQTTAsync_processCommand
; Line 1270
	mov	edx, DWORD PTR _commands
	mov	eax, DWORD PTR _before$85657[ebp]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN2@MQTTAsync_@18
; Line 1271
	jmp	SHORT $LN3@MQTTAsync_@18
$LN2@MQTTAsync_@18:
; Line 1272
	jmp	SHORT $LN4@MQTTAsync_@18
$LN3@MQTTAsync_@18:
; Line 1278
	push	1000					; 000003e8H
	mov	ecx, DWORD PTR _send_sem
	push	ecx
	call	_Thread_wait_sem
	add	esp, 8
	mov	DWORD PTR _rc$85653[ebp], eax
	cmp	DWORD PTR _rc$85653[ebp], 0
	je	SHORT $LN1@MQTTAsync_@18
	cmp	DWORD PTR _rc$85653[ebp], 258		; 00000102H
	je	SHORT $LN1@MQTTAsync_@18
; Line 1279
	mov	edx, DWORD PTR _rc$85653[ebp]
	push	edx
	push	OFFSET $SG85660
	push	-1
	push	5
	call	_Log
	add	esp, 16					; 00000010H
$LN1@MQTTAsync_@18:
; Line 1282
	call	_MQTTAsync_checkTimeouts
; Line 1283
	jmp	SHORT $LN6@MQTTAsync_@18
$LN5@MQTTAsync_@18:
; Line 1284
	mov	DWORD PTR _sendThread_state, 3
; Line 1285
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1286
	mov	DWORD PTR _sendThread_state, 0
; Line 1287
	mov	DWORD PTR _sendThread_id, 0
; Line 1288
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 1289
	push	3
	push	0
	push	1289					; 00000509H
	push	OFFSET $SG85662
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1290
	xor	eax, eax
; Line 1291
	mov	esp, ebp
	pop	ebp
	ret	4
_MQTTAsync_sendThread@4 ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_emptyMessageQueue
EXTRN	_ListEmpty:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_qe$85674 = -8						; size = 4
_current$85669 = -4					; size = 4
_client$ = 8						; size = 4
_MQTTAsync_emptyMessageQueue PROC
; Line 1295
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1296
	push	3
	push	1296					; 00000510H
	push	OFFSET $SG85667
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1298
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+12], 0
	jle	$LN3@MQTTAsync_@19
; Line 1300
	mov	DWORD PTR _current$85669[ebp], 0
$LN2@MQTTAsync_@19:
; Line 1301
	lea	edx, DWORD PTR _current$85669[ebp]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@MQTTAsync_@19
; Line 1303
	mov	edx, DWORD PTR _current$85669[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _qe$85674[ebp], eax
; Line 1304
	mov	ecx, DWORD PTR _qe$85674[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	1304					; 00000518H
	push	OFFSET $SG85676
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1305
	mov	eax, DWORD PTR _qe$85674[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	1305					; 00000519H
	push	OFFSET $SG85677
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1306
	mov	eax, DWORD PTR _qe$85674[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	1306					; 0000051aH
	push	OFFSET $SG85678
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1307
	jmp	SHORT $LN2@MQTTAsync_@19
$LN1@MQTTAsync_@19:
; Line 1308
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	call	_ListEmpty
	add	esp, 4
$LN3@MQTTAsync_@19:
; Line 1310
	push	3
	push	0
	push	1310					; 0000051eH
	push	OFFSET $SG85680
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1311
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_emptyMessageQueue ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_removeResponsesAndCommands
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cmd$85702 = -20					; size = 4
_elem$85692 = -16					; size = 4
_next$ = -12						; size = 4
_count$ = -8						; size = 4
_current$ = -4						; size = 4
_m$ = 8							; size = 4
_MQTTAsync_removeResponsesAndCommands PROC
; Line 1315
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 1316
	mov	DWORD PTR _count$[ebp], 0
; Line 1317
	mov	DWORD PTR _current$[ebp], 0
; Line 1318
	mov	DWORD PTR _next$[ebp], 0
; Line 1320
	push	3
	push	1320					; 00000528H
	push	OFFSET $SG85690
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1321
	mov	eax, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN6@MQTTAsync_@20
; Line 1323
	mov	DWORD PTR _elem$85692[ebp], 0
$LN5@MQTTAsync_@20:
; Line 1325
	lea	ecx, DWORD PTR _elem$85692[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@MQTTAsync_@20
; Line 1327
	mov	ecx, DWORD PTR _elem$85692[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_MQTTAsync_freeCommand1
	add	esp, 4
; Line 1328
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 1329
	jmp	SHORT $LN5@MQTTAsync_@20
$LN6@MQTTAsync_@20:
; Line 1331
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	call	_ListEmpty
	add	esp, 4
; Line 1332
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	push	OFFSET $SG85698
	push	-1
	push	3
	call	_Log
	add	esp, 20					; 00000014H
; Line 1335
	mov	DWORD PTR _count$[ebp], 0
; Line 1336
	lea	ecx, DWORD PTR _next$[ebp]
	push	ecx
	mov	edx, DWORD PTR _commands
	push	edx
	call	_ListNextElement
	add	esp, 8
	mov	DWORD PTR _current$[ebp], eax
; Line 1337
	lea	eax, DWORD PTR _next$[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands
	push	ecx
	call	_ListNextElement
	add	esp, 8
$LN3@MQTTAsync_@20:
; Line 1338
	cmp	DWORD PTR _current$[ebp], 0
	je	SHORT $LN2@MQTTAsync_@20
; Line 1340
	mov	edx, DWORD PTR _current$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _cmd$85702[ebp], eax
; Line 1342
	mov	ecx, DWORD PTR _cmd$85702[ebp]
	mov	edx, DWORD PTR [ecx+44]
	cmp	edx, DWORD PTR _m$[ebp]
	jne	SHORT $LN1@MQTTAsync_@20
; Line 1344
	mov	eax, DWORD PTR _cmd$85702[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands
	push	ecx
	call	_ListDetach
	add	esp, 8
; Line 1345
	mov	edx, DWORD PTR _cmd$85702[ebp]
	push	edx
	call	_MQTTAsync_freeCommand
	add	esp, 4
; Line 1346
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN1@MQTTAsync_@20:
; Line 1348
	mov	ecx, DWORD PTR _next$[ebp]
	mov	DWORD PTR _current$[ebp], ecx
; Line 1349
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	mov	eax, DWORD PTR _commands
	push	eax
	call	_ListNextElement
	add	esp, 8
; Line 1350
	jmp	SHORT $LN3@MQTTAsync_@20
$LN2@MQTTAsync_@20:
; Line 1351
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _count$[ebp]
	push	ecx
	push	OFFSET $SG85705
	push	-1
	push	3
	call	_Log
	add	esp, 20					; 00000014H
; Line 1352
	push	3
	push	0
	push	1352					; 00000548H
	push	OFFSET $SG85707
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1353
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_removeResponsesAndCommands ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_destroy
EXTRN	_MQTTProtocol_freeClient:PROC
EXTRN	_MQTTPersistence_close:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_saved_socket$85717 = -12				; size = 4
_saved_clientid$85718 = -8				; size = 4
_m$ = -4						; size = 4
_handle$ = 8						; size = 4
_MQTTAsync_destroy PROC
; Line 1357
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 1358
	mov	eax, DWORD PTR _handle$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _m$[ebp], ecx
; Line 1360
	push	3
	push	1360					; 00000550H
	push	OFFSET $SG85712
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1361
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1363
	cmp	DWORD PTR _m$[ebp], 0
	jne	SHORT $LN7@MQTTAsync_@21
; Line 1364
	jmp	$exit$85715
$LN7@MQTTAsync_@21:
; Line 1366
	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	call	_MQTTAsync_removeResponsesAndCommands
	add	esp, 4
; Line 1367
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	call	_ListFree
	add	esp, 4
; Line 1369
	mov	eax, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN6@MQTTAsync_@21
; Line 1371
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _saved_socket$85717[ebp], eax
; Line 1372
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_MQTTStrdup
	add	esp, 4
	mov	DWORD PTR _saved_clientid$85718[ebp], eax
; Line 1374
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_MQTTPersistence_close
	add	esp, 4
; Line 1376
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MQTTAsync_emptyMessageQueue
	add	esp, 4
; Line 1377
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTProtocol_freeClient
	add	esp, 4
; Line 1378
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _bstate
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ListRemove
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@MQTTAsync_@21
; Line 1379
	push	0
	push	0
	push	5
	call	_Log
	add	esp, 12					; 0000000cH
; Line 1380
	jmp	SHORT $LN4@MQTTAsync_@21
$LN5@MQTTAsync_@21:
; Line 1381
	mov	edx, DWORD PTR _saved_socket$85717[ebp]
	push	edx
	mov	eax, DWORD PTR _saved_clientid$85718[ebp]
	push	eax
	push	0
	push	1
	push	3
	call	_Log
	add	esp, 20					; 00000014H
$LN4@MQTTAsync_@21:
; Line 1382
	mov	ecx, DWORD PTR _saved_clientid$85718[ebp]
	push	ecx
	push	1382					; 00000566H
	push	OFFSET $SG85723
	call	_myfree
	add	esp, 12					; 0000000cH
$LN6@MQTTAsync_@21:
; Line 1385
	mov	edx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN3@MQTTAsync_@21
; Line 1386
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	1386					; 0000056aH
	push	OFFSET $SG85725
	call	_myfree
	add	esp, 12					; 0000000cH
$LN3@MQTTAsync_@21:
; Line 1387
	mov	edx, DWORD PTR _m$[ebp]
	push	edx
	mov	eax, DWORD PTR _handles
	push	eax
	call	_ListRemove
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@MQTTAsync_@21
; Line 1388
	push	OFFSET $SG85727
	push	-1
	push	5
	call	_Log
	add	esp, 12					; 0000000cH
$LN2@MQTTAsync_@21:
; Line 1389
	mov	ecx, DWORD PTR _handle$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1390
	mov	edx, DWORD PTR _bstate
	mov	eax, DWORD PTR [edx+4]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $exit$85715
; Line 1391
	call	_MQTTAsync_terminate
$exit$85715:
; Line 1394
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 1395
	push	3
	push	0
	push	1395					; 00000573H
	push	OFFSET $SG85731
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1396
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_destroy ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_freeMessage
; Function compile flags: /Odtp
_TEXT	SEGMENT
_message$ = 8						; size = 4
_MQTTAsync_freeMessage PROC
; Line 1400
	push	ebp
	mov	ebp, esp
; Line 1401
	push	3
	push	1401					; 00000579H
	push	OFFSET $SG85735
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1402
	mov	eax, DWORD PTR _message$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	1402					; 0000057aH
	push	OFFSET $SG85736
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1403
	mov	eax, DWORD PTR _message$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	1403					; 0000057bH
	push	OFFSET $SG85737
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1404
	mov	edx, DWORD PTR _message$[ebp]
	mov	DWORD PTR [edx], 0
; Line 1405
	push	3
	push	0
	push	1405					; 0000057dH
	push	OFFSET $SG85740
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1406
	pop	ebp
	ret	0
_MQTTAsync_freeMessage ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_free
; Function compile flags: /Odtp
_TEXT	SEGMENT
_memory$ = 8						; size = 4
_MQTTAsync_free PROC
; Line 1410
	push	ebp
	mov	ebp, esp
; Line 1411
	push	3
	push	1411					; 00000583H
	push	OFFSET $SG85744
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1412
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	push	1412					; 00000584H
	push	OFFSET $SG85745
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1413
	push	3
	push	0
	push	1413					; 00000585H
	push	OFFSET $SG85747
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1414
	pop	ebp
	ret	0
_MQTTAsync_free ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_cleanSession
PUBLIC	_MQTTAsync_completeConnection
EXTRN	_MQTTProtocol_retry:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$85768 = -16						; size = 4
_outcurrent$85763 = -12					; size = 4
_connack$85757 = -8					; size = 4
_rc$ = -4						; size = 4
_m$ = 8							; size = 4
_pack$ = 12						; size = 4
_MQTTAsync_completeConnection PROC
; Line 1418
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 1419
	mov	DWORD PTR _rc$[ebp], -1
; Line 1421
	push	3
	push	1421					; 0000058dH
	push	OFFSET $SG85755
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1422
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 24					; 00000018H
	sar	edx, 28					; 0000001cH
	cmp	edx, 3
	jne	$LN7@MQTTAsync_@22
; Line 1424
	mov	eax, DWORD PTR _pack$[ebp]
	mov	DWORD PTR _connack$85757[ebp], eax
; Line 1425
	mov	ecx, DWORD PTR _connack$85757[ebp]
	movsx	edx, BYTE PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	0
	push	1
	push	4
	call	_Log
	add	esp, 24					; 00000018H
; Line 1426
	mov	eax, DWORD PTR _connack$85757[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	mov	DWORD PTR _rc$[ebp], ecx
	cmp	DWORD PTR _rc$[ebp], 0
	jne	$LN6@MQTTAsync_@22
; Line 1428
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	or	ecx, 2
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+12], ecx
; Line 1429
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+12]
	or	eax, 4
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+12], eax
; Line 1430
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, -241				; ffffff0fH
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+12], edx
; Line 1431
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 1
	je	SHORT $LN5@MQTTAsync_@22
; Line 1432
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTAsync_cleanSession
	add	esp, 4
	mov	DWORD PTR _rc$[ebp], eax
$LN5@MQTTAsync_@22:
; Line 1433
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+64]
	cmp	DWORD PTR [eax+12], 0
	jle	SHORT $LN6@MQTTAsync_@22
; Line 1435
	mov	DWORD PTR _outcurrent$85763[ebp], 0
$LN3@MQTTAsync_@22:
; Line 1437
	lea	ecx, DWORD PTR _outcurrent$85763[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@MQTTAsync_@22
; Line 1439
	mov	edx, DWORD PTR _outcurrent$85763[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _m$85768[ebp], eax
; Line 1440
	mov	ecx, DWORD PTR _m$85768[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
; Line 1441
	jmp	SHORT $LN3@MQTTAsync_@22
$LN2@MQTTAsync_@22:
; Line 1442
	push	1
	push	1
	push	0
	push	0
	call	_MQTTProtocol_retry
	add	esp, 16					; 00000010H
; Line 1443
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 1
	and	ecx, 1
	jne	SHORT $LN6@MQTTAsync_@22
; Line 1444
	mov	DWORD PTR _rc$[ebp], -3			; fffffffdH
$LN6@MQTTAsync_@22:
; Line 1447
	mov	edx, DWORD PTR _connack$85757[ebp]
	push	edx
	push	1447					; 000005a7H
	push	OFFSET $SG85772
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1448
	mov	eax, DWORD PTR _m$[ebp]
	mov	DWORD PTR [eax+128], 0
$LN7@MQTTAsync_@22:
; Line 1450
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	1450					; 000005aaH
	push	OFFSET $SG85774
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1451
	mov	eax, DWORD PTR _rc$[ebp]
; Line 1452
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_completeConnection ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_deliverMessage
PUBLIC	_MQTTAsync_cycle
PUBLIC	__$ArrayPad$
PUBLIC	_MQTTAsync_receiveThread@4
EXTRN	_MQTTProtocol_handleUnsubacks:PROC
EXTRN	_MQTTProtocol_handleSubacks:PROC
EXTRN	_MQTTPersistence_unpersistQueueEntry:PROC
EXTRN	_Socket_close:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_command$85891 = -184					; size = 4
_handleCalled$85887 = -180				; size = 4
_current$85885 = -176					; size = 4
_cur_qos$85871 = -172					; size = 4
_element$85873 = -168					; size = 4
_array$85865 = -164					; size = 4
_data$85864 = -160					; size = 40
_data$85859 = -120					; size = 12
_sub$85852 = -108					; size = 4
_command$85848 = -104					; size = 4
_current$85843 = -100					; size = 4
_data$85838 = -96					; size = 12
_conn$85831 = -84					; size = 4
_data$85825 = -80					; size = 40
__$ArrayPad$ = -40					; size = 4
_sessionPresent$85818 = -36				; size = 4
_rc$85820 = -32						; size = 4
_qe$85805 = -28						; size = 4
_topicLen$85807 = -24					; size = 4
_m$85786 = -20						; size = 4
_sock$85785 = -16					; size = 4
_rc$85784 = -12						; size = 4
_pack$85788 = -8					; size = 4
_timeout$ = -4						; size = 4
_n$ = 8							; size = 4
_MQTTAsync_receiveThread@4 PROC
; Line 1456
	push	ebp
	mov	ebp, esp
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
; Line 1457
	mov	DWORD PTR _timeout$[ebp], 10		; 0000000aH
; Line 1459
	push	3
	push	1459					; 000005b3H
	push	OFFSET $SG85780
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1460
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1461
	mov	DWORD PTR _receiveThread_state, 2
; Line 1462
	call	_Thread_getid
	mov	DWORD PTR _receiveThread_id, eax
$LN53@MQTTAsync_@23:
; Line 1463
	cmp	DWORD PTR _tostop, 0
	jne	$LN52@MQTTAsync_@23
; Line 1465
	mov	DWORD PTR _rc$85784[ebp], -1
; Line 1466
	mov	DWORD PTR _sock$85785[ebp], -1
; Line 1467
	mov	DWORD PTR _m$85786[ebp], 0
; Line 1468
	mov	DWORD PTR _pack$85788[ebp], 0
; Line 1470
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 1471
	lea	edx, DWORD PTR _rc$85784[ebp]
	push	edx
	mov	eax, DWORD PTR _timeout$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sock$85785[ebp]
	push	ecx
	call	_MQTTAsync_cycle
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pack$85788[ebp], eax
; Line 1472
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1473
	cmp	DWORD PTR _tostop, 0
	je	SHORT $LN51@MQTTAsync_@23
; Line 1474
	jmp	$LN52@MQTTAsync_@23
$LN51@MQTTAsync_@23:
; Line 1475
	mov	DWORD PTR _timeout$[ebp], 1000		; 000003e8H
; Line 1477
	cmp	DWORD PTR _sock$85785[ebp], 0
	jne	SHORT $LN50@MQTTAsync_@23
; Line 1478
	jmp	SHORT $LN53@MQTTAsync_@23
$LN50@MQTTAsync_@23:
; Line 1480
	push	OFFSET _clientSockCompare
	lea	eax, DWORD PTR _sock$85785[ebp]
	push	eax
	mov	ecx, DWORD PTR _handles
	push	ecx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN49@MQTTAsync_@23
; Line 1482
	mov	edx, DWORD PTR _sock$85785[ebp]
	push	edx
	push	OFFSET $SG85794
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1484
	jmp	$LN53@MQTTAsync_@23
$LN49@MQTTAsync_@23:
; Line 1486
	mov	eax, DWORD PTR _handles
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _m$85786[ebp], edx
; Line 1487
	cmp	DWORD PTR _m$85786[ebp], 0
	jne	SHORT $LN48@MQTTAsync_@23
; Line 1489
	mov	eax, DWORD PTR _sock$85785[ebp]
	push	eax
	push	OFFSET $SG85798
	push	-1
	push	5
	call	_Log
	add	esp, 16					; 00000010H
; Line 1490
	mov	ecx, DWORD PTR _sock$85785[ebp]
	push	ecx
	call	_Socket_close
	add	esp, 4
; Line 1491
	jmp	$LN53@MQTTAsync_@23
$LN48@MQTTAsync_@23:
; Line 1493
	cmp	DWORD PTR _rc$85784[ebp], -1
	jne	SHORT $LN47@MQTTAsync_@23
; Line 1495
	mov	edx, DWORD PTR _sock$85785[ebp]
	push	edx
	push	OFFSET $SG85800
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1496
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	and	edx, 1
	je	SHORT $LN46@MQTTAsync_@23
; Line 1498
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 1499
	push	0
	mov	ecx, DWORD PTR _m$85786[ebp]
	push	ecx
	call	_MQTTAsync_disconnect_internal
	add	esp, 8
; Line 1500
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1502
	jmp	SHORT $LN45@MQTTAsync_@23
$LN46@MQTTAsync_@23:
; Line 1503
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MQTTAsync_closeOnly
	add	esp, 4
$LN45@MQTTAsync_@23:
; Line 1505
	jmp	$LN44@MQTTAsync_@23
$LN47@MQTTAsync_@23:
; Line 1507
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+12], 0
	jle	$LN43@MQTTAsync_@23
; Line 1509
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _qe$85805[ebp], eax
; Line 1510
	mov	ecx, DWORD PTR _qe$85805[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _topicLen$85807[ebp], edx
; Line 1512
	mov	eax, DWORD PTR _qe$85805[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	eax, DWORD PTR _topicLen$85807[ebp]
	jne	SHORT $LN42@MQTTAsync_@23
; Line 1513
	mov	DWORD PTR _topicLen$85807[ebp], 0
$LN42@MQTTAsync_@23:
; Line 1515
	mov	edx, DWORD PTR _m$85786[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN41@MQTTAsync_@23
; Line 1516
	mov	eax, DWORD PTR _qe$85805[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _topicLen$85807[ebp]
	push	edx
	mov	eax, DWORD PTR _qe$85805[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _m$85786[ebp]
	push	edx
	call	_MQTTAsync_deliverMessage
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$85784[ebp], eax
; Line 1517
	jmp	SHORT $LN40@MQTTAsync_@23
$LN41@MQTTAsync_@23:
; Line 1518
	mov	DWORD PTR _rc$85784[ebp], 1
$LN40@MQTTAsync_@23:
; Line 1520
	cmp	DWORD PTR _rc$85784[ebp], 0
	je	SHORT $LN39@MQTTAsync_@23
; Line 1522
	mov	eax, DWORD PTR _qe$85805[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	call	_ListRemove
	add	esp, 8
; Line 1524
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN38@MQTTAsync_@23
; Line 1525
	mov	eax, DWORD PTR _qe$85805[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_MQTTPersistence_unpersistQueueEntry
	add	esp, 8
$LN38@MQTTAsync_@23:
; Line 1528
	jmp	SHORT $LN43@MQTTAsync_@23
$LN39@MQTTAsync_@23:
; Line 1530
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG85815
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
$LN43@MQTTAsync_@23:
; Line 1532
	cmp	DWORD PTR _pack$85788[ebp], 0
	je	$LN44@MQTTAsync_@23
; Line 1534
	mov	eax, DWORD PTR _pack$85788[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 4
	and	ecx, 15					; 0000000fH
	cmp	ecx, 2
	jne	$LN35@MQTTAsync_@23
; Line 1536
	mov	edx, DWORD PTR _pack$85788[ebp]
	mov	eax, DWORD PTR [edx+4]
	and	eax, 1
	mov	DWORD PTR _sessionPresent$85818[ebp], eax
; Line 1537
	mov	ecx, DWORD PTR _pack$85788[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$85786[ebp]
	push	edx
	call	_MQTTAsync_completeConnection
	add	esp, 8
	mov	DWORD PTR _rc$85820[ebp], eax
; Line 1539
	cmp	DWORD PTR _rc$85820[ebp], 0
	jne	$LN34@MQTTAsync_@23
; Line 1541
	mov	eax, DWORD PTR _m$85786[ebp]
	cmp	DWORD PTR [eax+56], 0
	jle	SHORT $LN33@MQTTAsync_@23
; Line 1543
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR [ecx+edx*4]
	push	edx
	push	OFFSET $SG85823
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
$LN33@MQTTAsync_@23:
; Line 1544
	mov	esi, DWORD PTR _m$85786[ebp]
	add	esi, 28					; 0000001cH
	sub	esp, 44					; 0000002cH
	mov	ecx, 11					; 0000000bH
	mov	edi, esp
	rep movsd
	call	_MQTTAsync_freeConnect
	add	esp, 44					; 0000002cH
; Line 1545
	mov	eax, DWORD PTR _m$85786[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN32@MQTTAsync_@23
; Line 1548
	push	40					; 00000028H
	push	0
	lea	ecx, DWORD PTR _data$85825[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1549
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG85826
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1550
	mov	edx, DWORD PTR _m$85786[ebp]
	cmp	DWORD PTR [edx+56], 0
	jle	SHORT $LN31@MQTTAsync_@23
; Line 1551
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _data$85825[ebp+4], ecx
; Line 1552
	jmp	SHORT $LN30@MQTTAsync_@23
$LN31@MQTTAsync_@23:
; Line 1553
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _data$85825[ebp+4], eax
$LN30@MQTTAsync_@23:
; Line 1554
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR _data$85825[ebp+8], edx
; Line 1555
	mov	eax, DWORD PTR _sessionPresent$85818[ebp]
	mov	DWORD PTR _data$85825[ebp+12], eax
; Line 1556
	lea	ecx, DWORD PTR _data$85825[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+32]
	call	edx
	add	esp, 8
$LN32@MQTTAsync_@23:
; Line 1559
	jmp	$LN29@MQTTAsync_@23
$LN34@MQTTAsync_@23:
; Line 1561
	mov	eax, DWORD PTR _m$85786[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$85786[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	call	_MQTTAsync_checkConn
	add	esp, 8
	test	eax, eax
	je	SHORT $LN28@MQTTAsync_@23
; Line 1565
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTAsync_closeOnly
	add	esp, 4
; Line 1567
	push	52					; 00000034H
	push	1567					; 0000061fH
	push	OFFSET $SG85833
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _conn$85831[ebp], eax
; Line 1568
	push	52					; 00000034H
	push	0
	mov	ecx, DWORD PTR _conn$85831[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1569
	mov	edx, DWORD PTR _conn$85831[ebp]
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 1570
	mov	esi, DWORD PTR _m$85786[ebp]
	add	esi, 28					; 0000001cH
	mov	ecx, 11					; 0000000bH
	mov	edi, DWORD PTR _conn$85831[ebp]
	rep movsd
; Line 1571
	push	OFFSET $SG85835
	push	-1
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
; Line 1572
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _conn$85831[ebp]
	push	ecx
	call	_MQTTAsync_addCommand
	add	esp, 8
; Line 1574
	jmp	SHORT $LN29@MQTTAsync_@23
$LN28@MQTTAsync_@23:
; Line 1576
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTAsync_closeSession
	add	esp, 4
; Line 1577
	mov	esi, DWORD PTR _m$85786[ebp]
	add	esi, 28					; 0000001cH
	sub	esp, 44					; 0000002cH
	mov	ecx, 11					; 0000000bH
	mov	edi, esp
	rep movsd
	call	_MQTTAsync_freeConnect
	add	esp, 44					; 0000002cH
; Line 1578
	mov	ecx, DWORD PTR _m$85786[ebp]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $LN29@MQTTAsync_@23
; Line 1582
	mov	DWORD PTR _data$85838[ebp], 0
; Line 1583
	mov	edx, DWORD PTR _rc$85820[ebp]
	mov	DWORD PTR _data$85838[ebp+4], edx
; Line 1584
	mov	DWORD PTR _data$85838[ebp+8], OFFSET $SG85839
; Line 1585
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG85840
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1586
	lea	eax, DWORD PTR _data$85838[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	ecx
	add	esp, 8
$LN29@MQTTAsync_@23:
; Line 1589
	jmp	$LN44@MQTTAsync_@23
$LN35@MQTTAsync_@23:
; Line 1591
	mov	edx, DWORD PTR _pack$85788[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 4
	and	eax, 15					; 0000000fH
	cmp	eax, 9
	jne	$LN24@MQTTAsync_@23
; Line 1593
	mov	DWORD PTR _current$85843[ebp], 0
$LN23@MQTTAsync_@23:
; Line 1596
	lea	ecx, DWORD PTR _current$85843[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	$LN22@MQTTAsync_@23
; Line 1598
	mov	ecx, DWORD PTR _current$85843[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _command$85848[ebp], edx
; Line 1599
	mov	eax, DWORD PTR _command$85848[ebp]
	mov	ecx, DWORD PTR _pack$85788[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+4]
	jne	$LN21@MQTTAsync_@23
; Line 1601
	mov	eax, DWORD PTR _pack$85788[ebp]
	mov	DWORD PTR _sub$85852[ebp], eax
; Line 1602
	mov	ecx, DWORD PTR _command$85848[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_ListDetach
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN20@MQTTAsync_@23
; Line 1603
	push	OFFSET $SG85855
	push	-1
	push	5
	call	_Log
	add	esp, 12					; 0000000cH
$LN20@MQTTAsync_@23:
; Line 1610
	mov	ecx, DWORD PTR _sub$85852[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx+12], 1
	jne	SHORT $LN19@MQTTAsync_@23
	mov	eax, DWORD PTR _sub$85852[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax], 128			; 00000080H
	jne	SHORT $LN19@MQTTAsync_@23
; Line 1612
	mov	ecx, DWORD PTR _command$85848[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN18@MQTTAsync_@23
; Line 1616
	mov	edx, DWORD PTR _command$85848[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _data$85859[ebp], eax
; Line 1617
	mov	ecx, DWORD PTR _sub$85852[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _data$85859[ebp+4], edx
; Line 1618
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG85861
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1619
	lea	eax, DWORD PTR _data$85859[ebp]
	push	eax
	mov	ecx, DWORD PTR _command$85848[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _command$85848[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 8
$LN18@MQTTAsync_@23:
; Line 1620
	jmp	$LN17@MQTTAsync_@23
$LN19@MQTTAsync_@23:
; Line 1622
	mov	edx, DWORD PTR _command$85848[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN17@MQTTAsync_@23
; Line 1625
	mov	DWORD PTR _array$85865[ebp], 0
; Line 1627
	mov	eax, DWORD PTR _sub$85852[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+12], 1
	jne	SHORT $LN15@MQTTAsync_@23
; Line 1628
	mov	edx, DWORD PTR _sub$85852[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _data$85864[ebp+4], eax
	jmp	$LN14@MQTTAsync_@23
$LN15@MQTTAsync_@23:
; Line 1629
	mov	ecx, DWORD PTR _sub$85852[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx+12], 1
	jle	$LN14@MQTTAsync_@23
; Line 1631
	mov	DWORD PTR _cur_qos$85871[ebp], 0
; Line 1632
	mov	eax, DWORD PTR _sub$85852[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 2
	push	edx
	push	1632					; 00000660H
	push	OFFSET $SG85875
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _data$85864[ebp+4], eax
	mov	eax, DWORD PTR _data$85864[ebp+4]
	mov	DWORD PTR _array$85865[ebp], eax
	mov	ecx, DWORD PTR _array$85865[ebp]
	mov	DWORD PTR _element$85873[ebp], ecx
$LN12@MQTTAsync_@23:
; Line 1633
	lea	edx, DWORD PTR _cur_qos$85871[ebp]
	push	edx
	mov	eax, DWORD PTR _sub$85852[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN14@MQTTAsync_@23
; Line 1634
	mov	edx, DWORD PTR _cur_qos$85871[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _element$85873[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _element$85873[ebp]
	add	eax, 4
	mov	DWORD PTR _element$85873[ebp], eax
	jmp	SHORT $LN12@MQTTAsync_@23
$LN14@MQTTAsync_@23:
; Line 1636
	mov	ecx, DWORD PTR _command$85848[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _data$85864[ebp], edx
; Line 1637
	mov	eax, DWORD PTR _m$85786[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG85880
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1638
	lea	eax, DWORD PTR _data$85864[ebp]
	push	eax
	mov	ecx, DWORD PTR _command$85848[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _command$85848[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
; Line 1639
	cmp	DWORD PTR _array$85865[ebp], 0
	je	SHORT $LN17@MQTTAsync_@23
; Line 1640
	mov	edx, DWORD PTR _array$85865[ebp]
	push	edx
	push	1640					; 00000668H
	push	OFFSET $SG85882
	call	_myfree
	add	esp, 12					; 0000000cH
$LN17@MQTTAsync_@23:
; Line 1642
	mov	eax, DWORD PTR _command$85848[ebp]
	push	eax
	call	_MQTTAsync_freeCommand
	add	esp, 4
; Line 1643
	jmp	SHORT $LN22@MQTTAsync_@23
$LN21@MQTTAsync_@23:
; Line 1645
	jmp	$LN23@MQTTAsync_@23
$LN22@MQTTAsync_@23:
; Line 1646
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pack$85788[ebp]
	push	ecx
	call	_MQTTProtocol_handleSubacks
	add	esp, 8
	mov	DWORD PTR _rc$85784[ebp], eax
	jmp	$LN44@MQTTAsync_@23
$LN24@MQTTAsync_@23:
; Line 1648
	mov	edx, DWORD PTR _pack$85788[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 4
	and	eax, 15					; 0000000fH
	cmp	eax, 11					; 0000000bH
	jne	$LN44@MQTTAsync_@23
; Line 1650
	mov	DWORD PTR _current$85885[ebp], 0
; Line 1651
	mov	DWORD PTR _handleCalled$85887[ebp], 0
$LN7@MQTTAsync_@23:
; Line 1654
	lea	ecx, DWORD PTR _current$85885[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	$LN6@MQTTAsync_@23
; Line 1656
	mov	ecx, DWORD PTR _current$85885[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _command$85891[ebp], edx
; Line 1657
	mov	eax, DWORD PTR _command$85891[ebp]
	mov	ecx, DWORD PTR _pack$85788[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+4]
	jne	$LN5@MQTTAsync_@23
; Line 1659
	mov	eax, DWORD PTR _command$85891[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	call	_ListDetach
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@MQTTAsync_@23
; Line 1660
	push	OFFSET $SG85896
	push	-1
	push	5
	call	_Log
	add	esp, 12					; 0000000cH
$LN4@MQTTAsync_@23:
; Line 1661
	mov	eax, DWORD PTR _command$85891[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@MQTTAsync_@23
; Line 1663
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pack$85788[ebp]
	push	ecx
	call	_MQTTProtocol_handleUnsubacks
	add	esp, 8
	mov	DWORD PTR _rc$85784[ebp], eax
; Line 1664
	mov	DWORD PTR _handleCalled$85887[ebp], 1
; Line 1665
	mov	edx, DWORD PTR _m$85786[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG85898
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1666
	push	0
	mov	edx, DWORD PTR _command$85891[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _command$85891[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 8
$LN3@MQTTAsync_@23:
; Line 1668
	mov	eax, DWORD PTR _command$85891[ebp]
	push	eax
	call	_MQTTAsync_freeCommand
	add	esp, 4
; Line 1669
	jmp	SHORT $LN6@MQTTAsync_@23
$LN5@MQTTAsync_@23:
; Line 1671
	jmp	$LN7@MQTTAsync_@23
$LN6@MQTTAsync_@23:
; Line 1672
	cmp	DWORD PTR _handleCalled$85887[ebp], 0
	jne	SHORT $LN44@MQTTAsync_@23
; Line 1673
	mov	ecx, DWORD PTR _m$85786[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pack$85788[ebp]
	push	ecx
	call	_MQTTProtocol_handleUnsubacks
	add	esp, 8
	mov	DWORD PTR _rc$85784[ebp], eax
$LN44@MQTTAsync_@23:
; Line 1677
	jmp	$LN53@MQTTAsync_@23
$LN52@MQTTAsync_@23:
; Line 1678
	mov	DWORD PTR _receiveThread_state, 0
; Line 1679
	mov	DWORD PTR _receiveThread_id, 0
; Line 1680
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 1685
	cmp	DWORD PTR _sendThread_state, 0
	je	SHORT $LN1@MQTTAsync_@23
	mov	eax, DWORD PTR _send_sem
	push	eax
	call	_Thread_check_sem
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@MQTTAsync_@23
; Line 1686
	mov	ecx, DWORD PTR _send_sem
	push	ecx
	call	_Thread_post_sem
	add	esp, 4
$LN1@MQTTAsync_@23:
; Line 1688
	push	3
	push	0
	push	1688					; 00000698H
	push	OFFSET $SG85903
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1689
	xor	eax, eax
; Line 1690
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_MQTTAsync_receiveThread@4 ENDP
; Function compile flags: /Odtp
_count$85923 = -16					; size = 4
_conn_count$85909 = -12					; size = 4
_current$85910 = -8					; size = 4
_rc$ = -4						; size = 4
_MQTTAsync_stop PROC
; Line 1694
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 1695
	mov	DWORD PTR _rc$[ebp], 0
; Line 1697
	push	3
	push	1697					; 000006a1H
	push	OFFSET $SG85906
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1698
	cmp	DWORD PTR _sendThread_state, 0
	jne	SHORT $LN10@MQTTAsync_@24
	cmp	DWORD PTR _receiveThread_state, 0
	je	$LN11@MQTTAsync_@24
$LN10@MQTTAsync_@24:
; Line 1700
	mov	DWORD PTR _conn_count$85909[ebp], 0
; Line 1701
	mov	DWORD PTR _current$85910[ebp], 0
; Line 1703
	cmp	DWORD PTR _handles, 0
	je	SHORT $LN9@MQTTAsync_@24
$LN8@MQTTAsync_@24:
; Line 1706
	lea	eax, DWORD PTR _current$85910[ebp]
	push	eax
	mov	ecx, DWORD PTR _handles
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@MQTTAsync_@24
; Line 1709
	mov	edx, DWORD PTR _current$85910[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 24					; 00000018H
	sar	edx, 28					; 0000001cH
	test	edx, edx
	jg	SHORT $LN5@MQTTAsync_@24
	mov	eax, DWORD PTR _current$85910[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 1
	and	eax, 1
	je	SHORT $LN6@MQTTAsync_@24
$LN5@MQTTAsync_@24:
; Line 1710
	mov	ecx, DWORD PTR _conn_count$85909[ebp]
	add	ecx, 1
	mov	DWORD PTR _conn_count$85909[ebp], ecx
$LN6@MQTTAsync_@24:
; Line 1711
	jmp	SHORT $LN8@MQTTAsync_@24
$LN9@MQTTAsync_@24:
; Line 1713
	mov	edx, DWORD PTR _conn_count$85909[ebp]
	push	edx
	push	OFFSET $SG85921
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 1715
	cmp	DWORD PTR _conn_count$85909[ebp], 0
	jne	SHORT $LN11@MQTTAsync_@24
; Line 1717
	mov	DWORD PTR _count$85923[ebp], 0
; Line 1718
	mov	DWORD PTR _tostop, 1
$LN3@MQTTAsync_@24:
; Line 1719
	cmp	DWORD PTR _sendThread_state, 0
	jne	SHORT $LN1@MQTTAsync_@24
	cmp	DWORD PTR _receiveThread_state, 0
	je	SHORT $LN2@MQTTAsync_@24
$LN1@MQTTAsync_@24:
	mov	eax, DWORD PTR _count$85923[ebp]
	add	eax, 1
	mov	DWORD PTR _count$85923[ebp], eax
	cmp	DWORD PTR _count$85923[ebp], 100	; 00000064H
	jge	SHORT $LN2@MQTTAsync_@24
; Line 1721
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 1722
	push	OFFSET $SG85928
	push	-1
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
; Line 1723
	push	100					; 00000064H
	call	_MQTTAsync_sleep
	add	esp, 4
; Line 1724
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1725
	jmp	SHORT $LN3@MQTTAsync_@24
$LN2@MQTTAsync_@24:
; Line 1726
	mov	DWORD PTR _rc$[ebp], 1
; Line 1727
	mov	DWORD PTR _tostop, 0
$LN11@MQTTAsync_@24:
; Line 1730
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	1730					; 000006c2H
	push	OFFSET $SG85929
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1731
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_stop ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_setCallbacks
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_context$ = 12						; size = 4
_cl$ = 16						; size = 4
_ma$ = 20						; size = 4
_dc$ = 24						; size = 4
_MQTTAsync_setCallbacks PROC
; Line 1738
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1739
	mov	DWORD PTR _rc$[ebp], 0
; Line 1740
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 1742
	push	3
	push	1742					; 000006ceH
	push	OFFSET $SG85943
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1743
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1745
	cmp	DWORD PTR _m$[ebp], 0
	je	SHORT $LN2@MQTTAsync_@25
	cmp	DWORD PTR _ma$[ebp], 0
	je	SHORT $LN2@MQTTAsync_@25
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 24					; 00000018H
	sar	ecx, 28					; 0000001cH
	test	ecx, ecx
	je	SHORT $LN3@MQTTAsync_@25
$LN2@MQTTAsync_@25:
; Line 1746
	mov	DWORD PTR _rc$[ebp], -1
; Line 1747
	jmp	SHORT $LN1@MQTTAsync_@25
$LN3@MQTTAsync_@25:
; Line 1749
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 1750
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR _cl$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 1751
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR _ma$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 1752
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR _dc$[ebp]
	mov	DWORD PTR [edx+20], eax
$LN1@MQTTAsync_@25:
; Line 1755
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 1756
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	1756					; 000006dcH
	push	OFFSET $SG85949
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1757
	mov	eax, DWORD PTR _rc$[ebp]
; Line 1758
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_setCallbacks ENDP
_TEXT	ENDS
EXTRN	_MQTTPacket_send_disconnect:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_client$ = 8						; size = 4
_MQTTAsync_closeOnly PROC
; Line 1762
	push	ebp
	mov	ebp, esp
; Line 1763
	push	3
	push	1763					; 000006e3H
	push	OFFSET $SG85953
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1764
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, -5					; fffffffbH
	mov	edx, DWORD PTR _client$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1765
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, -9					; fffffff7H
	mov	edx, DWORD PTR _client$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1766
	mov	eax, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jle	SHORT $LN2@MQTTAsync_@26
; Line 1768
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	and	edx, 1
	je	SHORT $LN1@MQTTAsync_@26
; Line 1769
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _client$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	_MQTTPacket_send_disconnect
	add	esp, 8
$LN1@MQTTAsync_@26:
; Line 1773
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_Socket_close
	add	esp, 4
; Line 1774
	mov	edx, DWORD PTR _client$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN2@MQTTAsync_@26:
; Line 1779
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _client$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1780
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, -241				; ffffff0fH
	mov	edx, DWORD PTR _client$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1781
	push	3
	push	0
	push	1781					; 000006f5H
	push	OFFSET $SG85957
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1782
	pop	ebp
	ret	0
_MQTTAsync_closeOnly ENDP
; Function compile flags: /Odtp
_client$ = 8						; size = 4
_MQTTAsync_closeSession PROC
; Line 1786
	push	ebp
	mov	ebp, esp
; Line 1787
	push	3
	push	1787					; 000006fbH
	push	OFFSET $SG85961
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1788
	mov	eax, DWORD PTR _client$[ebp]
	push	eax
	call	_MQTTAsync_closeOnly
	add	esp, 4
; Line 1790
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, 1
	je	SHORT $LN1@MQTTAsync_@27
; Line 1791
	mov	eax, DWORD PTR _client$[ebp]
	push	eax
	call	_MQTTAsync_cleanSession
	add	esp, 4
$LN1@MQTTAsync_@27:
; Line 1793
	push	3
	push	0
	push	1793					; 00000701H
	push	OFFSET $SG85964
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1794
	pop	ebp
	ret	0
_MQTTAsync_closeSession ENDP
_TEXT	ENDS
PUBLIC	_clientStructCompare
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_clientStructCompare PROC
; Line 1804
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1805
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 1806
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	xor	eax, eax
	cmp	edx, DWORD PTR _b$[ebp]
	sete	al
; Line 1807
	mov	esp, ebp
	pop	ebp
	ret	0
_clientStructCompare ENDP
_TEXT	ENDS
EXTRN	_MQTTProtocol_emptyMessageList:PROC
EXTRN	_MQTTPersistence_clear:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$85983 = -12						; size = 4
_rc$ = -8						; size = 4
_found$ = -4						; size = 4
_client$ = 8						; size = 4
_MQTTAsync_cleanSession PROC
; Line 1811
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 1812
	mov	DWORD PTR _rc$[ebp], 0
; Line 1813
	mov	DWORD PTR _found$[ebp], 0
; Line 1815
	push	3
	push	1815					; 00000717H
	push	OFFSET $SG85980
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1817
	mov	eax, DWORD PTR _client$[ebp]
	push	eax
	call	_MQTTPersistence_clear
	add	esp, 4
	mov	DWORD PTR _rc$[ebp], eax
; Line 1819
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_MQTTProtocol_emptyMessageList
	add	esp, 4
; Line 1820
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_MQTTProtocol_emptyMessageList
	add	esp, 4
; Line 1821
	mov	edx, DWORD PTR _client$[ebp]
	push	edx
	call	_MQTTAsync_emptyMessageQueue
	add	esp, 4
; Line 1822
	mov	eax, DWORD PTR _client$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 1824
	push	OFFSET _clientStructCompare
	mov	ecx, DWORD PTR _client$[ebp]
	push	ecx
	mov	edx, DWORD PTR _handles
	push	edx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _found$[ebp], eax
	cmp	DWORD PTR _found$[ebp], 0
	je	SHORT $LN2@MQTTAsync_@28
; Line 1826
	mov	eax, DWORD PTR _found$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _m$85983[ebp], ecx
; Line 1827
	mov	edx, DWORD PTR _m$85983[ebp]
	push	edx
	call	_MQTTAsync_removeResponsesAndCommands
	add	esp, 4
; Line 1829
	jmp	SHORT $LN1@MQTTAsync_@28
$LN2@MQTTAsync_@28:
; Line 1830
	push	OFFSET $SG85986
	push	-1
	push	5
	call	_Log
	add	esp, 12					; 0000000cH
$LN1@MQTTAsync_@28:
; Line 1831
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	1831					; 00000727H
	push	OFFSET $SG85987
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1832
	mov	eax, DWORD PTR _rc$[ebp]
; Line 1833
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_cleanSession ENDP
; Function compile flags: /Odtp
_rc$ = -4						; size = 4
_m$ = 8							; size = 4
_topicName$ = 12					; size = 4
_topicLen$ = 16						; size = 4
_mm$ = 20						; size = 4
_MQTTAsync_deliverMessage PROC
; Line 1840
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1844
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG85998
	push	-1
	push	3
	call	_Log
	add	esp, 20					; 00000014H
; Line 1845
	mov	ecx, DWORD PTR _mm$[ebp]
	push	ecx
	mov	edx, DWORD PTR _topicLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _topicName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
; Line 1850
	mov	eax, DWORD PTR _rc$[ebp]
; Line 1851
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_deliverMessage ENDP
_TEXT	ENDS
PUBLIC	_Protocol_processPublication
EXTRN	_MQTTPersistence_persistQueueEntry:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_qe$86027 = -20						; size = 4
_m$86023 = -16						; size = 4
_found$86017 = -12					; size = 4
_mm$ = -8						; size = 4
_rc$ = -4						; size = 4
_publish$ = 8						; size = 4
_client$ = 12						; size = 4
_Protocol_processPublication PROC
; Line 1855
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
; Line 1856
	mov	DWORD PTR _mm$[ebp], 0
; Line 1857
	mov	DWORD PTR _rc$[ebp], 0
; Line 1859
	push	3
	push	1859					; 00000743H
	push	OFFSET $SG86008
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1860
	push	32					; 00000020H
	push	1860					; 00000744H
	push	OFFSET $SG86010
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _mm$[ebp], eax
; Line 1865
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 1
	and	ecx, 3
	cmp	ecx, 2
	jne	SHORT $LN10@Protocol_p
; Line 1866
	mov	edx, DWORD PTR _mm$[ebp]
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+12], ecx
; Line 1867
	jmp	SHORT $LN9@Protocol_p
$LN10@Protocol_p:
; Line 1869
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	push	1869					; 0000074dH
	push	OFFSET $SG86013
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1870
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _publish$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _mm$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN9@Protocol_p:
; Line 1873
	mov	edx, DWORD PTR _mm$[ebp]
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+8], ecx
; Line 1874
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 1
	and	eax, 3
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1875
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 1
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 1876
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 1
	and	eax, 3
	cmp	eax, 2
	jne	SHORT $LN8@Protocol_p
; Line 1877
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 1878
	jmp	SHORT $LN7@Protocol_p
$LN8@Protocol_p:
; Line 1879
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 3
	and	eax, 1
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN7@Protocol_p:
; Line 1880
	mov	edx, DWORD PTR _mm$[ebp]
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+28], ecx
; Line 1882
	mov	edx, DWORD PTR _client$[ebp]
	mov	eax, DWORD PTR [edx+68]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN6@Protocol_p
	mov	ecx, DWORD PTR _client$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	and	edx, 1
	je	SHORT $LN6@Protocol_p
; Line 1884
	mov	DWORD PTR _found$86017[ebp], 0
; Line 1886
	push	OFFSET _clientStructCompare
	mov	eax, DWORD PTR _client$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handles
	push	ecx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _found$86017[ebp], eax
	cmp	DWORD PTR _found$86017[ebp], 0
	jne	SHORT $LN5@Protocol_p
; Line 1887
	push	OFFSET $SG86021
	push	-1
	push	5
	call	_Log
	add	esp, 12					; 0000000cH
; Line 1888
	jmp	SHORT $LN6@Protocol_p
$LN5@Protocol_p:
; Line 1890
	mov	edx, DWORD PTR _found$86017[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _m$86023[ebp], eax
; Line 1892
	mov	ecx, DWORD PTR _m$86023[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN6@Protocol_p
; Line 1893
	mov	edx, DWORD PTR _mm$[ebp]
	push	edx
	mov	eax, DWORD PTR _publish$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _m$86023[ebp]
	push	ecx
	call	_MQTTAsync_deliverMessage
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
$LN6@Protocol_p:
; Line 1897
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN2@Protocol_p
; Line 1899
	push	16					; 00000010H
	push	1899					; 0000076bH
	push	OFFSET $SG86029
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _qe$86027[ebp], eax
; Line 1900
	mov	edx, DWORD PTR _qe$86027[ebp]
	mov	eax, DWORD PTR _mm$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1901
	mov	ecx, DWORD PTR _qe$86027[ebp]
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 1902
	mov	ecx, DWORD PTR _qe$86027[ebp]
	mov	edx, DWORD PTR _publish$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
; Line 1903
	mov	ecx, DWORD PTR _mm$[ebp]
	mov	esi, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _qe$86027[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_strlen
	add	esp, 4
	lea	ecx, DWORD PTR [esi+eax+9]
	push	ecx
	mov	edx, DWORD PTR _qe$86027[ebp]
	push	edx
	mov	eax, DWORD PTR _client$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	call	_ListAppend
	add	esp, 12					; 0000000cH
; Line 1905
	mov	edx, DWORD PTR _client$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN2@Protocol_p
; Line 1906
	mov	eax, DWORD PTR _qe$86027[ebp]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp]
	push	ecx
	call	_MQTTPersistence_persistQueueEntry
	add	esp, 8
$LN2@Protocol_p:
; Line 1909
	mov	edx, DWORD PTR _publish$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1910
	push	3
	push	0
	push	1910					; 00000776H
	push	OFFSET $SG86034
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 1911
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_Protocol_processPublication ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_connect
EXTRN	_Thread_start:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$86081 = -16						; size = 4
_m$ = -12						; size = 4
_conn$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_options$ = 12						; size = 4
_MQTTAsync_connect PROC
; Line 1915
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 1916
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 1917
	mov	DWORD PTR _rc$[ebp], 0
; Line 1920
	push	3
	push	1920					; 00000780H
	push	OFFSET $SG86043
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 1921
	cmp	DWORD PTR _options$[ebp], 0
	jne	SHORT $LN25@MQTTAsync_@29
; Line 1923
	mov	DWORD PTR _rc$[ebp], -6			; fffffffaH
; Line 1924
	jmp	$exit$86046
$LN25@MQTTAsync_@29:
; Line 1929
	push	4
	push	OFFSET $SG86049
	mov	ecx, DWORD PTR _options$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN23@MQTTAsync_@29
	mov	edx, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN24@MQTTAsync_@29
	mov	eax, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [eax+4], 1
	je	SHORT $LN24@MQTTAsync_@29
	mov	ecx, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [ecx+4], 2
	je	SHORT $LN24@MQTTAsync_@29
	mov	edx, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [edx+4], 3
	je	SHORT $LN24@MQTTAsync_@29
$LN23@MQTTAsync_@29:
; Line 1931
	mov	DWORD PTR _rc$[ebp], -8			; fffffff8H
; Line 1932
	jmp	$exit$86046
$LN24@MQTTAsync_@29:
; Line 1934
	mov	eax, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN22@MQTTAsync_@29
; Line 1936
	push	4
	push	OFFSET $SG86053
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN20@MQTTAsync_@29
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN21@MQTTAsync_@29
$LN20@MQTTAsync_@29:
; Line 1938
	mov	DWORD PTR _rc$[ebp], -8			; fffffff8H
; Line 1939
	jmp	$exit$86046
$LN21@MQTTAsync_@29:
; Line 1941
	mov	edx, DWORD PTR _options$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	DWORD PTR [eax+20], 0
	jl	SHORT $LN18@MQTTAsync_@29
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [edx+20], 2
	jle	SHORT $LN22@MQTTAsync_@29
$LN18@MQTTAsync_@29:
; Line 1943
	mov	DWORD PTR _rc$[ebp], -9			; fffffff7H
; Line 1944
	jmp	$exit$86046
$LN22@MQTTAsync_@29:
; Line 1947
	mov	eax, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN17@MQTTAsync_@29
	mov	ecx, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN17@MQTTAsync_@29
; Line 1949
	push	4
	push	OFFSET $SG86059
	mov	edx, DWORD PTR _options$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN15@MQTTAsync_@29
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN17@MQTTAsync_@29
$LN15@MQTTAsync_@29:
; Line 1951
	mov	DWORD PTR _rc$[ebp], -8			; fffffff8H
; Line 1952
	jmp	$exit$86046
$LN17@MQTTAsync_@29:
; Line 1956
	mov	eax, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN12@MQTTAsync_@29
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_UTF8_validateString
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@MQTTAsync_@29
$LN12@MQTTAsync_@29:
	mov	eax, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN14@MQTTAsync_@29
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_UTF8_validateString
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN14@MQTTAsync_@29
$LN13@MQTTAsync_@29:
; Line 1958
	mov	DWORD PTR _rc$[ebp], -5			; fffffffbH
; Line 1959
	jmp	$exit$86046
$LN14@MQTTAsync_@29:
; Line 1962
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+32], edx
; Line 1963
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+36], edx
; Line 1964
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax+44], edx
; Line 1966
	mov	DWORD PTR _tostop, 0
; Line 1967
	cmp	DWORD PTR _sendThread_state, 1
	je	SHORT $LN11@MQTTAsync_@29
	cmp	DWORD PTR _sendThread_state, 2
	je	SHORT $LN11@MQTTAsync_@29
; Line 1969
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1970
	mov	DWORD PTR _sendThread_state, 1
; Line 1971
	push	0
	push	OFFSET _MQTTAsync_sendThread@4
	call	_Thread_start
	add	esp, 8
; Line 1972
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
$LN11@MQTTAsync_@29:
; Line 1974
	cmp	DWORD PTR _receiveThread_state, 1
	je	SHORT $LN10@MQTTAsync_@29
	cmp	DWORD PTR _receiveThread_state, 2
	je	SHORT $LN10@MQTTAsync_@29
; Line 1976
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 1977
	mov	DWORD PTR _receiveThread_state, 1
; Line 1978
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	push	OFFSET _MQTTAsync_receiveThread@4
	call	_Thread_start
	add	esp, 8
; Line 1979
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
$LN10@MQTTAsync_@29:
; Line 1982
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+44], edx
; Line 1983
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _options$[ebp]
	mov	eax, DWORD PTR [edx+12]
	and	eax, 1
	mov	ecx, DWORD PTR [ecx+12]
	and	ecx, -2					; fffffffeH
	or	ecx, eax
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+12], ecx
; Line 1984
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+52], ecx
; Line 1985
	mov	edx, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [edx+4], 3
	jne	SHORT $LN9@MQTTAsync_@29
; Line 1986
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _options$[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR [ecx+88], eax
; Line 1987
	jmp	SHORT $LN8@MQTTAsync_@29
$LN9@MQTTAsync_@29:
; Line 1988
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+88], 0
$LN8@MQTTAsync_@29:
; Line 1990
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN7@MQTTAsync_@29
; Line 1992
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	1992					; 000007c8H
	push	OFFSET $SG86069
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1993
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	1993					; 000007c9H
	push	OFFSET $SG86070
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1994
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	push	1994					; 000007caH
	push	OFFSET $SG86071
	call	_myfree
	add	esp, 12					; 0000000cH
; Line 1995
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+56], 0
$LN7@MQTTAsync_@29:
; Line 1998
	mov	eax, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	$LN6@MQTTAsync_@29
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [edx+4], 0
	jne	$LN6@MQTTAsync_@29
; Line 2000
	push	16					; 00000010H
	push	2000					; 000007d0H
	push	OFFSET $SG86075
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+56], eax
; Line 2001
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_MQTTStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx+4], eax
; Line 2002
	mov	edx, DWORD PTR _options$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+56]
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+12], edx
; Line 2003
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+56]
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+8], eax
; Line 2004
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx], eax
$LN6@MQTTAsync_@29:
; Line 2042
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+4], edx
; Line 2043
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _options$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+8], eax
; Line 2044
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [edx+48], ecx
; Line 2047
	push	52					; 00000034H
	push	2047					; 000007ffH
	push	OFFSET $SG86077
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _conn$[ebp], eax
; Line 2048
	push	52					; 00000034H
	push	0
	mov	edx, DWORD PTR _conn$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2049
	mov	eax, DWORD PTR _conn$[ebp]
	mov	ecx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 2050
	cmp	DWORD PTR _options$[ebp], 0
	je	$LN5@MQTTAsync_@29
; Line 2052
	mov	edx, DWORD PTR _conn$[ebp]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR [edx+4], ecx
; Line 2053
	mov	edx, DWORD PTR _conn$[ebp]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR [edx+8], ecx
; Line 2054
	mov	edx, DWORD PTR _conn$[ebp]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR [edx+16], ecx
; Line 2055
	mov	edx, DWORD PTR _conn$[ebp]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx+24], ecx
; Line 2057
	mov	edx, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [edx+4], 2
	jl	$LN5@MQTTAsync_@29
	mov	eax, DWORD PTR _options$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jle	SHORT $LN5@MQTTAsync_@29
; Line 2061
	mov	ecx, DWORD PTR _conn$[ebp]
	mov	edx, DWORD PTR _options$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx+28], eax
; Line 2062
	mov	ecx, DWORD PTR _options$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	shl	edx, 2
	push	edx
	push	2062					; 0000080eH
	push	OFFSET $SG86083
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _conn$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 2063
	mov	DWORD PTR _i$86081[ebp], 0
	jmp	SHORT $LN3@MQTTAsync_@29
$LN2@MQTTAsync_@29:
	mov	edx, DWORD PTR _i$86081[ebp]
	add	edx, 1
	mov	DWORD PTR _i$86081[ebp], edx
$LN3@MQTTAsync_@29:
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR _i$86081[ebp]
	cmp	ecx, DWORD PTR [eax+56]
	jge	SHORT $LN1@MQTTAsync_@29
; Line 2064
	mov	edx, DWORD PTR _options$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	ecx, DWORD PTR _i$86081[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	call	_MQTTStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _conn$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR _i$86081[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
	jmp	SHORT $LN2@MQTTAsync_@29
$LN1@MQTTAsync_@29:
; Line 2065
	mov	edx, DWORD PTR _conn$[ebp]
	mov	DWORD PTR [edx+36], 0
$LN5@MQTTAsync_@29:
; Line 2068
	mov	eax, DWORD PTR _conn$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2069
	push	4
	mov	ecx, DWORD PTR _conn$[ebp]
	push	ecx
	call	_MQTTAsync_addCommand
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
$exit$86046:
; Line 2072
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	2072					; 00000818H
	push	OFFSET $SG86087
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2073
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2074
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_connect ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_disconnect1
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -12						; size = 4
_dis$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_options$ = 12						; size = 4
_internal$ = 16						; size = 4
_MQTTAsync_disconnect1 PROC
; Line 2078
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 2079
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2080
	mov	DWORD PTR _rc$[ebp], 0
; Line 2083
	push	3
	push	2083					; 00000823H
	push	OFFSET $SG86099
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2084
	cmp	DWORD PTR _m$[ebp], 0
	je	SHORT $LN3@MQTTAsync_@30
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN4@MQTTAsync_@30
$LN3@MQTTAsync_@30:
; Line 2086
	mov	DWORD PTR _rc$[ebp], -1
; Line 2087
	jmp	$exit$86104
$LN4@MQTTAsync_@30:
; Line 2089
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 1
	and	ecx, 1
	jne	SHORT $LN2@MQTTAsync_@30
; Line 2091
	mov	DWORD PTR _rc$[ebp], -3			; fffffffdH
; Line 2092
	jmp	$exit$86104
$LN2@MQTTAsync_@30:
; Line 2096
	push	52					; 00000034H
	push	2096					; 00000830H
	push	OFFSET $SG86107
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dis$[ebp], eax
; Line 2097
	push	52					; 00000034H
	push	0
	mov	edx, DWORD PTR _dis$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2098
	mov	eax, DWORD PTR _dis$[ebp]
	mov	ecx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 2099
	cmp	DWORD PTR _options$[ebp], 0
	je	SHORT $LN1@MQTTAsync_@30
; Line 2101
	mov	edx, DWORD PTR _dis$[ebp]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+4], ecx
; Line 2102
	mov	edx, DWORD PTR _dis$[ebp]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+8], ecx
; Line 2103
	mov	edx, DWORD PTR _dis$[ebp]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+16], ecx
; Line 2104
	mov	edx, DWORD PTR _dis$[ebp]
	mov	eax, DWORD PTR _options$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+28], ecx
$LN1@MQTTAsync_@30:
; Line 2106
	mov	edx, DWORD PTR _dis$[ebp]
	mov	DWORD PTR [edx], 14			; 0000000eH
; Line 2107
	mov	eax, DWORD PTR _dis$[ebp]
	mov	ecx, DWORD PTR _internal$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 2108
	push	4
	mov	edx, DWORD PTR _dis$[ebp]
	push	edx
	call	_MQTTAsync_addCommand
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
$exit$86104:
; Line 2111
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	2111					; 0000083fH
	push	OFFSET $SG86110
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2112
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2113
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_disconnect1 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp
_TEXT	SEGMENT
_options$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_handle$ = 8						; size = 4
_timeout$ = 12						; size = 4
_MQTTAsync_disconnect_internal PROC
; Line 2117
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2118
	mov	BYTE PTR _options$[ebp], 77		; 0000004dH
	mov	BYTE PTR _options$[ebp+1], 81		; 00000051H
	mov	BYTE PTR _options$[ebp+2], 84		; 00000054H
	mov	BYTE PTR _options$[ebp+3], 68		; 00000044H
	mov	DWORD PTR _options$[ebp+4], 0
	mov	DWORD PTR _options$[ebp+8], 0
	mov	DWORD PTR _options$[ebp+12], 0
	mov	DWORD PTR _options$[ebp+16], 0
	mov	DWORD PTR _options$[ebp+20], 0
; Line 2120
	mov	eax, DWORD PTR _timeout$[ebp]
	mov	DWORD PTR _options$[ebp+8], eax
; Line 2121
	push	1
	lea	ecx, DWORD PTR _options$[ebp]
	push	ecx
	mov	edx, DWORD PTR _handle$[ebp]
	push	edx
	call	_MQTTAsync_disconnect1
	add	esp, 12					; 0000000cH
; Line 2122
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_disconnect_internal ENDP
_TEXT	ENDS
PUBLIC	_MQTTProtocol_closeSession
; Function compile flags: /Odtp
_TEXT	SEGMENT
_c$ = 8							; size = 4
_sendwill$ = 12						; size = 4
_MQTTProtocol_closeSession PROC
; Line 2126
	push	ebp
	mov	ebp, esp
; Line 2127
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_MQTTAsync_disconnect_internal
	add	esp, 8
; Line 2128
	pop	ebp
	ret	0
_MQTTProtocol_closeSession ENDP
; Function compile flags: /Odtp
_handle$ = 8						; size = 4
_options$ = 12						; size = 4
_MQTTAsync_disconnect PROC
; Line 2132
	push	ebp
	mov	ebp, esp
; Line 2133
	push	0
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	_MQTTAsync_disconnect1
	add	esp, 12					; 0000000cH
; Line 2134
	pop	ebp
	ret	0
_MQTTAsync_disconnect ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_isConnected
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_MQTTAsync_isConnected PROC
; Line 2138
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2139
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2140
	mov	DWORD PTR _rc$[ebp], 0
; Line 2142
	push	3
	push	2142					; 0000085eH
	push	OFFSET $SG86136
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2143
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 2144
	cmp	DWORD PTR _m$[ebp], 0
	je	SHORT $LN1@MQTTAsync_@31
	mov	edx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN1@MQTTAsync_@31
; Line 2145
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	and	edx, 1
	mov	DWORD PTR _rc$[ebp], edx
$LN1@MQTTAsync_@31:
; Line 2146
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 2147
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	2147					; 00000863H
	push	OFFSET $SG86138
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2148
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2149
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_isConnected ENDP
_TEXT	ENDS
PUBLIC	_cmdMessageIDCompare
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cmd$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_cmdMessageIDCompare PROC
; Line 2153
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2154
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _cmd$[ebp], eax
; Line 2155
	mov	ecx, DWORD PTR _cmd$[ebp]
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	eax, ecx
; Line 2156
	mov	esp, ebp
	pop	ebp
	ret	0
_cmdMessageIDCompare ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_assignMsgId
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv89 = -24						; size = 4
tv75 = -20						; size = 4
_thread_id$ = -16					; size = 4
_msgid$ = -12						; size = 4
_locked$ = -8						; size = 4
_start_msgid$ = -4					; size = 4
_m$ = 8							; size = 4
_MQTTAsync_assignMsgId PROC
; Line 2166
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 2167
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _start_msgid$[ebp], edx
; Line 2168
	mov	eax, DWORD PTR _start_msgid$[ebp]
	mov	DWORD PTR _msgid$[ebp], eax
; Line 2169
	mov	DWORD PTR _thread_id$[ebp], 0
; Line 2170
	mov	DWORD PTR _locked$[ebp], 0
; Line 2173
	push	3
	push	2173					; 0000087dH
	push	OFFSET $SG86156
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2175
	call	_Thread_getid
	mov	DWORD PTR _thread_id$[ebp], eax
; Line 2176
	mov	ecx, DWORD PTR _thread_id$[ebp]
	cmp	ecx, DWORD PTR _sendThread_id
	je	SHORT $LN7@MQTTAsync_@32
	mov	edx, DWORD PTR _thread_id$[ebp]
	cmp	edx, DWORD PTR _receiveThread_id
	je	SHORT $LN7@MQTTAsync_@32
; Line 2178
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 2179
	mov	DWORD PTR _locked$[ebp], 1
$LN7@MQTTAsync_@32:
; Line 2182
	cmp	DWORD PTR _msgid$[ebp], 65535		; 0000ffffH
	jne	SHORT $LN10@MQTTAsync_@32
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN11@MQTTAsync_@32
$LN10@MQTTAsync_@32:
	mov	ecx, DWORD PTR _msgid$[ebp]
	add	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN11@MQTTAsync_@32:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _msgid$[ebp], edx
$LN6@MQTTAsync_@32:
; Line 2184
	push	OFFSET _cmdMessageIDCompare
	lea	eax, DWORD PTR _msgid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands
	push	ecx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@MQTTAsync_@32
	push	OFFSET _cmdMessageIDCompare
	lea	edx, DWORD PTR _msgid$[ebp]
	push	edx
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@MQTTAsync_@32
$LN4@MQTTAsync_@32:
; Line 2186
	cmp	DWORD PTR _msgid$[ebp], 65535		; 0000ffffH
	jne	SHORT $LN12@MQTTAsync_@32
	mov	DWORD PTR tv89[ebp], 1
	jmp	SHORT $LN13@MQTTAsync_@32
$LN12@MQTTAsync_@32:
	mov	edx, DWORD PTR _msgid$[ebp]
	add	edx, 1
	mov	DWORD PTR tv89[ebp], edx
$LN13@MQTTAsync_@32:
	mov	eax, DWORD PTR tv89[ebp]
	mov	DWORD PTR _msgid$[ebp], eax
; Line 2187
	mov	ecx, DWORD PTR _msgid$[ebp]
	cmp	ecx, DWORD PTR _start_msgid$[ebp]
	jne	SHORT $LN3@MQTTAsync_@32
; Line 2189
	mov	DWORD PTR _msgid$[ebp], 0
; Line 2190
	jmp	SHORT $LN5@MQTTAsync_@32
$LN3@MQTTAsync_@32:
; Line 2192
	jmp	SHORT $LN6@MQTTAsync_@32
$LN5@MQTTAsync_@32:
; Line 2193
	cmp	DWORD PTR _msgid$[ebp], 0
	je	SHORT $LN2@MQTTAsync_@32
; Line 2194
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _msgid$[ebp]
	mov	DWORD PTR [eax+40], ecx
$LN2@MQTTAsync_@32:
; Line 2195
	cmp	DWORD PTR _locked$[ebp], 0
	je	SHORT $LN1@MQTTAsync_@32
; Line 2196
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
$LN1@MQTTAsync_@32:
; Line 2197
	push	3
	lea	eax, DWORD PTR _msgid$[ebp]
	push	eax
	push	2197					; 00000895H
	push	OFFSET $SG86165
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2198
	mov	eax, DWORD PTR _msgid$[ebp]
; Line 2199
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_assignMsgId ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_subscribeMany
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -20						; size = 4
_sub$ = -16						; size = 4
_msgid$ = -12						; size = 4
_i$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_count$ = 12						; size = 4
_topic$ = 16						; size = 4
_qos$ = 20						; size = 4
_response$ = 24						; size = 4
_MQTTAsync_subscribeMany PROC
; Line 2203
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
; Line 2204
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2205
	mov	DWORD PTR _i$[ebp], 0
; Line 2206
	mov	DWORD PTR _rc$[ebp], -1
; Line 2208
	mov	DWORD PTR _msgid$[ebp], 0
; Line 2210
	push	3
	push	2210					; 000008a2H
	push	OFFSET $SG86182
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2211
	cmp	DWORD PTR _m$[ebp], 0
	je	SHORT $LN13@MQTTAsync_@33
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN14@MQTTAsync_@33
$LN13@MQTTAsync_@33:
; Line 2213
	mov	DWORD PTR _rc$[ebp], -1
; Line 2214
	jmp	$exit$86187
$LN14@MQTTAsync_@33:
; Line 2216
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 1
	and	ecx, 1
	jne	SHORT $LN12@MQTTAsync_@33
; Line 2218
	mov	DWORD PTR _rc$[ebp], -3			; fffffffdH
; Line 2219
	jmp	$exit$86187
$LN12@MQTTAsync_@33:
; Line 2221
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@MQTTAsync_@33
$LN10@MQTTAsync_@33:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN11@MQTTAsync_@33:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN9@MQTTAsync_@33
; Line 2223
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _topic$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_UTF8_validateString
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN8@MQTTAsync_@33
; Line 2225
	mov	DWORD PTR _rc$[ebp], -5			; fffffffbH
; Line 2226
	jmp	$exit$86187
$LN8@MQTTAsync_@33:
; Line 2228
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _qos$[ebp]
	cmp	DWORD PTR [edx+ecx*4], 0
	jl	SHORT $LN6@MQTTAsync_@33
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _qos$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 2
	jle	SHORT $LN7@MQTTAsync_@33
$LN6@MQTTAsync_@33:
; Line 2230
	mov	DWORD PTR _rc$[ebp], -9			; fffffff7H
; Line 2231
	jmp	$exit$86187
$LN7@MQTTAsync_@33:
; Line 2233
	jmp	SHORT $LN10@MQTTAsync_@33
$LN9@MQTTAsync_@33:
; Line 2234
	mov	edx, DWORD PTR _m$[ebp]
	push	edx
	call	_MQTTAsync_assignMsgId
	add	esp, 4
	mov	DWORD PTR _msgid$[ebp], eax
	cmp	DWORD PTR _msgid$[ebp], 0
	jne	SHORT $LN5@MQTTAsync_@33
; Line 2236
	mov	DWORD PTR _rc$[ebp], -10		; fffffff6H
; Line 2237
	jmp	$exit$86187
$LN5@MQTTAsync_@33:
; Line 2241
	push	52					; 00000034H
	push	2241					; 000008c1H
	push	OFFSET $SG86197
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _sub$[ebp], eax
; Line 2242
	push	52					; 00000034H
	push	0
	mov	eax, DWORD PTR _sub$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2243
	mov	ecx, DWORD PTR _sub$[ebp]
	mov	edx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [ecx+44], edx
; Line 2244
	mov	eax, DWORD PTR _sub$[ebp]
	mov	ecx, DWORD PTR _msgid$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 2245
	cmp	DWORD PTR _response$[ebp], 0
	je	SHORT $LN4@MQTTAsync_@33
; Line 2247
	mov	edx, DWORD PTR _sub$[ebp]
	mov	eax, DWORD PTR _response$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+4], ecx
; Line 2248
	mov	edx, DWORD PTR _sub$[ebp]
	mov	eax, DWORD PTR _response$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+8], ecx
; Line 2249
	mov	edx, DWORD PTR _sub$[ebp]
	mov	eax, DWORD PTR _response$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+16], ecx
; Line 2250
	mov	edx, DWORD PTR _response$[ebp]
	mov	eax, DWORD PTR _sub$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+20], ecx
$LN4@MQTTAsync_@33:
; Line 2252
	mov	edx, DWORD PTR _sub$[ebp]
	mov	DWORD PTR [edx], 8
; Line 2253
	mov	eax, DWORD PTR _sub$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 2254
	mov	edx, DWORD PTR _count$[ebp]
	shl	edx, 2
	push	edx
	push	2254					; 000008ceH
	push	OFFSET $SG86201
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _sub$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 2255
	mov	edx, DWORD PTR _count$[ebp]
	shl	edx, 2
	push	edx
	push	2255					; 000008cfH
	push	OFFSET $SG86203
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _sub$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 2256
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@MQTTAsync_@33
$LN2@MQTTAsync_@33:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@MQTTAsync_@33:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN1@MQTTAsync_@33
; Line 2258
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _topic$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_MQTTStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _sub$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 2259
	mov	edx, DWORD PTR _sub$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _qos$[ebp]
	mov	edx, DWORD PTR [esi+edx*4]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 2260
	jmp	SHORT $LN2@MQTTAsync_@33
$LN1@MQTTAsync_@33:
; Line 2261
	push	4
	mov	eax, DWORD PTR _sub$[ebp]
	push	eax
	call	_MQTTAsync_addCommand
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
$exit$86187:
; Line 2264
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	2264					; 000008d8H
	push	OFFSET $SG86207
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2265
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2266
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_subscribeMany ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_subscribe
; Function compile flags: /Odtp
_TEXT	SEGMENT
_topics$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_topic$ = 12						; size = 4
_qos$ = 16						; size = 4
_response$ = 20						; size = 4
_MQTTAsync_subscribe PROC
; Line 2270
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2271
	mov	DWORD PTR _rc$[ebp], 0
; Line 2272
	mov	eax, DWORD PTR _topic$[ebp]
	mov	DWORD PTR _topics$[ebp], eax
; Line 2273
	push	3
	push	2273					; 000008e1H
	push	OFFSET $SG86220
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2274
	mov	ecx, DWORD PTR _response$[ebp]
	push	ecx
	lea	edx, DWORD PTR _qos$[ebp]
	push	edx
	lea	eax, DWORD PTR _topics$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	_MQTTAsync_subscribeMany
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax
; Line 2275
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	2275					; 000008e3H
	push	OFFSET $SG86221
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2276
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2277
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_subscribe ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_unsubscribeMany
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -20						; size = 4
_msgid$ = -16						; size = 4
_unsub$ = -12						; size = 4
_i$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_count$ = 12						; size = 4
_topic$ = 16						; size = 4
_response$ = 20						; size = 4
_MQTTAsync_unsubscribeMany PROC
; Line 2281
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 2282
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2283
	mov	DWORD PTR _i$[ebp], 0
; Line 2284
	mov	DWORD PTR _rc$[ebp], -1
; Line 2286
	mov	DWORD PTR _msgid$[ebp], 0
; Line 2288
	push	3
	push	2288					; 000008f0H
	push	OFFSET $SG86236
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2289
	cmp	DWORD PTR _m$[ebp], 0
	je	SHORT $LN11@MQTTAsync_@34
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN12@MQTTAsync_@34
$LN11@MQTTAsync_@34:
; Line 2291
	mov	DWORD PTR _rc$[ebp], -1
; Line 2292
	jmp	$exit$86241
$LN12@MQTTAsync_@34:
; Line 2294
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 1
	and	ecx, 1
	jne	SHORT $LN10@MQTTAsync_@34
; Line 2296
	mov	DWORD PTR _rc$[ebp], -3			; fffffffdH
; Line 2297
	jmp	$exit$86241
$LN10@MQTTAsync_@34:
; Line 2299
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@MQTTAsync_@34
$LN8@MQTTAsync_@34:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN9@MQTTAsync_@34:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN7@MQTTAsync_@34
; Line 2301
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _topic$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_UTF8_validateString
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN6@MQTTAsync_@34
; Line 2303
	mov	DWORD PTR _rc$[ebp], -5			; fffffffbH
; Line 2304
	jmp	$exit$86241
$LN6@MQTTAsync_@34:
; Line 2306
	jmp	SHORT $LN8@MQTTAsync_@34
$LN7@MQTTAsync_@34:
; Line 2307
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	call	_MQTTAsync_assignMsgId
	add	esp, 4
	mov	DWORD PTR _msgid$[ebp], eax
	cmp	DWORD PTR _msgid$[ebp], 0
	jne	SHORT $LN5@MQTTAsync_@34
; Line 2309
	mov	DWORD PTR _rc$[ebp], -10		; fffffff6H
; Line 2310
	jmp	$exit$86241
$LN5@MQTTAsync_@34:
; Line 2314
	push	52					; 00000034H
	push	2314					; 0000090aH
	push	OFFSET $SG86249
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _unsub$[ebp], eax
; Line 2315
	push	52					; 00000034H
	push	0
	mov	edx, DWORD PTR _unsub$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2316
	mov	eax, DWORD PTR _unsub$[ebp]
	mov	ecx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 2317
	mov	edx, DWORD PTR _unsub$[ebp]
	mov	DWORD PTR [edx], 10			; 0000000aH
; Line 2318
	mov	eax, DWORD PTR _unsub$[ebp]
	mov	ecx, DWORD PTR _msgid$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 2319
	cmp	DWORD PTR _response$[ebp], 0
	je	SHORT $LN4@MQTTAsync_@34
; Line 2321
	mov	edx, DWORD PTR _unsub$[ebp]
	mov	eax, DWORD PTR _response$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+4], ecx
; Line 2322
	mov	edx, DWORD PTR _unsub$[ebp]
	mov	eax, DWORD PTR _response$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+8], ecx
; Line 2323
	mov	edx, DWORD PTR _unsub$[ebp]
	mov	eax, DWORD PTR _response$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+16], ecx
; Line 2324
	mov	edx, DWORD PTR _response$[ebp]
	mov	eax, DWORD PTR _unsub$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+20], ecx
$LN4@MQTTAsync_@34:
; Line 2326
	mov	edx, DWORD PTR _unsub$[ebp]
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 2327
	mov	ecx, DWORD PTR _count$[ebp]
	shl	ecx, 2
	push	ecx
	push	2327					; 00000917H
	push	OFFSET $SG86253
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _unsub$[ebp]
	mov	DWORD PTR [edx+28], eax
; Line 2328
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@MQTTAsync_@34
$LN2@MQTTAsync_@34:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@MQTTAsync_@34:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _count$[ebp]
	jge	SHORT $LN1@MQTTAsync_@34
; Line 2329
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _topic$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	_MQTTStrdup
	add	esp, 4
	mov	edx, DWORD PTR _unsub$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	jmp	SHORT $LN2@MQTTAsync_@34
$LN1@MQTTAsync_@34:
; Line 2330
	push	4
	mov	eax, DWORD PTR _unsub$[ebp]
	push	eax
	call	_MQTTAsync_addCommand
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
$exit$86241:
; Line 2333
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	2333					; 0000091dH
	push	OFFSET $SG86257
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2334
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2335
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_unsubscribeMany ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_unsubscribe
; Function compile flags: /Odtp
_TEXT	SEGMENT
_topics$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_topic$ = 12						; size = 4
_response$ = 16						; size = 4
_MQTTAsync_unsubscribe PROC
; Line 2339
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2340
	mov	DWORD PTR _rc$[ebp], 0
; Line 2341
	mov	eax, DWORD PTR _topic$[ebp]
	mov	DWORD PTR _topics$[ebp], eax
; Line 2342
	push	3
	push	2342					; 00000926H
	push	OFFSET $SG86268
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2343
	mov	ecx, DWORD PTR _response$[ebp]
	push	ecx
	lea	edx, DWORD PTR _topics$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	_MQTTAsync_unsubscribeMany
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
; Line 2344
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	2344					; 00000928H
	push	OFFSET $SG86269
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2345
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2346
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_unsubscribe ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_send
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -16						; size = 4
_msgid$ = -12						; size = 4
_pub$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_destinationName$ = 12					; size = 4
_payloadlen$ = 16					; size = 4
_payload$ = 20						; size = 4
_qos$ = 24						; size = 4
_retained$ = 28						; size = 4
_response$ = 32						; size = 4
_MQTTAsync_send PROC
; Line 2351
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 2352
	mov	DWORD PTR _rc$[ebp], 0
; Line 2353
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2355
	mov	DWORD PTR _msgid$[ebp], 0
; Line 2357
	push	3
	push	2357					; 00000935H
	push	OFFSET $SG86289
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2358
	cmp	DWORD PTR _m$[ebp], 0
	je	SHORT $LN12@MQTTAsync_@35
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN13@MQTTAsync_@35
$LN12@MQTTAsync_@35:
; Line 2359
	mov	DWORD PTR _rc$[ebp], -1
	jmp	SHORT $LN11@MQTTAsync_@35
$LN13@MQTTAsync_@35:
; Line 2360
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 1
	and	ecx, 1
	jne	SHORT $LN10@MQTTAsync_@35
; Line 2361
	mov	DWORD PTR _rc$[ebp], -3			; fffffffdH
	jmp	SHORT $LN11@MQTTAsync_@35
$LN10@MQTTAsync_@35:
; Line 2362
	mov	edx, DWORD PTR _destinationName$[ebp]
	push	edx
	call	_UTF8_validateString
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN8@MQTTAsync_@35
; Line 2363
	mov	DWORD PTR _rc$[ebp], -5			; fffffffbH
	jmp	SHORT $LN11@MQTTAsync_@35
$LN8@MQTTAsync_@35:
; Line 2364
	cmp	DWORD PTR _qos$[ebp], 0
	jl	SHORT $LN5@MQTTAsync_@35
	cmp	DWORD PTR _qos$[ebp], 2
	jle	SHORT $LN6@MQTTAsync_@35
$LN5@MQTTAsync_@35:
; Line 2365
	mov	DWORD PTR _rc$[ebp], -9			; fffffff7H
	jmp	SHORT $LN11@MQTTAsync_@35
$LN6@MQTTAsync_@35:
; Line 2366
	cmp	DWORD PTR _qos$[ebp], 0
	jle	SHORT $LN11@MQTTAsync_@35
	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	call	_MQTTAsync_assignMsgId
	add	esp, 4
	mov	DWORD PTR _msgid$[ebp], eax
	cmp	DWORD PTR _msgid$[ebp], 0
	jne	SHORT $LN11@MQTTAsync_@35
; Line 2367
	mov	DWORD PTR _rc$[ebp], -10		; fffffff6H
$LN11@MQTTAsync_@35:
; Line 2369
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN2@MQTTAsync_@35
; Line 2370
	jmp	$exit$86304
$LN2@MQTTAsync_@35:
; Line 2373
	push	52					; 00000034H
	push	2373					; 00000945H
	push	OFFSET $SG86306
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pub$[ebp], eax
; Line 2374
	push	52					; 00000034H
	push	0
	mov	ecx, DWORD PTR _pub$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2375
	mov	edx, DWORD PTR _pub$[ebp]
	mov	eax, DWORD PTR _m$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 2376
	mov	ecx, DWORD PTR _pub$[ebp]
	mov	DWORD PTR [ecx], 3
; Line 2377
	mov	edx, DWORD PTR _pub$[ebp]
	mov	eax, DWORD PTR _msgid$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 2378
	cmp	DWORD PTR _response$[ebp], 0
	je	SHORT $LN1@MQTTAsync_@35
; Line 2380
	mov	ecx, DWORD PTR _pub$[ebp]
	mov	edx, DWORD PTR _response$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+4], eax
; Line 2381
	mov	ecx, DWORD PTR _pub$[ebp]
	mov	edx, DWORD PTR _response$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+8], eax
; Line 2382
	mov	ecx, DWORD PTR _pub$[ebp]
	mov	edx, DWORD PTR _response$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
; Line 2383
	mov	ecx, DWORD PTR _response$[ebp]
	mov	edx, DWORD PTR _pub$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+20], eax
$LN1@MQTTAsync_@35:
; Line 2385
	mov	ecx, DWORD PTR _destinationName$[ebp]
	push	ecx
	call	_MQTTStrdup
	add	esp, 4
	mov	edx, DWORD PTR _pub$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 2386
	mov	eax, DWORD PTR _pub$[ebp]
	mov	ecx, DWORD PTR _payloadlen$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 2387
	mov	edx, DWORD PTR _payloadlen$[ebp]
	push	edx
	push	2387					; 00000953H
	push	OFFSET $SG86309
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pub$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 2388
	mov	edx, DWORD PTR _payloadlen$[ebp]
	push	edx
	mov	eax, DWORD PTR _payload$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pub$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2389
	mov	eax, DWORD PTR _pub$[ebp]
	mov	ecx, DWORD PTR _qos$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 2390
	mov	edx, DWORD PTR _pub$[ebp]
	mov	eax, DWORD PTR _retained$[ebp]
	mov	DWORD PTR [edx+40], eax
; Line 2391
	push	4
	mov	ecx, DWORD PTR _pub$[ebp]
	push	ecx
	call	_MQTTAsync_addCommand
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
$exit$86304:
; Line 2394
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	2394					; 0000095aH
	push	OFFSET $SG86310
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2395
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2396
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_send ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_sendMessage
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_destinationName$ = 12					; size = 4
_message$ = 16						; size = 4
_response$ = 20						; size = 4
_MQTTAsync_sendMessage PROC
; Line 2402
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2403
	mov	DWORD PTR _rc$[ebp], 0
; Line 2405
	push	3
	push	2405					; 00000965H
	push	OFFSET $SG86321
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2406
	cmp	DWORD PTR _message$[ebp], 0
	jne	SHORT $LN3@MQTTAsync_@36
; Line 2408
	mov	DWORD PTR _rc$[ebp], -6			; fffffffaH
; Line 2409
	jmp	SHORT $exit$86324
$LN3@MQTTAsync_@36:
; Line 2411
	push	4
	push	OFFSET $SG86327
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@MQTTAsync_@36
	mov	ecx, DWORD PTR _message$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN2@MQTTAsync_@36
$LN1@MQTTAsync_@36:
; Line 2413
	mov	DWORD PTR _rc$[ebp], -8			; fffffff8H
; Line 2414
	jmp	SHORT $exit$86324
$LN2@MQTTAsync_@36:
; Line 2418
	mov	edx, DWORD PTR _response$[ebp]
	push	edx
	mov	eax, DWORD PTR _message$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _message$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _destinationName$[ebp]
	push	edx
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	_MQTTAsync_send
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _rc$[ebp], eax
$exit$86324:
; Line 2420
	push	3
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	2420					; 00000974H
	push	OFFSET $SG86328
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2421
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2422
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_sendMessage ENDP
_TEXT	ENDS
PUBLIC	__real@4014000000000000
PUBLIC	_MQTTAsync_retry
EXTRN	_MQTTProtocol_keepalive:PROC
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
_now$ = -8						; size = 8
_MQTTAsync_retry PROC
; Line 2426
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2430
	push	3
	push	2430					; 0000097eH
	push	OFFSET $SG86335
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2431
	lea	eax, DWORD PTR _now$[ebp]
	push	eax
	call	_time
	add	esp, 4
; Line 2432
	mov	ecx, DWORD PTR ?last@?1??MQTTAsync_retry@@9@9+4
	push	ecx
	mov	edx, DWORD PTR ?last@?1??MQTTAsync_retry@@9@9
	push	edx
	mov	eax, DWORD PTR _now$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _now$[ebp]
	push	ecx
	call	_difftime
	add	esp, 16					; 00000010H
	fcomp	QWORD PTR __real@4014000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@MQTTAsync_@37
; Line 2434
	push	OFFSET ?last@?1??MQTTAsync_retry@@9@9
	call	_time
	add	esp, 4
; Line 2435
	mov	edx, DWORD PTR _now$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _now$[ebp]
	push	eax
	call	_MQTTProtocol_keepalive
	add	esp, 8
; Line 2436
	push	0
	push	1
	mov	ecx, DWORD PTR _now$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _now$[ebp]
	push	edx
	call	_MQTTProtocol_retry
	add	esp, 16					; 00000010H
; Line 2438
	jmp	SHORT $LN1@MQTTAsync_@37
$LN2@MQTTAsync_@37:
; Line 2439
	push	0
	push	0
	mov	eax, DWORD PTR _now$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _now$[ebp]
	push	ecx
	call	_MQTTProtocol_retry
	add	esp, 16					; 00000010H
$LN1@MQTTAsync_@37:
; Line 2440
	push	3
	push	0
	push	2440					; 00000988H
	push	OFFSET $SG86339
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2441
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_retry ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_connecting
EXTRN	_MQTTPacket_send_connect:PROC
EXTRN	_Socket_clearPendingWrite:PROC
EXTRN	__imp__getsockopt@20:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_conn$86358 = -16					; size = 4
_len$86348 = -12					; size = 4
_error$86347 = -8					; size = 4
_rc$ = -4						; size = 4
_m$ = 8							; size = 4
_MQTTAsync_connecting PROC
; Line 2445
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
; Line 2446
	mov	DWORD PTR _rc$[ebp], -1
; Line 2448
	push	3
	push	2448					; 00000990H
	push	OFFSET $SG86345
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2449
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 24					; 00000018H
	sar	edx, 28					; 0000001cH
	cmp	edx, 1
	jne	$exit$86352
; Line 2452
	mov	DWORD PTR _len$86348[ebp], 4
; Line 2454
	lea	eax, DWORD PTR _len$86348[ebp]
	push	eax
	lea	ecx, DWORD PTR _error$86347[ebp]
	push	ecx
	push	4103					; 00001007H
	push	65535					; 0000ffffH
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__getsockopt@20
	mov	DWORD PTR _rc$[ebp], eax
	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN9@MQTTAsync_@38
; Line 2455
	mov	edx, DWORD PTR _error$86347[ebp]
	mov	DWORD PTR _rc$[ebp], edx
$LN9@MQTTAsync_@38:
; Line 2457
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN8@MQTTAsync_@38
; Line 2458
	jmp	SHORT $exit$86352
$LN8@MQTTAsync_@38:
; Line 2460
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_Socket_clearPendingWrite
	add	esp, 4
; Line 2503
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	and	edx, -241				; ffffff0fH
	or	edx, 48					; 00000030H
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+12], edx
; Line 2504
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_MQTTPacket_send_connect
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax
$exit$86352:
; Line 2525
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN4@MQTTAsync_@38
	cmp	DWORD PTR _rc$[ebp], -22		; ffffffeaH
	je	SHORT $LN4@MQTTAsync_@38
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 24					; 00000018H
	sar	edx, 28					; 0000001cH
	cmp	edx, 2
	jne	SHORT $LN5@MQTTAsync_@38
$LN4@MQTTAsync_@38:
	cmp	DWORD PTR _rc$[ebp], -3			; fffffffdH
	jne	$LN6@MQTTAsync_@38
$LN5@MQTTAsync_@38:
; Line 2527
	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	call	_MQTTAsync_checkConn
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@MQTTAsync_@38
; Line 2531
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTAsync_closeOnly
	add	esp, 4
; Line 2533
	push	52					; 00000034H
	push	2533					; 000009e5H
	push	OFFSET $SG86360
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _conn$86358[ebp], eax
; Line 2534
	push	52					; 00000034H
	push	0
	mov	ecx, DWORD PTR _conn$86358[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2535
	mov	edx, DWORD PTR _conn$86358[ebp]
	mov	eax, DWORD PTR _m$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 2536
	mov	esi, DWORD PTR _m$[ebp]
	add	esi, 28					; 0000001cH
	mov	ecx, 11					; 0000000bH
	mov	edi, DWORD PTR _conn$86358[ebp]
	rep movsd
; Line 2537
	push	OFFSET $SG86362
	push	-1
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
; Line 2538
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _conn$86358[ebp]
	push	ecx
	call	_MQTTAsync_addCommand
	add	esp, 8
; Line 2540
	jmp	SHORT $LN6@MQTTAsync_@38
$LN3@MQTTAsync_@38:
; Line 2542
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_MQTTAsync_closeSession
	add	esp, 4
; Line 2543
	mov	esi, DWORD PTR _m$[ebp]
	add	esi, 28					; 0000001cH
	sub	esp, 44					; 0000002cH
	mov	ecx, 11					; 0000000bH
	mov	edi, esp
	rep movsd
	call	_MQTTAsync_freeConnect
	add	esp, 44					; 0000002cH
; Line 2544
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $LN6@MQTTAsync_@38
; Line 2546
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG86365
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 2547
	push	0
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	call	edx
	add	esp, 8
$LN6@MQTTAsync_@38:
; Line 2551
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	2551					; 000009f7H
	push	OFFSET $SG86367
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2552
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2553
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_connecting ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_MQTTProtocol_handlePingresps:PROC
EXTRN	_MQTTProtocol_handlePubrels:PROC
EXTRN	_MQTTProtocol_handlePubrecs:PROC
EXTRN	_MQTTProtocol_handlePubacks:PROC
EXTRN	_MQTTProtocol_handlePubcomps:PROC
EXTRN	_MQTTProtocol_handlePublishes:PROC
EXTRN	_MQTTPacket_Factory:PROC
EXTRN	_Socket_getReadySocket:PROC
_BSS	SEGMENT
	ALIGN	8

?ack@?1??MQTTAsync_cycle@@9@9 DQ 01H DUP (?)		; `MQTTAsync_cycle'::`2'::ack
; Function compile flags: /Odtp
_BSS	ENDS
_TEXT	SEGMENT
tv210 = -92						; size = 4
$T86712 = -88						; size = 8
_data$86435 = -80					; size = 40
__$ArrayPad$ = -40					; size = 4
_command$86429 = -36					; size = 4
_current$86422 = -32					; size = 4
_msgid$86416 = -28					; size = 4
_freed$86411 = -24					; size = 4
_conn$86401 = -20					; size = 4
_m$86388 = -16						; size = 4
_tp$ = -12						; size = 8
_pack$ = -4						; size = 4
_sock$ = 8						; size = 4
_timeout$ = 12						; size = 4
_rc$ = 16						; size = 4
_MQTTAsync_cycle PROC
; Line 2557
	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
; Line 2558
	mov	DWORD PTR _tp$[ebp], 0
	mov	DWORD PTR _tp$[ebp+4], 0
; Line 2560
	mov	DWORD PTR _pack$[ebp], 0
; Line 2563
	push	3
	push	2563					; 00000a03H
	push	OFFSET $SG86382
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2564
	cmp	DWORD PTR _timeout$[ebp], 0
	jbe	SHORT $LN35@MQTTAsync_@39
; Line 2566
	mov	eax, DWORD PTR _timeout$[ebp]
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	mov	DWORD PTR _tp$[ebp], eax
; Line 2567
	mov	eax, DWORD PTR _timeout$[ebp]
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	imul	edx, 1000				; 000003e8H
	mov	DWORD PTR _tp$[ebp+4], edx
$LN35@MQTTAsync_@39:
; Line 2575
	lea	edx, DWORD PTR _tp$[ebp]
	push	edx
	push	0
	call	_Socket_getReadySocket
	add	esp, 8
	mov	ecx, DWORD PTR _sock$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 2576
	cmp	DWORD PTR _tostop, 0
	jne	SHORT $LN34@MQTTAsync_@39
	mov	edx, DWORD PTR _sock$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN34@MQTTAsync_@39
	cmp	DWORD PTR _tp$[ebp], 0
	jg	SHORT $LN33@MQTTAsync_@39
	cmp	DWORD PTR _tp$[ebp+4], 0
	jle	SHORT $LN34@MQTTAsync_@39
$LN33@MQTTAsync_@39:
; Line 2578
	push	100					; 00000064H
	call	_MQTTAsync_sleep
	add	esp, 4
; Line 2587
	jmp	SHORT $LN32@MQTTAsync_@39
$LN34@MQTTAsync_@39:
; Line 2588
	mov	DWORD PTR ?nosockets_count@?1??MQTTAsync_cycle@@9@9, 0
$LN32@MQTTAsync_@39:
; Line 2592
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 2593
	mov	ecx, DWORD PTR _sock$[ebp]
	cmp	DWORD PTR [ecx], 0
	jle	$LN31@MQTTAsync_@39
; Line 2595
	mov	DWORD PTR _m$86388[ebp], 0
; Line 2596
	push	OFFSET _clientSockCompare
	mov	edx, DWORD PTR _sock$[ebp]
	push	edx
	mov	eax, DWORD PTR _handles
	push	eax
	call	_ListFindItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN30@MQTTAsync_@39
; Line 2597
	mov	ecx, DWORD PTR _handles
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _m$86388[ebp], eax
$LN30@MQTTAsync_@39:
; Line 2598
	cmp	DWORD PTR _m$86388[ebp], 0
	je	$LN29@MQTTAsync_@39
; Line 2600
	mov	ecx, DWORD PTR _m$86388[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+12]
	shl	eax, 24					; 00000018H
	sar	eax, 28					; 0000001cH
	cmp	eax, 1
	je	SHORT $LN27@MQTTAsync_@39
	mov	ecx, DWORD PTR _m$86388[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+12]
	shl	eax, 24					; 00000018H
	sar	eax, 28					; 0000001cH
	cmp	eax, 2
	jne	SHORT $LN28@MQTTAsync_@39
$LN27@MQTTAsync_@39:
; Line 2601
	mov	ecx, DWORD PTR _m$86388[ebp]
	push	ecx
	call	_MQTTAsync_connecting
	add	esp, 4
	mov	edx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [edx], eax
; Line 2602
	jmp	SHORT $LN26@MQTTAsync_@39
$LN28@MQTTAsync_@39:
; Line 2603
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$86388[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 16					; 00000010H
	push	edx
	call	_MQTTPacket_Factory
	add	esp, 8
	mov	DWORD PTR _pack$[ebp], eax
$LN26@MQTTAsync_@39:
; Line 2604
	mov	eax, DWORD PTR _m$86388[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 24					; 00000018H
	sar	edx, 28					; 0000001cH
	cmp	edx, 3
	jne	$LN29@MQTTAsync_@39
	mov	eax, DWORD PTR _rc$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	$LN29@MQTTAsync_@39
; Line 2606
	push	OFFSET $SG86399
	push	-1
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
; Line 2607
	mov	ecx, DWORD PTR _m$86388[ebp]
	push	ecx
	mov	edx, DWORD PTR _m$86388[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	call	_MQTTAsync_checkConn
	add	esp, 8
	test	eax, eax
	je	SHORT $LN24@MQTTAsync_@39
; Line 2611
	mov	eax, DWORD PTR _m$86388[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MQTTAsync_closeOnly
	add	esp, 4
; Line 2613
	push	52					; 00000034H
	push	2613					; 00000a35H
	push	OFFSET $SG86403
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _conn$86401[ebp], eax
; Line 2614
	push	52					; 00000034H
	push	0
	mov	edx, DWORD PTR _conn$86401[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2615
	mov	eax, DWORD PTR _conn$86401[ebp]
	mov	ecx, DWORD PTR _m$86388[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 2616
	mov	esi, DWORD PTR _m$86388[ebp]
	add	esi, 28					; 0000001cH
	mov	ecx, 11					; 0000000bH
	mov	edi, DWORD PTR _conn$86401[ebp]
	rep movsd
; Line 2617
	push	OFFSET $SG86405
	push	-1
	push	3
	call	_Log
	add	esp, 12					; 0000000cH
; Line 2618
	push	44					; 0000002cH
	mov	edx, DWORD PTR _conn$86401[ebp]
	push	edx
	call	_MQTTAsync_addCommand
	add	esp, 8
; Line 2620
	jmp	SHORT $LN29@MQTTAsync_@39
$LN24@MQTTAsync_@39:
; Line 2622
	mov	eax, DWORD PTR _m$86388[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MQTTAsync_closeSession
	add	esp, 4
; Line 2623
	mov	esi, DWORD PTR _m$86388[ebp]
	add	esi, 28					; 0000001cH
	sub	esp, 44					; 0000002cH
	mov	ecx, 11					; 0000000bH
	mov	edi, esp
	rep movsd
	call	_MQTTAsync_freeConnect
	add	esp, 44					; 0000002cH
; Line 2624
	mov	edx, DWORD PTR _m$86388[ebp]
	cmp	DWORD PTR [edx+36], 0
	je	SHORT $LN29@MQTTAsync_@39
; Line 2626
	mov	eax, DWORD PTR _m$86388[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG86408
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 2627
	push	0
	mov	eax, DWORD PTR _m$86388[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _m$86388[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
$LN29@MQTTAsync_@39:
; Line 2632
	cmp	DWORD PTR _pack$[ebp], 0
	je	$LN31@MQTTAsync_@39
; Line 2634
	mov	DWORD PTR _freed$86411[ebp], 1
; Line 2637
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 4
	and	edx, 15					; 0000000fH
	cmp	edx, 3
	jne	SHORT $LN20@MQTTAsync_@39
; Line 2638
	mov	eax, DWORD PTR _sock$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pack$[ebp]
	push	edx
	call	_MQTTProtocol_handlePublishes
	add	esp, 8
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	$LN19@MQTTAsync_@39
$LN20@MQTTAsync_@39:
; Line 2639
	mov	edx, DWORD PTR _pack$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 4
	and	eax, 15					; 0000000fH
	cmp	eax, 4
	je	SHORT $LN17@MQTTAsync_@39
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 4
	and	edx, 15					; 0000000fH
	cmp	edx, 7
	jne	$LN18@MQTTAsync_@39
$LN17@MQTTAsync_@39:
; Line 2643
	mov	eax, DWORD PTR _pack$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 4
	and	ecx, 15					; 0000000fH
	cmp	ecx, 7
	jne	SHORT $LN38@MQTTAsync_@39
	mov	edx, DWORD PTR _pack$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T86712[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR $T86712[ebp+4], ecx
	jmp	SHORT $LN39@MQTTAsync_@39
$LN38@MQTTAsync_@39:
	mov	edx, DWORD PTR _pack$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T86712[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR $T86712[ebp+4], ecx
$LN39@MQTTAsync_@39:
	mov	edx, DWORD PTR $T86712[ebp]
	mov	DWORD PTR ?ack@?1??MQTTAsync_cycle@@9@9, edx
	mov	eax, DWORD PTR $T86712[ebp+4]
	mov	DWORD PTR ?ack@?1??MQTTAsync_cycle@@9@9+4, eax
; Line 2644
	mov	ecx, DWORD PTR ?ack@?1??MQTTAsync_cycle@@9@9+4
	mov	DWORD PTR _msgid$86416[ebp], ecx
; Line 2646
	mov	edx, DWORD PTR _pack$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 4
	and	eax, 15					; 0000000fH
	cmp	eax, 7
	jne	SHORT $LN40@MQTTAsync_@39
	mov	ecx, DWORD PTR _sock$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pack$[ebp]
	push	eax
	call	_MQTTProtocol_handlePubcomps
	add	esp, 8
	mov	DWORD PTR tv210[ebp], eax
	jmp	SHORT $LN41@MQTTAsync_@39
$LN40@MQTTAsync_@39:
	mov	ecx, DWORD PTR _sock$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pack$[ebp]
	push	eax
	call	_MQTTProtocol_handlePubacks
	add	esp, 8
	mov	DWORD PTR tv210[ebp], eax
$LN41@MQTTAsync_@39:
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR tv210[ebp]
	mov	DWORD PTR [ecx], edx
; Line 2647
	cmp	DWORD PTR _m$86388[ebp], 0
	jne	SHORT $LN16@MQTTAsync_@39
; Line 2648
	mov	eax, DWORD PTR _msgid$86416[ebp]
	push	eax
	push	OFFSET $SG86420
	push	-1
	push	5
	call	_Log
	add	esp, 16					; 00000010H
$LN16@MQTTAsync_@39:
; Line 2649
	cmp	DWORD PTR _m$86388[ebp], 0
	je	$LN15@MQTTAsync_@39
; Line 2651
	mov	DWORD PTR _current$86422[ebp], 0
; Line 2653
	mov	ecx, DWORD PTR _m$86388[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN13@MQTTAsync_@39
; Line 2655
	mov	edx, DWORD PTR _msgid$86416[ebp]
	push	edx
	mov	eax, DWORD PTR _m$86388[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG86425
	push	-1
	push	3
	call	_Log
	add	esp, 20					; 00000014H
; Line 2656
	mov	eax, DWORD PTR _msgid$86416[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$86388[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _m$86388[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	add	esp, 8
$LN13@MQTTAsync_@39:
; Line 2659
	lea	edx, DWORD PTR _current$86422[ebp]
	push	edx
	mov	eax, DWORD PTR _m$86388[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	$LN15@MQTTAsync_@39
; Line 2661
	mov	edx, DWORD PTR _current$86422[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _command$86429[ebp], eax
; Line 2662
	mov	ecx, DWORD PTR _command$86429[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	edx, DWORD PTR _msgid$86416[ebp]
	jne	$LN11@MQTTAsync_@39
; Line 2664
	mov	eax, DWORD PTR _command$86429[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$86388[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	call	_ListDetach
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@MQTTAsync_@39
; Line 2665
	push	OFFSET $SG86433
	push	-1
	push	5
	call	_Log
	add	esp, 12					; 0000000cH
$LN10@MQTTAsync_@39:
; Line 2666
	mov	eax, DWORD PTR _command$86429[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN9@MQTTAsync_@39
; Line 2670
	mov	ecx, DWORD PTR _command$86429[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _data$86435[ebp], edx
; Line 2671
	mov	eax, DWORD PTR _command$86429[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _data$86435[ebp+36], ecx
; Line 2672
	mov	edx, DWORD PTR _command$86429[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR _data$86435[ebp+16], eax
; Line 2673
	mov	ecx, DWORD PTR _command$86429[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _data$86435[ebp+12], edx
; Line 2674
	mov	eax, DWORD PTR _command$86429[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _data$86435[ebp+20], ecx
; Line 2675
	mov	edx, DWORD PTR _command$86429[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _data$86435[ebp+24], eax
; Line 2676
	mov	ecx, DWORD PTR _m$86388[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG86436
	push	-1
	push	3
	call	_Log
	add	esp, 16					; 00000010H
; Line 2677
	lea	ecx, DWORD PTR _data$86435[ebp]
	push	ecx
	mov	edx, DWORD PTR _command$86429[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _command$86429[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 8
$LN9@MQTTAsync_@39:
; Line 2679
	mov	eax, DWORD PTR _command$86429[ebp]
	push	eax
	call	_MQTTAsync_freeCommand
	add	esp, 4
; Line 2680
	jmp	SHORT $LN15@MQTTAsync_@39
$LN11@MQTTAsync_@39:
; Line 2682
	jmp	$LN13@MQTTAsync_@39
$LN15@MQTTAsync_@39:
; Line 2683
	jmp	$LN19@MQTTAsync_@39
$LN18@MQTTAsync_@39:
; Line 2685
	mov	ecx, DWORD PTR _pack$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 4
	and	edx, 15					; 0000000fH
	cmp	edx, 5
	jne	SHORT $LN7@MQTTAsync_@39
; Line 2686
	mov	eax, DWORD PTR _sock$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pack$[ebp]
	push	edx
	call	_MQTTProtocol_handlePubrecs
	add	esp, 8
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN19@MQTTAsync_@39
$LN7@MQTTAsync_@39:
; Line 2687
	mov	edx, DWORD PTR _pack$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 4
	and	eax, 15					; 0000000fH
	cmp	eax, 6
	jne	SHORT $LN5@MQTTAsync_@39
; Line 2688
	mov	ecx, DWORD PTR _sock$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pack$[ebp]
	push	eax
	call	_MQTTProtocol_handlePubrels
	add	esp, 8
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN19@MQTTAsync_@39
$LN5@MQTTAsync_@39:
; Line 2689
	mov	edx, DWORD PTR _pack$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 4
	and	eax, 15					; 0000000fH
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN3@MQTTAsync_@39
; Line 2690
	mov	ecx, DWORD PTR _sock$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pack$[ebp]
	push	eax
	call	_MQTTProtocol_handlePingresps
	add	esp, 8
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 2691
	jmp	SHORT $LN19@MQTTAsync_@39
$LN3@MQTTAsync_@39:
; Line 2692
	mov	DWORD PTR _freed$86411[ebp], 0
$LN19@MQTTAsync_@39:
; Line 2693
	cmp	DWORD PTR _freed$86411[ebp], 0
	je	SHORT $LN31@MQTTAsync_@39
; Line 2694
	mov	DWORD PTR _pack$[ebp], 0
$LN31@MQTTAsync_@39:
; Line 2697
	call	_MQTTAsync_retry
; Line 2698
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 2699
	push	3
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	2699					; 00000a8bH
	push	OFFSET $SG86446
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2700
	mov	eax, DWORD PTR _pack$[ebp]
; Line 2701
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_cycle ENDP
_TEXT	ENDS
PUBLIC	_pubCompare
; Function compile flags: /Odtp
_TEXT	SEGMENT
_msg$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_pubCompare PROC
; Line 2705
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2706
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _msg$[ebp], eax
; Line 2707
	mov	ecx, DWORD PTR _msg$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	xor	eax, eax
	cmp	edx, DWORD PTR _b$[ebp]
	sete	al
; Line 2708
	mov	esp, ebp
	pop	ebp
	ret	0
_pubCompare ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_getPendingTokens
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$86493 = -28						; size = 4
_cmd$86485 = -24					; size = 4
_cmd$86474 = -20					; size = 4
_m$ = -16						; size = 4
_count$ = -12						; size = 4
_rc$ = -8						; size = 4
_current$ = -4						; size = 4
_handle$ = 8						; size = 4
_tokens$ = 12						; size = 4
_MQTTAsync_getPendingTokens PROC
; Line 2712
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 2713
	mov	DWORD PTR _current$[ebp], 0
; Line 2714
	mov	DWORD PTR _count$[ebp], 0
; Line 2715
	mov	DWORD PTR _rc$[ebp], 0
; Line 2716
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2717
	mov	ecx, DWORD PTR _tokens$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 2719
	push	3
	push	2719					; 00000a9fH
	push	OFFSET $SG86467
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2720
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 2722
	cmp	DWORD PTR _m$[ebp], 0
	jne	SHORT $LN11@MQTTAsync_@40
; Line 2724
	mov	DWORD PTR _rc$[ebp], -1
; Line 2725
	jmp	$exit$86470
$LN11@MQTTAsync_@40:
; Line 2729
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN10@MQTTAsync_@40
; Line 2731
	mov	edx, DWORD PTR _current$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _cmd$86474[ebp], eax
; Line 2733
	mov	ecx, DWORD PTR _cmd$86474[ebp]
	mov	edx, DWORD PTR [ecx+44]
	cmp	edx, DWORD PTR _m$[ebp]
	jne	SHORT $LN9@MQTTAsync_@40
; Line 2734
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN9@MQTTAsync_@40:
; Line 2735
	jmp	SHORT $LN11@MQTTAsync_@40
$LN10@MQTTAsync_@40:
; Line 2736
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN8@MQTTAsync_@40
; Line 2737
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR _count$[ebp]
	add	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _count$[ebp], edx
$LN8@MQTTAsync_@40:
; Line 2738
	cmp	DWORD PTR _count$[ebp], 0
	jne	SHORT $LN7@MQTTAsync_@40
; Line 2739
	jmp	$exit$86470
$LN7@MQTTAsync_@40:
; Line 2740
	mov	eax, DWORD PTR _count$[ebp]
	lea	ecx, DWORD PTR [eax*4+4]
	push	ecx
	push	2740					; 00000ab4H
	push	OFFSET $SG86480
	call	_mymalloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _tokens$[ebp]
	mov	DWORD PTR [edx], eax
; Line 2743
	mov	DWORD PTR _current$[ebp], 0
; Line 2744
	mov	DWORD PTR _count$[ebp], 0
$LN6@MQTTAsync_@40:
; Line 2745
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _commands
	push	ecx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@MQTTAsync_@40
; Line 2747
	mov	edx, DWORD PTR _current$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _cmd$86485[ebp], eax
; Line 2749
	mov	ecx, DWORD PTR _cmd$86485[ebp]
	mov	edx, DWORD PTR [ecx+44]
	cmp	edx, DWORD PTR _m$[ebp]
	jne	SHORT $LN4@MQTTAsync_@40
; Line 2750
	mov	eax, DWORD PTR _tokens$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _count$[ebp]
	mov	eax, DWORD PTR _cmd$86485[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _count$[ebp]
	add	ecx, 1
	mov	DWORD PTR _count$[ebp], ecx
$LN4@MQTTAsync_@40:
; Line 2751
	jmp	SHORT $LN6@MQTTAsync_@40
$LN5@MQTTAsync_@40:
; Line 2754
	mov	edx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN3@MQTTAsync_@40
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+64]
	cmp	DWORD PTR [edx+12], 0
	jle	SHORT $LN3@MQTTAsync_@40
; Line 2756
	mov	DWORD PTR _current$[ebp], 0
$LN2@MQTTAsync_@40:
; Line 2757
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+64]
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@MQTTAsync_@40
; Line 2759
	mov	ecx, DWORD PTR _current$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _m$86493[ebp], edx
; Line 2760
	mov	eax, DWORD PTR _tokens$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _count$[ebp]
	mov	eax, DWORD PTR _m$86493[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _count$[ebp]
	add	ecx, 1
	mov	DWORD PTR _count$[ebp], ecx
; Line 2761
	jmp	SHORT $LN2@MQTTAsync_@40
$LN3@MQTTAsync_@40:
; Line 2763
	mov	edx, DWORD PTR _tokens$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [eax+ecx*4], -1
$exit$86470:
; Line 2766
	mov	edx, DWORD PTR _mqttasync_mutex
	push	edx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 2767
	push	3
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	2767					; 00000acfH
	push	OFFSET $SG86495
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2768
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2769
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_getPendingTokens ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_isComplete
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$86521 = -20						; size = 4
_cmd$86513 = -16					; size = 4
_m$ = -12						; size = 4
_rc$ = -8						; size = 4
_current$ = -4						; size = 4
_handle$ = 8						; size = 4
_dt$ = 12						; size = 4
_MQTTAsync_isComplete PROC
; Line 2773
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 2774
	mov	DWORD PTR _rc$[ebp], 0
; Line 2775
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2776
	mov	DWORD PTR _current$[ebp], 0
; Line 2778
	push	3
	push	2778					; 00000adaH
	push	OFFSET $SG86505
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2779
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 2781
	cmp	DWORD PTR _m$[ebp], 0
	jne	SHORT $LN8@MQTTAsync_@41
; Line 2783
	mov	DWORD PTR _rc$[ebp], -1
; Line 2784
	jmp	$exit$86508
$LN8@MQTTAsync_@41:
; Line 2788
	mov	DWORD PTR _current$[ebp], 0
$LN7@MQTTAsync_@41:
; Line 2789
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _commands
	push	eax
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@MQTTAsync_@41
; Line 2791
	mov	ecx, DWORD PTR _current$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _cmd$86513[ebp], edx
; Line 2793
	mov	eax, DWORD PTR _cmd$86513[ebp]
	mov	ecx, DWORD PTR [eax+44]
	cmp	ecx, DWORD PTR _m$[ebp]
	jne	SHORT $LN5@MQTTAsync_@41
	mov	edx, DWORD PTR _cmd$86513[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	eax, DWORD PTR _dt$[ebp]
	jne	SHORT $LN5@MQTTAsync_@41
; Line 2794
	jmp	SHORT $exit$86508
$LN5@MQTTAsync_@41:
; Line 2795
	jmp	SHORT $LN7@MQTTAsync_@41
$LN6@MQTTAsync_@41:
; Line 2798
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN4@MQTTAsync_@41
	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+64]
	cmp	DWORD PTR [ecx+12], 0
	jle	SHORT $LN4@MQTTAsync_@41
; Line 2800
	mov	DWORD PTR _current$[ebp], 0
$LN3@MQTTAsync_@41:
; Line 2801
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_ListNextElement
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@MQTTAsync_@41
; Line 2803
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _m$86521[ebp], ecx
; Line 2804
	mov	edx, DWORD PTR _m$86521[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR _dt$[ebp]
	jne	SHORT $LN1@MQTTAsync_@41
; Line 2805
	jmp	SHORT $exit$86508
$LN1@MQTTAsync_@41:
; Line 2806
	jmp	SHORT $LN3@MQTTAsync_@41
$LN4@MQTTAsync_@41:
; Line 2808
	mov	DWORD PTR _rc$[ebp], 1
$exit$86508:
; Line 2811
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 2812
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	2812					; 00000afcH
	push	OFFSET $SG86524
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2813
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2814
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_isComplete ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_waitForCompletion
; Function compile flags: /Odtp
_TEXT	SEGMENT
_m$ = -16						; size = 4
_start$ = -12						; size = 4
_elapsed$ = -8						; size = 4
_rc$ = -4						; size = 4
_handle$ = 8						; size = 4
_dt$ = 12						; size = 4
_timeout$ = 16						; size = 4
_MQTTAsync_waitForCompletion PROC
; Line 2818
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 2819
	mov	DWORD PTR _rc$[ebp], -1
; Line 2820
	call	_MQTTAsync_start_clock
	mov	DWORD PTR _start$[ebp], eax
; Line 2821
	mov	DWORD PTR _elapsed$[ebp], 0
; Line 2822
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2824
	push	3
	push	2824					; 00000b08H
	push	OFFSET $SG86536
	call	_StackTrace_entry
	add	esp, 12					; 0000000cH
; Line 2825
	mov	ecx, DWORD PTR _mqttasync_mutex
	push	ecx
	call	_MQTTAsync_lock_mutex
	add	esp, 4
; Line 2827
	cmp	DWORD PTR _m$[ebp], 0
	je	SHORT $LN6@MQTTAsync_@42
	mov	edx, DWORD PTR _m$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN7@MQTTAsync_@42
$LN6@MQTTAsync_@42:
; Line 2829
	mov	DWORD PTR _rc$[ebp], -1
; Line 2830
	jmp	$exit$86541
$LN7@MQTTAsync_@42:
; Line 2832
	mov	eax, DWORD PTR _m$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	and	edx, 1
	jne	SHORT $LN5@MQTTAsync_@42
; Line 2834
	mov	DWORD PTR _rc$[ebp], -3			; fffffffdH
; Line 2835
	jmp	SHORT $exit$86541
$LN5@MQTTAsync_@42:
; Line 2837
	mov	eax, DWORD PTR _mqttasync_mutex
	push	eax
	call	_MQTTAsync_unlock_mutex
	add	esp, 4
; Line 2839
	mov	ecx, DWORD PTR _dt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _handle$[ebp]
	push	edx
	call	_MQTTAsync_isComplete
	add	esp, 8
	cmp	eax, 1
	jne	SHORT $LN4@MQTTAsync_@42
; Line 2841
	mov	DWORD PTR _rc$[ebp], 0
; Line 2842
	jmp	SHORT $exit$86541
$LN4@MQTTAsync_@42:
; Line 2845
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	call	_MQTTAsync_elapsed
	add	esp, 4
	mov	DWORD PTR _elapsed$[ebp], eax
$LN3@MQTTAsync_@42:
; Line 2846
	mov	ecx, DWORD PTR _elapsed$[ebp]
	cmp	ecx, DWORD PTR _timeout$[ebp]
	jae	SHORT $exit$86541
; Line 2848
	push	100					; 00000064H
	call	_MQTTAsync_sleep
	add	esp, 4
; Line 2849
	mov	edx, DWORD PTR _dt$[ebp]
	push	edx
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	_MQTTAsync_isComplete
	add	esp, 8
	cmp	eax, 1
	jne	SHORT $LN1@MQTTAsync_@42
; Line 2851
	mov	DWORD PTR _rc$[ebp], 0
; Line 2852
	jmp	SHORT $exit$86541
$LN1@MQTTAsync_@42:
; Line 2854
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	call	_MQTTAsync_elapsed
	add	esp, 4
	mov	DWORD PTR _elapsed$[ebp], eax
; Line 2855
	jmp	SHORT $LN3@MQTTAsync_@42
$exit$86541:
; Line 2857
	push	3
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	2857					; 00000b29H
	push	OFFSET $SG86548
	call	_StackTrace_exit
	add	esp, 16					; 00000010H
; Line 2858
	mov	eax, DWORD PTR _rc$[ebp]
; Line 2859
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_waitForCompletion ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_setTraceLevel
EXTRN	_Log_setTraceLevel:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_level$ = 8						; size = 4
_MQTTAsync_setTraceLevel PROC
; Line 2864
	push	ebp
	mov	ebp, esp
; Line 2865
	mov	eax, DWORD PTR _level$[ebp]
	push	eax
	call	_Log_setTraceLevel
	add	esp, 4
; Line 2866
	pop	ebp
	ret	0
_MQTTAsync_setTraceLevel ENDP
_TEXT	ENDS
PUBLIC	_MQTTAsync_setTraceCallback
EXTRN	_Log_setTraceCallback:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_callback$ = 8						; size = 4
_MQTTAsync_setTraceCallback PROC
; Line 2870
	push	ebp
	mov	ebp, esp
; Line 2871
	mov	eax, DWORD PTR _callback$[ebp]
	push	eax
	call	_Log_setTraceCallback
	add	esp, 4
; Line 2872
	pop	ebp
	ret	0
_MQTTAsync_setTraceCallback ENDP
_TEXT	ENDS
_BSS	SEGMENT
?libinfo@?1??MQTTAsync_getVersionInfo@@9@9 DQ 09H DUP (?) ; `MQTTAsync_getVersionInfo'::`2'::libinfo
; Function compile flags: /Odtp
_BSS	ENDS
_TEXT	SEGMENT
_i$ = -4						; size = 4
_MQTTAsync_getVersionInfo PROC
; Line 2876
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2879
	mov	DWORD PTR _i$[ebp], 0
; Line 2881
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9[eax*8], OFFSET $SG86561
; Line 2882
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9[ecx*8+4], OFFSET $SG86562
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 2884
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9[eax*8], OFFSET $SG86563
; Line 2885
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9[ecx*8+4], OFFSET $SG86564
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 2887
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9[eax*8], OFFSET $SG86565
; Line 2888
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9[ecx*8+4], OFFSET $SG86566
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 2905
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9[eax*8], 0
; Line 2906
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9[ecx*8+4], 0
; Line 2907
	mov	eax, OFFSET ?libinfo@?1??MQTTAsync_getVersionInfo@@9@9
; Line 2908
	mov	esp, ebp
	pop	ebp
	ret	0
_MQTTAsync_getVersionInfo ENDP
_TEXT	ENDS
END
