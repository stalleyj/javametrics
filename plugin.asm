; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\test\plugin.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?callback@plugin@@3P6AXPAUmonitordata@@@ZA	; plugin::callback
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?running@plugin@@3_NA				; plugin::running
PUBLIC	?provid@plugin@@3IA				; plugin::provid
PUBLIC	?srcid@@3IA					; srcid
PUBLIC	?pushSrcIDStart@@3IA				; pushSrcIDStart
_BSS	SEGMENT
?callback@plugin@@3P6AXPAUmonitordata@@@ZA DD 01H DUP (?) ; plugin::callback
?running@plugin@@3_NA DB 01H DUP (?)			; plugin::running
	ALIGN	4

?provid@plugin@@3IA DD 01H DUP (?)			; plugin::provid
?srcid@@3IA DD	01H DUP (?)				; srcid
?pushSrcIDStart@@3IA DD 01H DUP (?)			; pushSrcIDStart
_BSS	ENDS
CONST	SEGMENT
$SG31956 DB	'TestPlugin', 00H
	ORG $+1
$SG31969 DB	'Description for ', 00H
	ORG $+3
$SG31977 DB	'Registering push sources', 00H
	ORG $+3
$SG31979 DB	'PushSource1', 00H
$SG31981 DB	'PushSource2', 00H
$SG31983 DB	'PushSource3', 00H
$SG32090 DB	'Generating data for pull from agent', 00H
$SG32108 DB	'Description for ', 00H
	ORG $+3
$SG32114 DB	'Registering pull sources', 00H
	ORG $+3
$SG32116 DB	'PullSource1', 00H
$SG32118 DB	'PullSource2', 00H
$SG32120 DB	'PullSource3', 00H
$SG32137 DB	'Starting', 00H
	ORG $+3
$SG32145 DB	'unable to create call back thread', 00H
	ORG $+2
$SG32149 DB	'Stopping', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??4Lock@port@common@ibmras@@QAEAAV0123@ABV0123@@Z ; ibmras::common::port::Lock::operator=
; Function compile flags: /Odtp
;	COMDAT ??4Lock@port@common@ibmras@@QAEAAV0123@ABV0123@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4Lock@port@common@ibmras@@QAEAAV0123@ABV0123@@Z PROC	; ibmras::common::port::Lock::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4Lock@port@common@ibmras@@QAEAAV0123@ABV0123@@Z ENDP	; ibmras::common::port::Lock::operator=
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_7Logger@common@ibmras@@6B@			; ibmras::common::Logger::`vftable'
PUBLIC	??0Logger@common@ibmras@@QAE@ABV012@@Z		; ibmras::common::Logger::Logger
PUBLIC	??_R4Logger@common@ibmras@@6B@			; ibmras::common::Logger::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLogger@common@ibmras@@@8		; ibmras::common::Logger `RTTI Type Descriptor'
PUBLIC	??_R3Logger@common@ibmras@@8			; ibmras::common::Logger::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Logger@common@ibmras@@8			; ibmras::common::Logger::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Logger@common@ibmras@@8		; ibmras::common::Logger::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ELogger@common@ibmras@@UAEPAXI@Z		; ibmras::common::Logger::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@Logger@common@ibmras@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Logger@common@ibmras@@8 DD FLAT:??_R0?AVLogger@common@ibmras@@@8 ; ibmras::common::Logger::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Logger@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R2Logger@common@ibmras@@8
rdata$r	SEGMENT
??_R2Logger@common@ibmras@@8 DD FLAT:??_R1A@?0A@EA@Logger@common@ibmras@@8 ; ibmras::common::Logger::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Logger@common@ibmras@@8
rdata$r	SEGMENT
??_R3Logger@common@ibmras@@8 DD 00H			; ibmras::common::Logger::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Logger@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLogger@common@ibmras@@@8
_DATA	SEGMENT
??_R0?AVLogger@common@ibmras@@@8 DD FLAT:??_7type_info@@6B@ ; ibmras::common::Logger `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLogger@common@ibmras@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Logger@common@ibmras@@6B@
rdata$r	SEGMENT
??_R4Logger@common@ibmras@@6B@ DD 00H			; ibmras::common::Logger::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLogger@common@ibmras@@@8
	DD	FLAT:??_R3Logger@common@ibmras@@8
rdata$r	ENDS
;	COMDAT ??_7Logger@common@ibmras@@6B@
CONST	SEGMENT
??_7Logger@common@ibmras@@6B@ DD FLAT:??_R4Logger@common@ibmras@@6B@ ; ibmras::common::Logger::`vftable'
	DD	FLAT:??_ELogger@common@ibmras@@UAEPAXI@Z
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0Logger@common@ibmras@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0Logger@common@ibmras@@QAE@ABV012@@Z PROC		; ibmras::common::Logger::Logger, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Logger@common@ibmras@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [edx+40], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0Logger@common@ibmras@@QAE@ABV012@@Z ENDP		; ibmras::common::Logger::Logger
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??4Logger@common@ibmras@@QAEAAV012@ABV012@@Z	; ibmras::common::Logger::operator=
; Function compile flags: /Odtp
;	COMDAT ??4Logger@common@ibmras@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4Logger@common@ibmras@@QAEAAV012@ABV012@@Z PROC	; ibmras::common::Logger::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4Logger@common@ibmras@@QAEAAV012@ABV012@@Z ENDP	; ibmras::common::Logger::operator=
_TEXT	ENDS
PUBLIC	??_GLogger@common@ibmras@@UAEPAXI@Z		; ibmras::common::Logger::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1Logger@common@ibmras@@UAE@XZ:PROC		; ibmras::common::Logger::~Logger
; Function compile flags: /Odtp
;	COMDAT ??_GLogger@common@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLogger@common@ibmras@@UAEPAXI@Z PROC		; ibmras::common::Logger::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Logger@common@ibmras@@UAE@XZ		; ibmras::common::Logger::~Logger
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLogger@common@ibmras@@UAEPAXI@Z ENDP		; ibmras::common::Logger::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp
;	COMDAT ??_ELogger@common@ibmras@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_ELogger@common@ibmras@@UAEPAXI@Z PROC		; ibmras::common::Logger::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1Logger@common@ibmras@@UAE@XZ	; ibmras::common::Logger::~Logger
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	44					; 0000002cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Logger@common@ibmras@@UAE@XZ		; ibmras::common::Logger::~Logger
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	esp, ebp
	pop	ebp
	ret	4
??_ELogger@common@ibmras@@UAEPAXI@Z ENDP		; ibmras::common::Logger::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	??1LogManager@common@ibmras@@QAE@XZ		; ibmras::common::LogManager::~LogManager
; Function compile flags: /Odtp
;	COMDAT ??1LogManager@common@ibmras@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LogManager@common@ibmras@@QAE@XZ PROC		; ibmras::common::LogManager::~LogManager, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1LogManager@common@ibmras@@QAE@XZ ENDP		; ibmras::common::LogManager::~LogManager
_TEXT	ENDS
PUBLIC	??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	??0LogManager@common@ibmras@@QAE@ABV012@@Z	; ibmras::common::LogManager::LogManager
; Function compile flags: /Odtp
;	COMDAT ??0LogManager@common@ibmras@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0LogManager@common@ibmras@@QAE@ABV012@@Z PROC		; ibmras::common::LogManager::LogManager, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0LogManager@common@ibmras@@QAE@ABV012@@Z ENDP		; ibmras::common::LogManager::LogManager
_TEXT	ENDS
PUBLIC	??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::operator=
PUBLIC	??4LogManager@common@ibmras@@QAEAAV012@ABV012@@Z ; ibmras::common::LogManager::operator=
; Function compile flags: /Odtp
;	COMDAT ??4LogManager@common@ibmras@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4LogManager@common@ibmras@@QAEAAV012@ABV012@@Z PROC	; ibmras::common::LogManager::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::operator=
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4LogManager@common@ibmras@@QAEAAV012@ABV012@@Z ENDP	; ibmras::common::LogManager::operator=
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
PUBLIC	?createPushSource@@YAPAUpushsource@@IPBD@Z	; createPushSource
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
xdata$x	SEGMENT
__unwindtable$?createPushSource@@YAPAUpushsource@@IPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createPushSource@@YAPAUpushsource@@IPBD@Z$0
__ehfuncinfo$?createPushSource@@YAPAUpushsource@@IPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createPushSource@@YAPAUpushsource@@IPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv67 = -64						; size = 4
$T38313 = -60						; size = 4
$T38310 = -56						; size = 4
$T38309 = -52						; size = 4
_src$ = -48						; size = 4
_desc$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_srcid$ = 8						; size = 4
_name$ = 12						; size = 4
?createPushSource@@YAPAUpushsource@@IPBD@Z PROC		; createPushSource
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\test\plugin.cpp
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createPushSource@@YAPAUpushsource@@IPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 37
	mov	DWORD PTR $T38309[ebp], 20		; 00000014H
	mov	eax, DWORD PTR $T38309[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T38310[ebp], eax
	cmp	DWORD PTR $T38310[ebp], 0
	je	SHORT $LN3@createPush
	mov	ecx, DWORD PTR $T38309[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR $T38310[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR $T38310[ebp]
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN4@createPush
$LN3@createPush:
	mov	DWORD PTR tv67[ebp], 0
$LN4@createPush:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _src$[ebp], ecx
; Line 38
	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 39
	push	OFFSET $SG31969
	lea	ecx, DWORD PTR _desc$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 40
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _desc$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 41
	lea	ecx, DWORD PTR _desc$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 42
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR _srcid$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 43
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 44
	mov	ecx, DWORD PTR _srcid$[ebp]
	add	ecx, 1
	mov	eax, 10240				; 00002800H
	xor	edx, edx
	div	ecx
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 45
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR $T38313[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _desc$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T38313[ebp]
; Line 46
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?createPushSource@@YAPAUpushsource@@IPBD@Z$0:
	lea	ecx, DWORD PTR _desc$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?createPushSource@@YAPAUpushsource@@IPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createPushSource@@YAPAUpushsource@@IPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createPushSource@@YAPAUpushsource@@IPBD@Z ENDP		; createPushSource
PUBLIC	?ibmras_monitoring_registerPushSource@@YAPAUpushsource@@P6AXPAUmonitordata@@@ZI@Z ; ibmras_monitoring_registerPushSource
EXTRN	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ:PROC ; ibmras::common::Logger::debug
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv82 = -24						; size = 4
tv77 = -20						; size = 4
tv72 = -16						; size = 4
_src$ = -12						; size = 4
_head$ = -8						; size = 4
_src2$ = -4						; size = 4
_callback$ = 8						; size = 4
_provID$ = 12						; size = 4
?ibmras_monitoring_registerPushSource@@YAPAUpushsource@@P6AXPAUmonitordata@@@ZI@Z PROC ; ibmras_monitoring_registerPushSource
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 53
	mov	eax, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	cmp	DWORD PTR [eax+8], 2
	jl	SHORT $LN1@ibmras_mon
	push	OFFSET $SG31977
	push	2
	mov	ecx, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN1@ibmras_mon:
; Line 54
	mov	edx, DWORD PTR ?srcid@@3IA		; srcid
	mov	DWORD PTR tv72[ebp], edx
	mov	eax, DWORD PTR ?srcid@@3IA		; srcid
	add	eax, 1
	mov	DWORD PTR ?srcid@@3IA, eax		; srcid
	push	OFFSET $SG31979
	mov	ecx, DWORD PTR tv72[ebp]
	push	ecx
	call	?createPushSource@@YAPAUpushsource@@IPBD@Z ; createPushSource
	add	esp, 8
	mov	DWORD PTR _head$[ebp], eax
; Line 55
	mov	edx, DWORD PTR ?srcid@@3IA		; srcid
	mov	DWORD PTR tv77[ebp], edx
	mov	eax, DWORD PTR ?srcid@@3IA		; srcid
	add	eax, 1
	mov	DWORD PTR ?srcid@@3IA, eax		; srcid
	push	OFFSET $SG31981
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	call	?createPushSource@@YAPAUpushsource@@IPBD@Z ; createPushSource
	add	esp, 8
	mov	DWORD PTR _src$[ebp], eax
; Line 56
	mov	edx, DWORD PTR ?srcid@@3IA		; srcid
	mov	DWORD PTR tv82[ebp], edx
	mov	eax, DWORD PTR ?srcid@@3IA		; srcid
	add	eax, 1
	mov	DWORD PTR ?srcid@@3IA, eax		; srcid
	push	OFFSET $SG31983
	mov	ecx, DWORD PTR tv82[ebp]
	push	ecx
	call	?createPushSource@@YAPAUpushsource@@IPBD@Z ; createPushSource
	add	esp, 8
	mov	DWORD PTR _src2$[ebp], eax
; Line 57
	mov	edx, DWORD PTR _head$[ebp]
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 58
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR _src2$[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 59
	mov	eax, DWORD PTR _callback$[ebp]
	mov	DWORD PTR ?callback@plugin@@3P6AXPAUmonitordata@@@ZA, eax ; plugin::callback
; Line 60
	mov	ecx, DWORD PTR _provID$[ebp]
	mov	DWORD PTR ?provid@plugin@@3IA, ecx	; plugin::provid
; Line 61
	mov	eax, DWORD PTR _head$[ebp]
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	0
?ibmras_monitoring_registerPushSource@@YAPAUpushsource@@P6AXPAUmonitordata@@@ZI@Z ENDP ; ibmras_monitoring_registerPushSource
_TEXT	ENDS
PUBLIC	?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
PUBLIC	?generateData@@YAPAUmonitordata@@I@Z		; generateData
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
;	COMDAT ?id@?1??generateData@@YAPAUmonitordata@@I@Z@4IA
_BSS	SEGMENT
?id@?1??generateData@@YAPAUmonitordata@@I@Z@4IA DD 01H DUP (?) ; `generateData'::`2'::id
_BSS	ENDS
xdata$x	SEGMENT
__unwindtable$?generateData@@YAPAUmonitordata@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?generateData@@YAPAUmonitordata@@I@Z$0
__ehfuncinfo$?generateData@@YAPAUmonitordata@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?generateData@@YAPAUmonitordata@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T38330 = -68						; size = 4
$T38329 = -64						; size = 4
$T38328 = -60						; size = 4
_str$ = -56						; size = 28
__$ArrayPad$ = -28					; size = 4
_buffer$ = -24						; size = 4
_data$ = -20						; size = 4
_size$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_srcOffset$ = 8						; size = 4
?generateData@@YAPAUmonitordata@@I@Z PROC		; generateData
; Line 64
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?generateData@@YAPAUmonitordata@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 66
	mov	DWORD PTR _size$[ebp], 1024		; 00000400H
; Line 67
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T38328[ebp], eax
	mov	eax, DWORD PTR $T38328[ebp]
	mov	DWORD PTR _data$[ebp], eax
; Line 68
	mov	ecx, DWORD PTR _data$[ebp]
	mov	BYTE PTR [ecx+16], 0
; Line 69
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 70
	push	1024					; 00000400H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T38329[ebp], eax
	mov	edx, DWORD PTR $T38329[ebp]
	mov	DWORD PTR _buffer$[ebp], edx
; Line 71
	push	120					; 00000078H
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _str$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 72
	push	0
	push	1024					; 00000400H
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy
; Line 73
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR ?provid@plugin@@3IA	; plugin::provid
	mov	DWORD PTR [ecx], edx
; Line 74
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 75
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx+8], 1024			; 00000400H
; Line 76
	mov	eax, DWORD PTR ?id@?1??generateData@@YAPAUmonitordata@@I@Z@4IA
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	add	edx, DWORD PTR _srcOffset$[ebp]
	mov	DWORD PTR ?id@?1??generateData@@YAPAUmonitordata@@I@Z@4IA, edx
; Line 77
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR ?id@?1??generateData@@YAPAUmonitordata@@I@Z@4IA
	mov	DWORD PTR [edx+4], eax
; Line 78
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR $T38330[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T38330[ebp]
; Line 79
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?generateData@@YAPAUmonitordata@@I@Z$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?generateData@@YAPAUmonitordata@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?generateData@@YAPAUmonitordata@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?generateData@@YAPAUmonitordata@@I@Z ENDP		; generateData
PUBLIC	?pullCallback@@YAPAUmonitordata@@XZ		; pullCallback
EXTRN	?release@Lock@port@common@ibmras@@QAEHXZ:PROC	; ibmras::common::port::Lock::release
EXTRN	?acquire@Lock@port@common@ibmras@@QAEHXZ:PROC	; ibmras::common::port::Lock::acquire
; Function compile flags: /Odtp
_TEXT	SEGMENT
_data$ = -4						; size = 4
?pullCallback@@YAPAUmonitordata@@XZ PROC		; pullCallback
; Line 81
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 82
	mov	ecx, DWORD PTR ?lock@plugin@@3PAVLock@port@common@ibmras@@A ; plugin::lock
	call	?acquire@Lock@port@common@ibmras@@QAEHXZ ; ibmras::common::port::Lock::acquire
; Line 83
	mov	eax, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	cmp	DWORD PTR [eax+8], 3
	jl	SHORT $LN1@pullCallba
	push	OFFSET $SG32090
	push	3
	mov	ecx, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN1@pullCallba:
; Line 84
	mov	edx, DWORD PTR ?pushSrcIDStart@@3IA	; pushSrcIDStart
	push	edx
	call	?generateData@@YAPAUmonitordata@@I@Z	; generateData
	add	esp, 4
	mov	DWORD PTR _data$[ebp], eax
; Line 85
	mov	ecx, DWORD PTR ?lock@plugin@@3PAVLock@port@common@ibmras@@A ; plugin::lock
	call	?release@Lock@port@common@ibmras@@QAEHXZ ; ibmras::common::port::Lock::release
; Line 86
	mov	eax, DWORD PTR _data$[ebp]
; Line 87
	mov	esp, ebp
	pop	ebp
	ret	0
?pullCallback@@YAPAUmonitordata@@XZ ENDP		; pullCallback
_TEXT	ENDS
PUBLIC	?pullComplete@@YAXPAUmonitordata@@@Z		; pullComplete
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T38340 = -8						; size = 4
$T38339 = -4						; size = 4
_data$ = 8						; size = 4
?pullComplete@@YAXPAUmonitordata@@@Z PROC		; pullComplete
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 90
	cmp	DWORD PTR _data$[ebp], 0
	je	SHORT $LN3@pullComple
; Line 91
	mov	eax, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@pullComple
; Line 92
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T38339[ebp], edx
	mov	eax, DWORD PTR $T38339[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@pullComple:
; Line 94
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR $T38340[ebp], ecx
	mov	edx, DWORD PTR $T38340[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3@pullComple:
; Line 96
	mov	esp, ebp
	pop	ebp
	ret	0
?pullComplete@@YAXPAUmonitordata@@@Z ENDP		; pullComplete
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?createPullSource@@YAPAUpullsource@@IPBD@Z	; createPullSource
xdata$x	SEGMENT
__unwindtable$?createPullSource@@YAPAUpullsource@@IPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createPullSource@@YAPAUpullsource@@IPBD@Z$0
__ehfuncinfo$?createPullSource@@YAPAUpullsource@@IPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createPullSource@@YAPAUpullsource@@IPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv67 = -64						; size = 4
$T38347 = -60						; size = 4
$T38344 = -56						; size = 4
$T38343 = -52						; size = 4
_src$ = -48						; size = 4
_desc$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_srcid$ = 8						; size = 4
_name$ = 12						; size = 4
?createPullSource@@YAPAUpullsource@@IPBD@Z PROC		; createPullSource
; Line 98
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createPullSource@@YAPAUpullsource@@IPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 99
	mov	DWORD PTR $T38343[ebp], 32		; 00000020H
	mov	eax, DWORD PTR $T38343[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T38344[ebp], eax
	cmp	DWORD PTR $T38344[ebp], 0
	je	SHORT $LN3@createPull
	mov	ecx, DWORD PTR $T38343[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR $T38344[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR $T38344[ebp]
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN4@createPull
$LN3@createPull:
	mov	DWORD PTR tv67[ebp], 0
$LN4@createPull:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _src$[ebp], ecx
; Line 100
	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 101
	push	OFFSET $SG32108
	lea	ecx, DWORD PTR _desc$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 102
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _desc$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 103
	lea	ecx, DWORD PTR _desc$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 104
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR _srcid$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 105
	mov	ecx, DWORD PTR _srcid$[ebp]
	add	ecx, 1
	mov	eax, 10240				; 00002800H
	xor	edx, edx
	div	ecx
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 106
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 107
	mov	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [ecx+24], OFFSET ?pullCallback@@YAPAUmonitordata@@XZ ; pullCallback
; Line 108
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+28], OFFSET ?pullComplete@@YAXPAUmonitordata@@@Z ; pullComplete
; Line 109
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR _srcid$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 110
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR $T38347[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _desc$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T38347[ebp]
; Line 111
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?createPullSource@@YAPAUpullsource@@IPBD@Z$0:
	lea	ecx, DWORD PTR _desc$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?createPullSource@@YAPAUpullsource@@IPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createPullSource@@YAPAUpullsource@@IPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createPullSource@@YAPAUpullsource@@IPBD@Z ENDP		; createPullSource
PUBLIC	?ibmras_monitoring_registerPullSource@@YAPAUpullsource@@I@Z ; ibmras_monitoring_registerPullSource
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv82 = -24						; size = 4
tv77 = -20						; size = 4
tv72 = -16						; size = 4
_src$ = -12						; size = 4
_head$ = -8						; size = 4
_src2$ = -4						; size = 4
_provID$ = 8						; size = 4
?ibmras_monitoring_registerPullSource@@YAPAUpullsource@@I@Z PROC ; ibmras_monitoring_registerPullSource
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 118
	mov	eax, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	cmp	DWORD PTR [eax+8], 2
	jl	SHORT $LN1@ibmras_mon@2
	push	OFFSET $SG32114
	push	2
	mov	ecx, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN1@ibmras_mon@2:
; Line 119
	mov	edx, DWORD PTR ?srcid@@3IA		; srcid
	mov	DWORD PTR ?pushSrcIDStart@@3IA, edx	; pushSrcIDStart
; Line 120
	mov	eax, DWORD PTR ?srcid@@3IA		; srcid
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR ?srcid@@3IA		; srcid
	add	ecx, 1
	mov	DWORD PTR ?srcid@@3IA, ecx		; srcid
	push	OFFSET $SG32116
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	call	?createPullSource@@YAPAUpullsource@@IPBD@Z ; createPullSource
	add	esp, 8
	mov	DWORD PTR _head$[ebp], eax
; Line 121
	mov	eax, DWORD PTR ?srcid@@3IA		; srcid
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR ?srcid@@3IA		; srcid
	add	ecx, 1
	mov	DWORD PTR ?srcid@@3IA, ecx		; srcid
	push	OFFSET $SG32118
	mov	edx, DWORD PTR tv77[ebp]
	push	edx
	call	?createPullSource@@YAPAUpullsource@@IPBD@Z ; createPullSource
	add	esp, 8
	mov	DWORD PTR _src$[ebp], eax
; Line 122
	mov	eax, DWORD PTR ?srcid@@3IA		; srcid
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR ?srcid@@3IA		; srcid
	add	ecx, 1
	mov	DWORD PTR ?srcid@@3IA, ecx		; srcid
	push	OFFSET $SG32120
	mov	edx, DWORD PTR tv82[ebp]
	push	edx
	call	?createPullSource@@YAPAUpullsource@@IPBD@Z ; createPullSource
	add	esp, 8
	mov	DWORD PTR _src2$[ebp], eax
; Line 123
	mov	eax, DWORD PTR _head$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 124
	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR _src2$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 125
	mov	eax, DWORD PTR _head$[ebp]
; Line 126
	mov	esp, ebp
	pop	ebp
	ret	0
?ibmras_monitoring_registerPullSource@@YAPAUpullsource@@I@Z ENDP ; ibmras_monitoring_registerPullSource
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z ; callback
EXTRN	?exitThread@port@common@ibmras@@YAXPAX@Z:PROC	; ibmras::common::port::exitThread
EXTRN	?sleep@port@common@ibmras@@YAXI@Z:PROC		; ibmras::common::port::sleep
xdata$x	SEGMENT
__unwindtable$?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z$0
__ehfuncinfo$?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T38356 = -1100						; size = 4
_str$ = -1096						; size = 28
_buffer$ = -1068					; size = 1024
__$ArrayPad$ = -44					; size = 4
_data$ = -40						; size = 20
_size$ = -20						; size = 4
_id$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_param$ = 8						; size = 4
?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z PROC ; callback
; Line 129
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1088				; 00000440H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 130
	mov	DWORD PTR _size$[ebp], 1024		; 00000400H
; Line 132
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 134
	push	120					; 00000078H
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _str$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 135
	push	0
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy
; Line 136
	mov	BYTE PTR _data$[ebp+16], 0
; Line 137
	mov	ecx, DWORD PTR ?provid@plugin@@3IA	; plugin::provid
	mov	DWORD PTR _data$[ebp], ecx
; Line 138
	mov	DWORD PTR _id$[ebp], 0
; Line 139
	lea	edx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _data$[ebp+12], edx
; Line 140
	mov	DWORD PTR _data$[ebp+8], 1024		; 00000400H
$LN2@callback:
; Line 141
	movzx	eax, BYTE PTR ?running@plugin@@3_NA	; plugin::running
	test	eax, eax
	je	SHORT $LN1@callback
; Line 142
	push	1
	call	?sleep@port@common@ibmras@@YAXI@Z	; ibmras::common::port::sleep
	add	esp, 4
; Line 143
	mov	eax, DWORD PTR _id$[ebp]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	DWORD PTR _id$[ebp], edx
; Line 144
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR _data$[ebp+4], edx
; Line 145
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	call	DWORD PTR ?callback@plugin@@3P6AXPAUmonitordata@@@ZA ; plugin::callback
	add	esp, 4
; Line 146
	jmp	SHORT $LN2@callback
$LN1@callback:
; Line 147
	push	0
	call	?exitThread@port@common@ibmras@@YAXPAX@Z ; ibmras::common::port::exitThread
	add	esp, 4
; Line 148
	mov	DWORD PTR $T38356[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T38356[ebp]
; Line 149
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1092]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z ENDP ; callback
PUBLIC	?ibmras_monitoring_plugin_start@@YAHXZ		; ibmras_monitoring_plugin_start
EXTRN	?createThread@port@common@ibmras@@YAIPAVThreadData@123@@Z:PROC ; ibmras::common::port::createThread
EXTRN	??0ThreadData@port@common@ibmras@@QAE@P6APAXPAV0123@@Z@Z:PROC ; ibmras::common::port::ThreadData::ThreadData
xdata$x	SEGMENT
__unwindtable$?ibmras_monitoring_plugin_start@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ibmras_monitoring_plugin_start@@YAHXZ$0
__ehfuncinfo$?ibmras_monitoring_plugin_start@@YAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ibmras_monitoring_plugin_start@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv77 = -32						; size = 4
$T38364 = -28						; size = 4
$T38363 = -24						; size = 4
_result$ = -20						; size = 4
_data$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ibmras_monitoring_plugin_start@@YAHXZ PROC		; ibmras_monitoring_plugin_start
; Line 151
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ibmras_monitoring_plugin_start@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 152
	mov	DWORD PTR _result$[ebp], 0
; Line 153
	mov	eax, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	cmp	DWORD PTR [eax+8], 2
	jl	SHORT $LN3@ibmras_mon@3
	push	OFFSET $SG32137
	push	2
	mov	ecx, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN3@ibmras_mon@3:
; Line 154
	mov	BYTE PTR ?running@plugin@@3_NA, 1	; plugin::running
; Line 155
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T38364[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T38364[ebp], 0
	je	SHORT $LN6@ibmras_mon@3
	push	OFFSET ?callback@@YAPAXPAVThreadData@port@common@ibmras@@@Z ; callback
	mov	ecx, DWORD PTR $T38364[ebp]
	call	??0ThreadData@port@common@ibmras@@QAE@P6APAXPAV0123@@Z@Z ; ibmras::common::port::ThreadData::ThreadData
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN7@ibmras_mon@3
$LN6@ibmras_mon@3:
	mov	DWORD PTR tv77[ebp], 0
$LN7@ibmras_mon@3:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T38363[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T38363[ebp]
	mov	DWORD PTR _data$[ebp], eax
; Line 156
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	?createThread@port@common@ibmras@@YAIPAVThreadData@123@@Z ; ibmras::common::port::createThread
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 157
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN2@ibmras_mon@3
; Line 158
	mov	edx, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	cmp	DWORD PTR [edx+8], 1
	jl	SHORT $LN2@ibmras_mon@3
	push	OFFSET $SG32145
	push	1
	mov	eax, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	push	eax
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN2@ibmras_mon@3:
; Line 160
	xor	eax, eax
; Line 161
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ibmras_monitoring_plugin_start@@YAHXZ$0:
	mov	eax, DWORD PTR $T38364[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?ibmras_monitoring_plugin_start@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ibmras_monitoring_plugin_start@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ibmras_monitoring_plugin_start@@YAHXZ ENDP		; ibmras_monitoring_plugin_start
PUBLIC	?ibmras_monitoring_plugin_stop@@YAHXZ		; ibmras_monitoring_plugin_stop
; Function compile flags: /Odtp
_TEXT	SEGMENT
?ibmras_monitoring_plugin_stop@@YAHXZ PROC		; ibmras_monitoring_plugin_stop
; Line 163
	push	ebp
	mov	ebp, esp
; Line 164
	mov	eax, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	cmp	DWORD PTR [eax+8], 2
	jl	SHORT $LN1@ibmras_mon@4
	push	OFFSET $SG32149
	push	2
	mov	ecx, DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A ; logger
	push	ecx
	call	?debug@Logger@common@ibmras@@QAAXW4Level@logging@23@PBDZZ ; ibmras::common::Logger::debug
	add	esp, 12					; 0000000cH
$LN1@ibmras_mon@4:
; Line 165
	mov	BYTE PTR ?running@plugin@@3_NA, 0	; plugin::running
; Line 166
	xor	eax, eax
; Line 168
	pop	ebp
	ret	0
?ibmras_monitoring_plugin_stop@@YAHXZ ENDP		; ibmras_monitoring_plugin_stop
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T38374 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 24					; 00000018H
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T38374[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 544
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 545
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	ecx
	push	0
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 546
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T38384 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T38384[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 551
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 552
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T38394 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T38394[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 593
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 594
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 595
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 752
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 753
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 754
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 762
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 763
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 764
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 838
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 841
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 490
	push	ebp
	mov	ebp, esp
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
; Line 492
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 844
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 845
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append
; Line 846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:
; Line 849
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@append
; Line 851
	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Line 852
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append:
; Line 854
	mov	eax, DWORD PTR _this$[ebp]
$LN4@append:
; Line 855
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
; Function compile flags: /Odtp
;	COMDAT ?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Off$ = 16						; size = 4
?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy, COMDAT
; _this$ = ecx
; Line 1557
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1563
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN2@copy
; Line 1564
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN2@copy:
; Line 1565
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@copy
; Line 1566
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN1@copy:
; Line 1567
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1568
	mov	eax, DWORD PTR __Count$[ebp]
$LN4@copy:
; Line 1569
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPADII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::copy
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 496
	push	ebp
	mov	ebp, esp
; Line 497
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 498
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > > >
PUBLIC	?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
PUBLIC	?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
PUBLIC	?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy
PUBLIC	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
PUBLIC	??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__catchsym$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$3
__unwindtable$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv157 = -44						; size = 4
tv156 = -40						; size = 4
tv69 = -36						; size = 4
_this$ = -32						; size = 4
$T38429 = -28						; size = 4
$T38428 = -24						; size = 4
$T38427 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >, COMDAT
; _this$ = ecx
; Line 535
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T38427[ebp], esp
	push	eax
	call	??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 536
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@vector@2
; Line 537
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 539
	lea	edx, DWORD PTR $T38428[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
	mov	DWORD PTR tv69[ebp], eax
	lea	eax, DWORD PTR $T38429[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR tv156[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > > >
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR [ecx+4], edx
	jmp	SHORT $LN5@vector@2
__catch$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$0:
; Line 541
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy
; Line 542
	push	0
	push	0
	call	__CxxThrowException@8
; Line 543
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN3@vector@2
	ret	0
$LN5@vector@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector@2:
; Line 544
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
__ehhandler$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
__ehhandler$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
PUBLIC	?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::deallocate
PUBLIC	??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>
PUBLIC	?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::capacity
PUBLIC	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
PUBLIC	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
PUBLIC	?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::clear
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Ptr$33823 = -8					; size = 4
__Ptr$33813 = -4					; size = 4
__Right$ = 8						; size = 4
??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::operator=, COMDAT
; _this$ = ecx
; Line 709
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 710
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN9@operator
; Line 712
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 714
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	test	eax, eax
	jne	SHORT $LN8@operator
; Line 715
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::clear
	jmp	$LN9@operator
$LN8@operator:
; Line 716
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	cmp	esi, eax
	ja	SHORT $LN6@operator
; Line 719
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$33813[ebp], eax
; Line 720
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$33813[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Line 721
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	jmp	$LN9@operator
$LN6@operator:
; Line 723
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::capacity
	cmp	esi, eax
	ja	SHORT $LN4@operator
; Line 725
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	mov	edx, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Ptr$33823[ebp], edx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Ptr$33823[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 12					; 0000000cH
; Line 727
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$33823[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 729
	jmp	SHORT $LN9@operator
$LN4@operator:
; Line 731
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@operator
; Line 733
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Line 735
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::deallocate
$LN2@operator:
; Line 737
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@operator
; Line 739
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN9@operator:
; Line 742
	mov	eax, DWORD PTR _this$[ebp]
; Line 743
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::operator=
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 817
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 823
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@append@2
; Line 824
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	SHORT $LN5@append@2
$LN3@append@2:
; Line 825
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append@2
; Line 826
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append@2:
; Line 829
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@append@2
; Line 831
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+16]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 832
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append@2:
; Line 834
	mov	eax, DWORD PTR _this$[ebp]
$LN5@append@2:
; Line 835
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 886
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 888
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 893
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 894
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 895
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 897
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 899
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 900
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 901
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign
; Line 903
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 904
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 906
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 907
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 1512
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 930
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 931
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAPADPADID@Z	; std::char_traits<char>::assign
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Odtp
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT
; _this$ = ecx
; Line 1910
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1911
	cmp	DWORD PTR __Count$[ebp], 1
	jne	SHORT $LN2@Chassign
; Line 1912
	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 1913
	jmp	SHORT $LN3@Chassign
$LN2@Chassign:
; Line 1914
	movzx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAPADPADID@Z ; std::char_traits<char>::assign
	add	esp, 12					; 0000000cH
$LN3@Chassign:
; Line 1915
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@D@std@@SAPADPADID@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$char_traits@D@std@@SAPADPADID@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
; Line 522
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	movsx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 523
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAPADPADID@Z ENDP		; std::char_traits<char>::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T38474 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1952
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1953
	mov	BYTE PTR $T38474[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T38474[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 1954
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; Line 1958
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1959
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 1960
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 1961
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 1962
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 1963
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 1965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 1966
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 1967
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 1968
	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax
$LN8@Grow:
; Line 1969
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$34035 = -4					; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1987
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1988
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 1990
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 1992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$34035[ebp], eax
; Line 1993
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 1994
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$34035[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 1995
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Ptr$34035[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN3@Tidy:
; Line 1997
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; Line 1998
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1999
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv80[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv80[ebp]
; Line 2011
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2015
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen:
; Line 2016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2019
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2020
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN2@Xran:
; Line 2021
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 454
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 458
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::capacity
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin, COMDAT
; _this$ = ecx
; Line 786
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 787
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 788
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end, COMDAT
; _this$ = ecx
; Line 796
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 797
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 798
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::size
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::erase
PUBLIC	?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
PUBLIC	?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T38511 = -20						; size = 4
$T38510 = -16						; size = 4
$T38509 = -12						; size = 4
$T38508 = -8						; size = 4
$T38507 = -4						; size = 4
?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::clear, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1218
	lea	eax, DWORD PTR $T38508[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T38507[ebp], ecx
	lea	edx, DWORD PTR $T38510[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T38509[ebp], eax
	mov	ecx, DWORD PTR $T38507[ebp]
	push	ecx
	mov	edx, DWORD PTR $T38509[ebp]
	push	edx
	lea	eax, DWORD PTR $T38511[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::erase
; Line 1219
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAEXXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::clear
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::allocate
PUBLIC	?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Xlen
PUBLIC	?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::max_size
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy, COMDAT
; _this$ = ecx
; Line 1250
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 1253
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1255
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1256
	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1257
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Xlen
; Line 1259
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1261
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1262
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], ecx
; Line 1263
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN3@Buy:
; Line 1265
	mov	al, 1
$LN6@Buy:
; Line 1266
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Buy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@2
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z ; std::allocator<ibmras::common::Logger *>::deallocate
$LN1@Tidy@2:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z PROC ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >, COMDAT
; _this$ = ecx
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@V?$allocator@PAVLogger@common@ibmras@@@1@@Z ENDP ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >, COMDAT
; _this$ = ecx
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::~_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z PROC ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVLogger@common@ibmras@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<ibmras::common::Logger *>::allocator<ibmras::common::Logger *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z PROC ; std::allocator<ibmras::common::Logger *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@I@Z ENDP ; std::allocator<ibmras::common::Logger *>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 798
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 799
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN4@append@3
; Line 800
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@append@3:
; Line 801
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 802
	mov	eax, DWORD PTR __Num$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@append@3
; Line 803
	mov	ecx, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN3@append@3:
; Line 804
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append@3
; Line 805
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append@3:
; Line 807
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], edx
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@append@3
; Line 810
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 811
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append@3:
; Line 813
	mov	eax, DWORD PTR _this$[ebp]
$LN6@append@3:
; Line 814
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 910
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 916
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@2
; Line 917
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign@2
$LN2@assign@2:
; Line 919
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign@2
; Line 921
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 922
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign@2:
; Line 924
	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign@2:
; Line 925
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newsize$35068 = -4					; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; Line 1108
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase
; Line 1110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@erase:
; Line 1111
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase
; Line 1112
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN2@erase:
; Line 1113
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1117
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$35068[ebp], eax
; Line 1118
	mov	ecx, DWORD PTR __Newsize$35068[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@erase:
; Line 1120
	mov	eax, DWORD PTR _this$[ebp]
$LN5@erase:
; Line 1121
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 516
	push	ebp
	mov	ebp, esp
; Line 517
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 518
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1516
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1517
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv73[ebp]
; Line 1518
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv184 = -36						; size = 4
tv183 = -32						; size = 4
_this$ = -28						; size = 4
__Newres$ = -24						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1920
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 1921
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 1922
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 1924
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy
; Line 1926
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1927
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 1928
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 1931
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1932
	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1933
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1934
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 1935
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1936
	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv184[ebp], eax
	mov	eax, DWORD PTR tv184[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1938
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1939
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1940
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 1941
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 1943
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 1944
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 1945
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1946
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1947
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 1948
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; Line 1972
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1973
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 1974
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 1975
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 1976
	mov	al, 1
$LN4@Inside:
; Line 1977
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2002
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2004
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv80[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv80[ebp]
; Line 2005
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@XZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::end
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ ; std::allocator<ibmras::common::Logger *>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ ; std::allocator<ibmras::common::Logger *>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBEIXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::max_size
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=
PUBLIC	?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T38574 = -16						; size = 4
__Ptr$35490 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::erase, COMDAT
; _this$ = ecx
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	mov	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
; Line 1192
	mov	edx, DWORD PTR __Last_arg$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
; Line 1194
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase@2
; Line 1207
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$35490[ebp], eax
; Line 1210
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$35490[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEXPAPAVLogger@common@ibmras@@0@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Destroy
; Line 1211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$35490[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@erase@2:
; Line 1213
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T38574[ebp], eax
	mov	ecx, DWORD PTR $T38574[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1214
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@0@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::erase
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@2:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IBEXXZ ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Xlen
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z ; std::_Allocate<ibmras::common::Logger *>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z PROC ; std::allocator<ibmras::common::Logger *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z ; std::_Allocate<ibmras::common::Logger *>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVLogger@common@ibmras@@@std@@QAEPAPAVLogger@common@ibmras@@I@Z ENDP ; std::allocator<ibmras::common::Logger *>::allocate
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], -1
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 803
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@2@@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Make_iter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ PROC ; std::allocator<ibmras::common::Logger *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@3
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@3
$LN3@max_size@3:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@3:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVLogger@common@ibmras@@@std@@QBEIXZ ENDP ; std::allocator<ibmras::common::Logger *>::max_size
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAE@PAPAVLogger@common@ibmras@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Vector_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Compat
; Function compile flags: /Odtp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator==, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Compat, COMDAT
; _this$ = ecx
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::_Compat
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > > >, COMDAT
; _this$ = ecx
; Line 1315
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
	add	esp, 16					; 00000010H
; Line 1319
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@1@0PAPAV234@@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > > >
_TEXT	ENDS
PUBLIC	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
PUBLIC	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
; Function compile flags: /Odtp
;	COMDAT ??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z
_TEXT	SEGMENT
$T38607 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z PROC ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2163
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2165
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 8
	mov	BYTE PTR $T38607[ebp], al
	movzx	edx, BYTE PTR $T38607[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 16					; 00000010H
; Line 2166
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ENDP ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Uninitialized_copy<ibmras::common::Logger * *,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z PROC ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1315
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ; std::_Uninitialized_copy<ibmras::common::Logger * *,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
	add	esp, 16					; 00000010H
; Line 1319
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Ucopy@PAPAVLogger@common@ibmras@@@?$vector@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@IAEPAPAVLogger@common@ibmras@@PAPAV234@00@Z ENDP ; std::vector<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> >::_Ucopy<ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z
_TEXT	SEGMENT
$T38612 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 8
	mov	BYTE PTR $T38612[ebp], al
	movzx	edx, BYTE PTR $T38612[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
_TEXT	ENDS
PUBLIC	??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z
_TEXT	SEGMENT
$T38615 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z PROC ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2533
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2535
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 8
	mov	BYTE PTR $T38615[ebp], al
	movzx	edx, BYTE PTR $T38615[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
	add	esp, 16					; 00000010H
; Line 2536
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00@Z ENDP ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z
_TEXT	SEGMENT
$T38618 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z PROC ; std::_Allocate<ibmras::common::Logger *>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T38618[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T38618[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVLogger@common@ibmras@@@std@@YAPAPAVLogger@common@ibmras@@IPAPAV123@@Z ENDP ; std::_Allocate<ibmras::common::Logger *>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Odtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T38627 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:
; Line 36
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T38627[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T38627[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@2:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z
_TEXT	SEGMENT
$T38633 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 412
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 414
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *>
	add	esp, 8
	mov	BYTE PTR $T38633[ebp], al
	movzx	edx, BYTE PTR $T38633[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
	add	esp, 20					; 00000014H
; Line 415
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z PROC ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 516
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 518
	mov	al, BYTE PTR __Cat$[ebp]
; Line 519
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ENDP ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>, COMDAT
; Line 2152
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2153
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 2155
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 2156
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
; Line 2157
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_impl@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<ibmras::common::Logger * *,ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<ibmras::common::Logger *,ibmras::common::Logger *>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z
_TEXT	SEGMENT
$T38640 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z PROC ; std::_Uninitialized_copy<ibmras::common::Logger * *,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 412
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 414
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVLogger@common@ibmras@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVLogger@common@ibmras@@0@Z ; std::_Ptr_cat<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 8
	mov	BYTE PTR $T38640[ebp], al
	movzx	edx, BYTE PTR $T38640[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<ibmras::common::Logger *,ibmras::common::Logger *>
	add	esp, 20					; 00000014H
; Line 415
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy@PAPAVLogger@common@ibmras@@PAPAV123@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@@Z ENDP ; std::_Uninitialized_copy<ibmras::common::Logger * *,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 104
	push	ebp
	mov	ebp, esp
; Line 105
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@YAXPAPAVLogger@common@ibmras@@0AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2522
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2523
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 2525
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 2526
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
; Line 2527
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAPAVLogger@common@ibmras@@PAPAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<ibmras::common::Logger * *,ibmras::common::Logger * *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *>, COMDAT
; Line 485
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 487
	mov	al, BYTE PTR __Cat$[ebp]
; Line 488
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@AAPAPAVLogger@common@ibmras@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z ; std::_Dest_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *>
PUBLIC	??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z ; std::_Cons_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *,ibmras::common::Logger * const &>
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator++
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
tv84 = -28						; size = 4
tv83 = -21						; size = 1
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >, COMDAT
; Line 369
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 372
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 374
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 375
	jmp	SHORT $LN6@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator++
$LN6@Uninit_cop:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator!=
	mov	BYTE PTR tv83[ebp], al
	movzx	eax, BYTE PTR tv83[ebp]
	test	eax, eax
	je	SHORT $LN4@Uninit_cop
; Line 376
	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator*
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z ; std::_Cons_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *,ibmras::common::Logger * const &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 378
	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_cop:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop
; Line 379
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z ; std::_Dest_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:
; Line 380
	push	0
	push	0
	call	__CxxThrowException@8
; Line 381
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 382
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:
; Line 383
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@PAPAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@2@@std@@YAPAPAVLogger@common@ibmras@@V?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@0@0PAPAV123@AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >,ibmras::common::Logger * *,std::allocator<ibmras::common::Logger *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<ibmras::common::Logger *,ibmras::common::Logger *>, COMDAT
; Line 399
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 402
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 404
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 405
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAVLogger@common@ibmras@@PAV123@@std@@YAPAPAVLogger@common@ibmras@@PAPAV123@00AAV?$allocator@PAVLogger@common@ibmras@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<ibmras::common::Logger *,ibmras::common::Logger *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QBEABQAVLogger@common@ibmras@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@PAVLogger@common@ibmras@@V?$allocator@PAVLogger@common@ibmras@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<ibmras::common::Logger *,std::allocator<ibmras::common::Logger *> > >::operator++
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z ; std::allocator<ibmras::common::Logger *>::construct
PUBLIC	??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z ; std::forward<ibmras::common::Logger * const &>
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z PROC ; std::_Cons_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *,ibmras::common::Logger * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z ; std::forward<ibmras::common::Logger * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z ; std::allocator<ibmras::common::Logger *>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@ABQAV345@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@ABQAV234@@Z ENDP ; std::_Cons_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *,ibmras::common::Logger * const &>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z ; std::allocator<ibmras::common::Logger *>::destroy
; Function compile flags: /Odtp
;	COMDAT ??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z PROC ; std::_Dest_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z ; std::allocator<ibmras::common::Logger *>::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@PAVLogger@common@ibmras@@@std@@PAVLogger@common@ibmras@@@std@@YAXAAV?$allocator@PAVLogger@common@ibmras@@@0@PAPAVLogger@common@ibmras@@@Z ENDP ; std::_Dest_val<std::allocator<ibmras::common::Logger *>,ibmras::common::Logger *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z ; std::_Construct<ibmras::common::Logger *,ibmras::common::Logger * const &>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z PROC ; std::allocator<ibmras::common::Logger *>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z ; std::_Construct<ibmras::common::Logger *,ibmras::common::Logger * const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@ABQAV345@@Z ENDP ; std::allocator<ibmras::common::Logger *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z ; std::_Destroy<ibmras::common::Logger *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z PROC ; std::allocator<ibmras::common::Logger *>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z ; std::_Destroy<ibmras::common::Logger *>
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAVLogger@common@ibmras@@@std@@QAEXPAPAVLogger@common@ibmras@@@Z ENDP ; std::allocator<ibmras::common::Logger *>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z PROC ; std::forward<ibmras::common::Logger * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z ENDP ; std::forward<ibmras::common::Logger * const &>
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z$0
__ehfuncinfo$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T38681 = -24						; size = 4
$T38680 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z PROC ; std::_Construct<ibmras::common::Logger *,ibmras::common::Logger * const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T38681[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T38681[ebp], 0
	je	SHORT $LN3@Construct
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABQAVLogger@common@ibmras@@@std@@YAABQAVLogger@common@ibmras@@ABQAV123@@Z ; std::forward<ibmras::common::Logger * const &>
	add	esp, 4
	mov	ecx, DWORD PTR $T38681[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T38681[ebp]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@Construct
$LN3@Construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@Construct:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T38680[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T38681[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@PAVLogger@common@ibmras@@ABQAV123@@std@@YAXPAPAVLogger@common@ibmras@@ABQAV123@@Z ENDP ; std::_Construct<ibmras::common::Logger *,ibmras::common::Logger * const &>
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
; Line 62
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z PROC ; std::_Destroy<ibmras::common::Logger *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 62
	push	ebp
	mov	ebp, esp
; Line 64
	pop	ebp
	ret	0
??$_Destroy@PAVLogger@common@ibmras@@@std@@YAXPAPAVLogger@common@ibmras@@@Z ENDP ; std::_Destroy<ibmras::common::Logger *>
_TEXT	ENDS
EXTRN	??0Lock@port@common@ibmras@@QAE@XZ:PROC		; ibmras::common::port::Lock::Lock
;	COMDAT xdata$x
; File c:\workspaces\newagent2\runtime.tools\src\ibmras\monitoring\plugins\test\plugin.cpp
xdata$x	SEGMENT
__unwindtable$??__Elock@plugin@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__Elock@plugin@@YAXXZ$0
__ehfuncinfo$??__Elock@plugin@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__Elock@plugin@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??__Elock@plugin@@YAXXZ
text$yc	SEGMENT
tv71 = -24						; size = 4
$T38700 = -20						; size = 4
$T38699 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??__Elock@plugin@@YAXXZ PROC				; plugin::`dynamic initializer for 'lock'', COMDAT
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__Elock@plugin@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T38700[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T38700[ebp], 0
	je	SHORT $LN3@dynamic
	mov	ecx, DWORD PTR $T38700[ebp]
	call	??0Lock@port@common@ibmras@@QAE@XZ	; ibmras::common::port::Lock::Lock
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@dynamic
$LN3@dynamic:
	mov	DWORD PTR tv71[ebp], 0
$LN4@dynamic:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T38699[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T38699[ebp]
	mov	DWORD PTR ?lock@plugin@@3PAVLock@port@common@ibmras@@A, ecx ; plugin::lock
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__Elock@plugin@@YAXXZ$0:
	mov	eax, DWORD PTR $T38700[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??__Elock@plugin@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__Elock@plugin@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__Elock@plugin@@YAXXZ ENDP				; plugin::`dynamic initializer for 'lock''
EXTRN	_ibmras_common_LogManager_getLogger:PROC
; Function compile flags: /Odtp
;	COMDAT ??__Elogger@@YAXXZ
text$yc	SEGMENT
??__Elogger@@YAXXZ PROC					; `dynamic initializer for 'logger'', COMDAT
; Line 31
	push	ebp
	mov	ebp, esp
	push	OFFSET $SG31956
	call	_ibmras_common_LogManager_getLogger
	add	esp, 4
	mov	DWORD PTR ?logger@@3PAVLogger@common@ibmras@@A, eax ; logger
	pop	ebp
	ret	0
??__Elogger@@YAXXZ ENDP					; `dynamic initializer for 'logger''
text$yc	ENDS
PUBLIC	?lock@plugin@@3PAVLock@port@common@ibmras@@A	; plugin::lock
PUBLIC	?logger@@3PAVLogger@common@ibmras@@A		; logger
_BSS	SEGMENT
?lock@plugin@@3PAVLock@port@common@ibmras@@A DD 01H DUP (?) ; plugin::lock
?logger@@3PAVLogger@common@ibmras@@A DD 01H DUP (?)	; logger
_BSS	ENDS
CRT$XCU	SEGMENT
_lock$initializer$ DD FLAT:??__Elock@plugin@@YAXXZ
_logger$initializer$ DD FLAT:??__Elogger@@YAXXZ
CRT$XCU	ENDS
END
